[INFO ] 2023-10-03T01:14:52,268Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows ... {}
[INFO ] 2023-10-03T01:14:52,453Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-10-03T01:14:53,463Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-10-03T01:14:54,008Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2023-10-03T01:14:54,020Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-10-03T01:14:54,021Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-10-03T01:14:54,451Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-10-03T01:14:54,495Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2023-10-03T01:14:54,780Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-10-03T01:14:54,780Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-10-03T01:14:54,780Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2023-10-03T01:14:54,911Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-10-03T01:14:54,911Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-10-03T01:14:55,284Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2023-10-03T01:14:55,485Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-10-03T01:14:55,486Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-10-03T01:14:55,506Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-10-03T01:14:55,516Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-10-03T01:14:55,516Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-10-03T01:14:56,157Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-10-03T01:14:56,157Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2023-10-03T01:14:56,237Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-10-03T01:14:56,237Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2023-10-03T01:14:56,258Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-10-03T01:14:56,258Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2023-10-03T01:14:56,331Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-10-03T01:14:56,331Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-10-03T01:14:56,412Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-10-03T01:14:56,422Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-10-03T01:14:56,422Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-10-03T01:14:56,422Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-10-03T01:14:56,432Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-10-03T01:14:56,432Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-10-03T01:14:56,432Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-10-03T01:14:56,432Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-10-03T01:14:56,442Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T01:14:56,463Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-10-03T01:14:56,463Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-10-03T01:14:56,463Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-10-03T01:14:56,513Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-10-03T01:14:56,513Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-10-03T01:14:56,513Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-10-03T01:14:56,513Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-10-03T01:14:56,513Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2023-10-03T01:14:56,543Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-10-03T01:14:56,544Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-10-03T01:14:56,554Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-10-03T01:14:56,856Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-10-03T01:14:56,856Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-10-03T01:14:56,866Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-10-03T01:14:56,866Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-10-03T01:14:56,887Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T01:14:56,887Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2023-10-03T01:14:56,887Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T01:14:56,887Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2023-10-03T01:14:56,887Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T01:14:56,887Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2023-10-03T01:14:56,887Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T01:14:56,887Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-10-03T01:14:56,897Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2023-10-03T01:14:56,917Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-10-03T01:14:56,917Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-10-03T01:14:56,927Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-10-03T01:14:56,927Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T01:14:56,928Z [Connection worker] internal.TestCordappImpl. - Task :contracts:inspectClassesForKotlinIC {}
[INFO ] 2023-10-03T01:14:56,938Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T01:14:56,938Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2023-10-03T01:14:56,938Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T01:14:56,938Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-10-03T01:14:56,938Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-10-03T01:14:56,948Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-10-03T01:14:56,948Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-10-03T01:14:56,948Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-10-03T01:14:56,948Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-10-03T01:14:56,948Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-10-03T01:14:56,948Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2023-10-03T01:14:56,969Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-10-03T01:14:56,969Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-10-03T01:14:56,969Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-10-03T01:14:56,969Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-10-03T01:14:56,969Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-10-03T01:14:56,969Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-10-03T01:14:56,969Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-10-03T01:14:56,969Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T01:14:56,969Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2023-10-03T01:14:56,969Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T01:14:56,969Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2023-10-03T01:14:56,979Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T01:14:56,979Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2023-10-03T01:14:56,979Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T01:14:56,979Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-10-03T01:14:56,979Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2023-10-03T01:14:57,003Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-10-03T01:14:57,003Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-10-03T01:14:57,003Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-10-03T01:14:57,003Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-10-03T01:14:57,003Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-10-03T01:14:57,003Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-10-03T01:14:57,004Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-10-03T01:14:57,004Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T01:14:57,004Z [Connection worker] internal.TestCordappImpl. - Task :workflows:inspectClassesForKotlinIC {}
[INFO ] 2023-10-03T01:14:57,013Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T01:14:57,014Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2023-10-03T01:14:57,014Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T01:14:57,024Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-10-03T01:14:57,024Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2023-10-03T01:14:57,024Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-10-03T01:14:57,029Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-10-03T01:14:57,036Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/.gradle {}
[INFO ] 2023-10-03T01:14:57,046Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-10-03T01:14:57,066Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2023-10-03T01:15:01,341Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-011451.483-78AC30FECBE18C96/nodes/0/cordapps] {}
[INFO ] 2023-10-03T01:15:01,346Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011451.483-78AC30FECBE18C96/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011451.483-78AC30FECBE18C96/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T01:15:01,396Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011451.483-78AC30FECBE18C96/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T01:15:01,489Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011451.483-78AC30FECBE18C96/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T01:15:02,198Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:02,323Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T01:15:02,357Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T01:15:02,357Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T01:15:02,370Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T01:15:02,373Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGuN1BC259D8MTZtsDyw1bTmJjCzyuh1h5F3nGr2YB6uN, alias: identity-private-key {}
[INFO ] 2023-10-03T01:15:02,447Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T01:15:02,487Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T01:14:51.430Z
      epoch=1
  } {}
[INFO ] 2023-10-03T01:15:05,708Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T01:15:05,758Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T01:15:05,761Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T01:15:08,121Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T01:15:08,535Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T01:15:08,543Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295708535), owningKey=DLGuN1BC259D8MTZtsDyw1bTmJjCzyuh1h5F3nGr2YB6uN {}
[INFO ] 2023-10-03T01:15:08,543Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T01:15:08,679Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295708535) {}
[INFO ] 2023-10-03T01:15:08,726Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T01:15:08,748Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T01:15:08,749Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T01:15:08,777Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295708535), owningKey=DLGuN1BC259D8MTZtsDyw1bTmJjCzyuh1h5F3nGr2YB6uN {}
[INFO ] 2023-10-03T01:15:08,777Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:08,907Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E5D461AC8A58CEA4A10A469E2C6C7DAF0DA9EEB91FA04B2FB29718BD5511C7BC uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T01:15:08,913Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-10-03T01:15:09,335Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295708535) {}
[INFO ] 2023-10-03T01:15:09,341Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T01:15:09,343Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295708535), owningKey=DLGuN1BC259D8MTZtsDyw1bTmJjCzyuh1h5F3nGr2YB6uN {}
[INFO ] 2023-10-03T01:15:09,343Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:09,343Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295708535), owningKey=DLGuN1BC259D8MTZtsDyw1bTmJjCzyuh1h5F3nGr2YB6uN {}
[INFO ] 2023-10-03T01:15:09,343Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:09,347Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-011451.483-78AC30FECBE18C96/nodes/1/cordapps] {}
[INFO ] 2023-10-03T01:15:09,348Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011451.483-78AC30FECBE18C96/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011451.483-78AC30FECBE18C96/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T01:15:09,348Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011451.483-78AC30FECBE18C96/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T01:15:09,354Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011451.483-78AC30FECBE18C96/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T01:15:09,378Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:09,379Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T01:15:09,380Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T01:15:09,380Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T01:15:09,405Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T01:15:09,406Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLBqvuitMWRTrVSLhqozsyDEV3RzBhqtgxoKdjEStmCE5B, alias: identity-private-key {}
[INFO ] 2023-10-03T01:15:09,410Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T01:15:09,413Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T01:14:51.430Z
      epoch=1
  } {}
[INFO ] 2023-10-03T01:15:09,868Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T01:15:09,869Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:09,869Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:10,096Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:10,100Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T01:15:10,105Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295710100), owningKey=DLBqvuitMWRTrVSLhqozsyDEV3RzBhqtgxoKdjEStmCE5B {}
[INFO ] 2023-10-03T01:15:10,105Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:10,114Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295710100) {}
[INFO ] 2023-10-03T01:15:10,121Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T01:15:10,121Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T01:15:10,122Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T01:15:10,131Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295710100), owningKey=DLBqvuitMWRTrVSLhqozsyDEV3RzBhqtgxoKdjEStmCE5B {}
[INFO ] 2023-10-03T01:15:10,131Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:10,158Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E5D461AC8A58CEA4A10A469E2C6C7DAF0DA9EEB91FA04B2FB29718BD5511C7BC uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T01:15:10,181Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295710100) {}
[INFO ] 2023-10-03T01:15:10,181Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T01:15:10,184Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295708535), owningKey=DLGuN1BC259D8MTZtsDyw1bTmJjCzyuh1h5F3nGr2YB6uN {}
[INFO ] 2023-10-03T01:15:10,184Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T01:15:10,198Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295710100), owningKey=DLBqvuitMWRTrVSLhqozsyDEV3RzBhqtgxoKdjEStmCE5B {}
[INFO ] 2023-10-03T01:15:10,198Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:10,210Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295710100), owningKey=DLBqvuitMWRTrVSLhqozsyDEV3RzBhqtgxoKdjEStmCE5B {}
[INFO ] 2023-10-03T01:15:10,210Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:10,210Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295710100), owningKey=DLBqvuitMWRTrVSLhqozsyDEV3RzBhqtgxoKdjEStmCE5B {}
[INFO ] 2023-10-03T01:15:10,210Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:10,215Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-011451.483-78AC30FECBE18C96/nodes/2/cordapps] {}
[INFO ] 2023-10-03T01:15:10,215Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011451.483-78AC30FECBE18C96/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011451.483-78AC30FECBE18C96/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T01:15:10,215Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011451.483-78AC30FECBE18C96/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T01:15:10,221Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011451.483-78AC30FECBE18C96/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T01:15:10,242Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:10,243Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T01:15:10,244Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T01:15:10,244Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T01:15:10,272Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T01:15:10,272Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLAY4bfy5hABVDyjmK7JRJE8RATbxv9v7KRejdCZuGqBRt, alias: identity-private-key {}
[INFO ] 2023-10-03T01:15:10,276Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T01:15:10,279Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T01:14:51.430Z
      epoch=1
  } {}
[INFO ] 2023-10-03T01:15:10,556Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T01:15:10,557Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:10,557Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:10,720Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:10,723Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T01:15:10,724Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295710723), owningKey=DLAY4bfy5hABVDyjmK7JRJE8RATbxv9v7KRejdCZuGqBRt {}
[INFO ] 2023-10-03T01:15:10,724Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:10,729Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295710723) {}
[INFO ] 2023-10-03T01:15:10,733Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T01:15:10,733Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T01:15:10,733Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T01:15:10,739Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295710723), owningKey=DLAY4bfy5hABVDyjmK7JRJE8RATbxv9v7KRejdCZuGqBRt {}
[INFO ] 2023-10-03T01:15:10,739Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:10,759Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E5D461AC8A58CEA4A10A469E2C6C7DAF0DA9EEB91FA04B2FB29718BD5511C7BC uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T01:15:10,773Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295710723) {}
[INFO ] 2023-10-03T01:15:10,774Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T01:15:10,775Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295708535), owningKey=DLGuN1BC259D8MTZtsDyw1bTmJjCzyuh1h5F3nGr2YB6uN {}
[INFO ] 2023-10-03T01:15:10,775Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T01:15:10,783Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295710723), owningKey=DLAY4bfy5hABVDyjmK7JRJE8RATbxv9v7KRejdCZuGqBRt {}
[INFO ] 2023-10-03T01:15:10,783Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:10,790Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295710100), owningKey=DLBqvuitMWRTrVSLhqozsyDEV3RzBhqtgxoKdjEStmCE5B {}
[INFO ] 2023-10-03T01:15:10,790Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:10,797Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295710723), owningKey=DLAY4bfy5hABVDyjmK7JRJE8RATbxv9v7KRejdCZuGqBRt {}
[INFO ] 2023-10-03T01:15:10,797Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:10,803Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295710723), owningKey=DLAY4bfy5hABVDyjmK7JRJE8RATbxv9v7KRejdCZuGqBRt {}
[INFO ] 2023-10-03T01:15:10,803Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:10,803Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295710723), owningKey=DLAY4bfy5hABVDyjmK7JRJE8RATbxv9v7KRejdCZuGqBRt {}
[INFO ] 2023-10-03T01:15:10,803Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-10-03T01:15:10,804Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-10-03T01:15:10,804Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-10-03T01:15:10,807Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-10-03T01:15:10,807Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-10-03T01:15:11,042Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cdf36b0d-ad11-4af1-9b6f-641eca97e6ca, invocation_id=43c3bab4-4690-4783-b7eb-b4cd34e9cd98, invocation_timestamp=2023-10-03T01:15:10.848Z, origin=Only For Testing, session_id=43c3bab4-4690-4783-b7eb-b4cd34e9cd98, session_timestamp=2023-10-03T01:15:10.848Z, thread-id=408}
[WARN ] 2023-10-03T01:15:11,042Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.samples.example.contracts.IOUContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cdf36b0d-ad11-4af1-9b6f-641eca97e6ca, invocation_id=43c3bab4-4690-4783-b7eb-b4cd34e9cd98, invocation_timestamp=2023-10-03T01:15:10.848Z, origin=Only For Testing, session_id=43c3bab4-4690-4783-b7eb-b4cd34e9cd98, session_timestamp=2023-10-03T01:15:10.848Z, thread-id=408}
[INFO ] 2023-10-03T01:15:11,412Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=6c10ac6b-180c-4681-a341-1792f4c5da78, invocation_id=6f05d35a-e512-47d0-b8c4-5aeb2779b200, invocation_timestamp=2023-10-03T01:15:11.373Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6f05d35a-e512-47d0-b8c4-5aeb2779b200, session_timestamp=2023-10-03T01:15:11.373Z, thread-id=408, tx_id=86071B4745DC927AEF4ED983FDC934DD3B2D8BE21CBB56FC245C83C83B1FF416}
[INFO ] 2023-10-03T01:15:11,467Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=6c10ac6b-180c-4681-a341-1792f4c5da78, invocation_id=6f05d35a-e512-47d0-b8c4-5aeb2779b200, invocation_timestamp=2023-10-03T01:15:11.373Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6f05d35a-e512-47d0-b8c4-5aeb2779b200, session_timestamp=2023-10-03T01:15:11.373Z, thread-id=408, tx_id=86071B4745DC927AEF4ED983FDC934DD3B2D8BE21CBB56FC245C83C83B1FF416}
[INFO ] 2023-10-03T01:15:11,561Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cdf36b0d-ad11-4af1-9b6f-641eca97e6ca, invocation_id=43c3bab4-4690-4783-b7eb-b4cd34e9cd98, invocation_timestamp=2023-10-03T01:15:10.848Z, origin=Only For Testing, session_id=43c3bab4-4690-4783-b7eb-b4cd34e9cd98, session_timestamp=2023-10-03T01:15:10.848Z, thread-id=408, tx_id=86071B4745DC927AEF4ED983FDC934DD3B2D8BE21CBB56FC245C83C83B1FF416}
[INFO ] 2023-10-03T01:15:11,561Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cdf36b0d-ad11-4af1-9b6f-641eca97e6ca, invocation_id=43c3bab4-4690-4783-b7eb-b4cd34e9cd98, invocation_timestamp=2023-10-03T01:15:10.848Z, origin=Only For Testing, session_id=43c3bab4-4690-4783-b7eb-b4cd34e9cd98, session_timestamp=2023-10-03T01:15:10.848Z, thread-id=408, tx_id=86071B4745DC927AEF4ED983FDC934DD3B2D8BE21CBB56FC245C83C83B1FF416}
[INFO ] 2023-10-03T01:15:11,620Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cdf36b0d-ad11-4af1-9b6f-641eca97e6ca, invocation_id=43c3bab4-4690-4783-b7eb-b4cd34e9cd98, invocation_timestamp=2023-10-03T01:15:10.848Z, origin=Only For Testing, session_id=43c3bab4-4690-4783-b7eb-b4cd34e9cd98, session_timestamp=2023-10-03T01:15:10.848Z, thread-id=408, tx_id=86071B4745DC927AEF4ED983FDC934DD3B2D8BE21CBB56FC245C83C83B1FF416}
[INFO ] 2023-10-03T01:15:11,641Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=6c10ac6b-180c-4681-a341-1792f4c5da78, invocation_id=6f05d35a-e512-47d0-b8c4-5aeb2779b200, invocation_timestamp=2023-10-03T01:15:11.373Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6f05d35a-e512-47d0-b8c4-5aeb2779b200, session_timestamp=2023-10-03T01:15:11.373Z, thread-id=408, tx_id=86071B4745DC927AEF4ED983FDC934DD3B2D8BE21CBB56FC245C83C83B1FF416}
[INFO ] 2023-10-03T01:15:11,650Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=6c10ac6b-180c-4681-a341-1792f4c5da78, invocation_id=6f05d35a-e512-47d0-b8c4-5aeb2779b200, invocation_timestamp=2023-10-03T01:15:11.373Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6f05d35a-e512-47d0-b8c4-5aeb2779b200, session_timestamp=2023-10-03T01:15:11.373Z, thread-id=408, tx_id=86071B4745DC927AEF4ED983FDC934DD3B2D8BE21CBB56FC245C83C83B1FF416}
[INFO ] 2023-10-03T01:15:11,653Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=6c10ac6b-180c-4681-a341-1792f4c5da78, invocation_id=6f05d35a-e512-47d0-b8c4-5aeb2779b200, invocation_timestamp=2023-10-03T01:15:11.373Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6f05d35a-e512-47d0-b8c4-5aeb2779b200, session_timestamp=2023-10-03T01:15:11.373Z, thread-id=408, tx_id=86071B4745DC927AEF4ED983FDC934DD3B2D8BE21CBB56FC245C83C83B1FF416}
[INFO ] 2023-10-03T01:15:11,660Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=6c10ac6b-180c-4681-a341-1792f4c5da78, invocation_id=6f05d35a-e512-47d0-b8c4-5aeb2779b200, invocation_timestamp=2023-10-03T01:15:11.373Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6f05d35a-e512-47d0-b8c4-5aeb2779b200, session_timestamp=2023-10-03T01:15:11.373Z, thread-id=408, tx_id=86071B4745DC927AEF4ED983FDC934DD3B2D8BE21CBB56FC245C83C83B1FF416}
[INFO ] 2023-10-03T01:15:11,680Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cdf36b0d-ad11-4af1-9b6f-641eca97e6ca, invocation_id=43c3bab4-4690-4783-b7eb-b4cd34e9cd98, invocation_timestamp=2023-10-03T01:15:10.848Z, origin=Only For Testing, session_id=43c3bab4-4690-4783-b7eb-b4cd34e9cd98, session_timestamp=2023-10-03T01:15:10.848Z, thread-id=408, tx_id=86071B4745DC927AEF4ED983FDC934DD3B2D8BE21CBB56FC245C83C83B1FF416}
[INFO ] 2023-10-03T01:15:11,680Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cdf36b0d-ad11-4af1-9b6f-641eca97e6ca, invocation_id=43c3bab4-4690-4783-b7eb-b4cd34e9cd98, invocation_timestamp=2023-10-03T01:15:10.848Z, origin=Only For Testing, session_id=43c3bab4-4690-4783-b7eb-b4cd34e9cd98, session_timestamp=2023-10-03T01:15:10.848Z, thread-id=408, tx_id=86071B4745DC927AEF4ED983FDC934DD3B2D8BE21CBB56FC245C83C83B1FF416}
[INFO ] 2023-10-03T01:15:11,693Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T01:15:11,701Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2023-10-03T01:15:11,723Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T01:15:11,723Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:11,725Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T01:15:11,726Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2023-10-03T01:15:11,743Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T01:15:11,743Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:11,743Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T01:15:11,744Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2023-10-03T01:15:11,755Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T01:15:11,755Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:11,812Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-011511.758-3159DFA8E7FC48AE/nodes/0/cordapps] {}
[INFO ] 2023-10-03T01:15:11,812Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011511.758-3159DFA8E7FC48AE/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011511.758-3159DFA8E7FC48AE/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T01:15:11,812Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011511.758-3159DFA8E7FC48AE/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T01:15:11,817Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011511.758-3159DFA8E7FC48AE/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T01:15:11,834Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:11,834Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T01:15:11,835Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T01:15:11,835Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T01:15:11,837Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T01:15:11,837Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL7VW2KNQXKdiXEtSY5qdqshTsdLaBCppAuhjeuq38tsJC, alias: identity-private-key {}
[INFO ] 2023-10-03T01:15:11,841Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T01:15:11,845Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T01:15:11.758Z
      epoch=1
  } {}
[INFO ] 2023-10-03T01:15:12,156Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T01:15:12,157Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T01:15:12,157Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T01:15:12,339Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T01:15:12,342Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T01:15:12,343Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295712342), owningKey=DL7VW2KNQXKdiXEtSY5qdqshTsdLaBCppAuhjeuq38tsJC {}
[INFO ] 2023-10-03T01:15:12,343Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T01:15:12,352Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295712342) {}
[INFO ] 2023-10-03T01:15:12,357Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T01:15:12,357Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T01:15:12,357Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T01:15:12,362Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295712342), owningKey=DL7VW2KNQXKdiXEtSY5qdqshTsdLaBCppAuhjeuq38tsJC {}
[INFO ] 2023-10-03T01:15:12,362Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:12,377Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E5D461AC8A58CEA4A10A469E2C6C7DAF0DA9EEB91FA04B2FB29718BD5511C7BC uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T01:15:12,378Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-10-03T01:15:12,388Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295712342) {}
[INFO ] 2023-10-03T01:15:12,389Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T01:15:12,389Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295712342), owningKey=DL7VW2KNQXKdiXEtSY5qdqshTsdLaBCppAuhjeuq38tsJC {}
[INFO ] 2023-10-03T01:15:12,389Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:12,389Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295712342), owningKey=DL7VW2KNQXKdiXEtSY5qdqshTsdLaBCppAuhjeuq38tsJC {}
[INFO ] 2023-10-03T01:15:12,389Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:12,392Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-011511.758-3159DFA8E7FC48AE/nodes/1/cordapps] {}
[INFO ] 2023-10-03T01:15:12,392Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011511.758-3159DFA8E7FC48AE/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011511.758-3159DFA8E7FC48AE/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T01:15:12,393Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011511.758-3159DFA8E7FC48AE/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T01:15:12,397Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011511.758-3159DFA8E7FC48AE/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T01:15:12,415Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:12,415Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T01:15:12,416Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T01:15:12,416Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T01:15:12,443Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T01:15:12,444Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGB4tX2wNA7RPnayg5whKKqSSJyGYNTQvAciuMkSNEVUw, alias: identity-private-key {}
[INFO ] 2023-10-03T01:15:12,449Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T01:15:12,451Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T01:15:11.758Z
      epoch=1
  } {}
[INFO ] 2023-10-03T01:15:12,664Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T01:15:12,665Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:12,665Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:12,806Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:12,810Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T01:15:12,811Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295712810), owningKey=DLGB4tX2wNA7RPnayg5whKKqSSJyGYNTQvAciuMkSNEVUw {}
[INFO ] 2023-10-03T01:15:12,811Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:12,815Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295712810) {}
[INFO ] 2023-10-03T01:15:12,819Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T01:15:12,820Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T01:15:12,820Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T01:15:12,825Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295712810), owningKey=DLGB4tX2wNA7RPnayg5whKKqSSJyGYNTQvAciuMkSNEVUw {}
[INFO ] 2023-10-03T01:15:12,825Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:12,843Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E5D461AC8A58CEA4A10A469E2C6C7DAF0DA9EEB91FA04B2FB29718BD5511C7BC uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T01:15:12,856Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295712810) {}
[INFO ] 2023-10-03T01:15:12,856Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T01:15:12,857Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295712342), owningKey=DL7VW2KNQXKdiXEtSY5qdqshTsdLaBCppAuhjeuq38tsJC {}
[INFO ] 2023-10-03T01:15:12,857Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T01:15:12,866Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295712810), owningKey=DLGB4tX2wNA7RPnayg5whKKqSSJyGYNTQvAciuMkSNEVUw {}
[INFO ] 2023-10-03T01:15:12,866Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:12,871Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295712810), owningKey=DLGB4tX2wNA7RPnayg5whKKqSSJyGYNTQvAciuMkSNEVUw {}
[INFO ] 2023-10-03T01:15:12,872Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:12,872Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295712810), owningKey=DLGB4tX2wNA7RPnayg5whKKqSSJyGYNTQvAciuMkSNEVUw {}
[INFO ] 2023-10-03T01:15:12,872Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:12,875Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-011511.758-3159DFA8E7FC48AE/nodes/2/cordapps] {}
[INFO ] 2023-10-03T01:15:12,876Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011511.758-3159DFA8E7FC48AE/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011511.758-3159DFA8E7FC48AE/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T01:15:12,876Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011511.758-3159DFA8E7FC48AE/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T01:15:12,881Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011511.758-3159DFA8E7FC48AE/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T01:15:12,895Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:12,896Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T01:15:12,896Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T01:15:12,896Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T01:15:12,914Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T01:15:12,914Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL4X5fkGg4wQUPLUZeWoMwqwDdB1j8xS4nbTbWQRW8483o, alias: identity-private-key {}
[INFO ] 2023-10-03T01:15:12,918Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T01:15:12,919Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T01:15:11.758Z
      epoch=1
  } {}
[INFO ] 2023-10-03T01:15:13,186Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T01:15:13,187Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:13,187Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:13,327Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:13,336Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T01:15:13,339Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295713336), owningKey=DL4X5fkGg4wQUPLUZeWoMwqwDdB1j8xS4nbTbWQRW8483o {}
[INFO ] 2023-10-03T01:15:13,339Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:13,344Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295713336) {}
[INFO ] 2023-10-03T01:15:13,348Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T01:15:13,348Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T01:15:13,348Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T01:15:13,353Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295713336), owningKey=DL4X5fkGg4wQUPLUZeWoMwqwDdB1j8xS4nbTbWQRW8483o {}
[INFO ] 2023-10-03T01:15:13,353Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:13,369Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E5D461AC8A58CEA4A10A469E2C6C7DAF0DA9EEB91FA04B2FB29718BD5511C7BC uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T01:15:13,380Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295713336) {}
[INFO ] 2023-10-03T01:15:13,380Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T01:15:13,381Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295712342), owningKey=DL7VW2KNQXKdiXEtSY5qdqshTsdLaBCppAuhjeuq38tsJC {}
[INFO ] 2023-10-03T01:15:13,381Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T01:15:13,389Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295713336), owningKey=DL4X5fkGg4wQUPLUZeWoMwqwDdB1j8xS4nbTbWQRW8483o {}
[INFO ] 2023-10-03T01:15:13,389Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:13,396Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295712810), owningKey=DLGB4tX2wNA7RPnayg5whKKqSSJyGYNTQvAciuMkSNEVUw {}
[INFO ] 2023-10-03T01:15:13,396Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:13,402Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295713336), owningKey=DL4X5fkGg4wQUPLUZeWoMwqwDdB1j8xS4nbTbWQRW8483o {}
[INFO ] 2023-10-03T01:15:13,402Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:13,408Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295713336), owningKey=DL4X5fkGg4wQUPLUZeWoMwqwDdB1j8xS4nbTbWQRW8483o {}
[INFO ] 2023-10-03T01:15:13,408Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:13,408Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295713336), owningKey=DL4X5fkGg4wQUPLUZeWoMwqwDdB1j8xS4nbTbWQRW8483o {}
[INFO ] 2023-10-03T01:15:13,408Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-10-03T01:15:13,408Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-10-03T01:15:13,408Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-10-03T01:15:13,408Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-10-03T01:15:13,408Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[ERROR] 2023-10-03T01:15:13,443Z [Mock network] internal.Verifier. - Error validating transaction F8C9F498A04F7CDC44EF867ABE4545DF22C6A7C57BDC517685B999DAD48D72B5. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=969f84a5-07d9-46b3-8a11-033b29ef2a32, invocation_id=119e0ccd-cdcc-4841-b853-e5398d553c5b, invocation_timestamp=2023-10-03T01:15:13.409Z, origin=Only For Testing, session_id=119e0ccd-cdcc-4841-b853-e5398d553c5b, session_timestamp=2023-10-03T01:15:13.409Z, thread-id=788}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:248) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:228) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:186) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:144) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:668) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
[ERROR] 2023-10-03T01:15:13,444Z [Mock network] internal.Verifier. - Error validating transaction F8C9F498A04F7CDC44EF867ABE4545DF22C6A7C57BDC517685B999DAD48D72B5. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=969f84a5-07d9-46b3-8a11-033b29ef2a32, invocation_id=119e0ccd-cdcc-4841-b853-e5398d553c5b, invocation_timestamp=2023-10-03T01:15:13.409Z, origin=Only For Testing, session_id=119e0ccd-cdcc-4841-b853-e5398d553c5b, session_timestamp=2023-10-03T01:15:13.409Z, thread-id=788}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
[INFO ] 2023-10-03T01:15:13,444Z [Mock network] corda.flow. - Flow raised an error: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: F8C9F498A04F7CDC44EF867ABE4545DF22C6A7C57BDC517685B999DAD48D72B5. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=969f84a5-07d9-46b3-8a11-033b29ef2a32, invocation_id=119e0ccd-cdcc-4841-b853-e5398d553c5b, invocation_timestamp=2023-10-03T01:15:13.409Z, origin=Only For Testing, session_id=119e0ccd-cdcc-4841-b853-e5398d553c5b, session_timestamp=2023-10-03T01:15:13.409Z, thread-id=788}
[INFO ] 2023-10-03T01:15:13,448Z [Mock network] statemachine.StaffedFlowHospital. - Flow [969f84a5-07d9-46b3-8a11-033b29ef2a32] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=119e0ccd-cdcc-4841-b853-e5398d553c5b, timestamp: 2023-10-03T01:15:13.409Z, entityType: Invocation, sessionId=119e0ccd-cdcc-4841-b853-e5398d553c5b, timestamp: 2023-10-03T01:15:13.409Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=D443F099AB06FED0A3AAFF471DAC223868706042873630B2EC9E2CB8D535C90B), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=9CDAC4B7A0CC837CE2FA9FCCB0552DD7A01B6AB958D4704FD84C224AA4D92ABA), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=net.corda.samples.example.flows.ExampleFlow$Initiator@128be91e, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=9bb86c3b-1b82-4b7f-b185-f5d36925f7a0, reloadCheckpointAfterSuspendCount=null, numberOfCommits=0, lock=java.util.concurrent.Semaphore@75505a3a[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=969f84a5-07d9-46b3-8a11-033b29ef2a32, invocation_id=119e0ccd-cdcc-4841-b853-e5398d553c5b, invocation_timestamp=2023-10-03T01:15:13.409Z, origin=Only For Testing, session_id=119e0ccd-cdcc-4841-b853-e5398d553c5b, session_timestamp=2023-10-03T01:15:13.409Z, thread-id=788}
[INFO ] 2023-10-03T01:15:13,450Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=969f84a5-07d9-46b3-8a11-033b29ef2a32, invocation_id=119e0ccd-cdcc-4841-b853-e5398d553c5b, invocation_timestamp=2023-10-03T01:15:13.409Z, origin=Only For Testing, session_id=119e0ccd-cdcc-4841-b853-e5398d553c5b, session_timestamp=2023-10-03T01:15:13.409Z, thread-id=788}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: F8C9F498A04F7CDC44EF867ABE4545DF22C6A7C57BDC517685B999DAD48D72B5
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[INFO ] 2023-10-03T01:15:13,452Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=969f84a5-07d9-46b3-8a11-033b29ef2a32, invocation_id=119e0ccd-cdcc-4841-b853-e5398d553c5b, invocation_timestamp=2023-10-03T01:15:13.409Z, origin=Only For Testing, session_id=119e0ccd-cdcc-4841-b853-e5398d553c5b, session_timestamp=2023-10-03T01:15:13.409Z, thread-id=788}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: F8C9F498A04F7CDC44EF867ABE4545DF22C6A7C57BDC517685B999DAD48D72B5
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[WARN ] 2023-10-03T01:15:13,462Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [969f84a5-07d9-46b3-8a11-033b29ef2a32] errored, dumping all transitions:

 --- Transition of flow [969f84a5-07d9-46b3-8a11-033b29ef2a32] ---
  Timestamp: 2023-10-03T01:15:13.414Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[969f84a5-07d9-46b3-8a11-033b29ef2a32], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=119e0ccd-cdcc-4841-b853-e5398d553c5b, timestamp: 2023-10-03T01:15:13.409Z, entityType: Invocation, sessionId=119e0ccd-cdcc-4841-b853-e5398d553c5b, timestamp: 2023-10-03T01:15:13.409Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=D443F099AB06FED0A3AAFF471DAC223868706042873630B2EC9E2CB8D535C90B), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=9CDAC4B7A0CC837CE2FA9FCCB0552DD7A01B6AB958D4704FD84C224AA4D92ABA), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@152a4ebf])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@152a4ebf])
    SignalFlowHasStarted(flowId=[969f84a5-07d9-46b3-8a11-033b29ef2a32])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@152a4ebf]
    []


 --- Transition of flow [969f84a5-07d9-46b3-8a11-033b29ef2a32] ---
  Timestamp: 2023-10-03T01:15:13.453Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: F8C9F498A04F7CDC44EF867ABE4545DF22C6A7C57BDC517685B999DAD48D72B5, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=2596946231953215909, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: F8C9F498A04F7CDC44EF867ABE4545DF22C6A7C57BDC517685B999DAD48D72B5)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-10-03T01:15:13.409Z
    2023-10-03T01:15:13.446Z


 --- Transition of flow [969f84a5-07d9-46b3-8a11-033b29ef2a32] ---
  Timestamp: 2023-10-03T01:15:13.456Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [969f84a5-07d9-46b3-8a11-033b29ef2a32] ---
  Timestamp: 2023-10-03T01:15:13.456Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-10-03T01:15:13.446Z
    2023-10-03T01:15:13.456Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=969f84a5-07d9-46b3-8a11-033b29ef2a32, invocation_id=119e0ccd-cdcc-4841-b853-e5398d553c5b, invocation_timestamp=2023-10-03T01:15:13.409Z, origin=Only For Testing, session_id=119e0ccd-cdcc-4841-b853-e5398d553c5b, session_timestamp=2023-10-03T01:15:13.409Z, thread-id=788}
[WARN ] 2023-10-03T01:15:13,462Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [969f84a5-07d9-46b3-8a11-033b29ef2a32] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=969f84a5-07d9-46b3-8a11-033b29ef2a32, invocation_id=119e0ccd-cdcc-4841-b853-e5398d553c5b, invocation_timestamp=2023-10-03T01:15:13.409Z, origin=Only For Testing, session_id=119e0ccd-cdcc-4841-b853-e5398d553c5b, session_timestamp=2023-10-03T01:15:13.409Z, thread-id=788}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: F8C9F498A04F7CDC44EF867ABE4545DF22C6A7C57BDC517685B999DAD48D72B5
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[WARN ] 2023-10-03T01:15:13,462Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=969f84a5-07d9-46b3-8a11-033b29ef2a32, invocation_id=119e0ccd-cdcc-4841-b853-e5398d553c5b, invocation_timestamp=2023-10-03T01:15:13.409Z, origin=Only For Testing, session_id=119e0ccd-cdcc-4841-b853-e5398d553c5b, session_timestamp=2023-10-03T01:15:13.409Z, thread-id=788}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: F8C9F498A04F7CDC44EF867ABE4545DF22C6A7C57BDC517685B999DAD48D72B5
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[WARN ] 2023-10-03T01:15:13,476Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [969f84a5-07d9-46b3-8a11-033b29ef2a32] errored, dumping all transitions:

 --- Transition of flow [969f84a5-07d9-46b3-8a11-033b29ef2a32] ---
  Timestamp: 2023-10-03T01:15:13.414Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[969f84a5-07d9-46b3-8a11-033b29ef2a32], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=119e0ccd-cdcc-4841-b853-e5398d553c5b, timestamp: 2023-10-03T01:15:13.409Z, entityType: Invocation, sessionId=119e0ccd-cdcc-4841-b853-e5398d553c5b, timestamp: 2023-10-03T01:15:13.409Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=D443F099AB06FED0A3AAFF471DAC223868706042873630B2EC9E2CB8D535C90B), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=9CDAC4B7A0CC837CE2FA9FCCB0552DD7A01B6AB958D4704FD84C224AA4D92ABA), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@152a4ebf])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@152a4ebf])
    SignalFlowHasStarted(flowId=[969f84a5-07d9-46b3-8a11-033b29ef2a32])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@152a4ebf]
    []


 --- Transition of flow [969f84a5-07d9-46b3-8a11-033b29ef2a32] ---
  Timestamp: 2023-10-03T01:15:13.453Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: F8C9F498A04F7CDC44EF867ABE4545DF22C6A7C57BDC517685B999DAD48D72B5, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=2596946231953215909, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: F8C9F498A04F7CDC44EF867ABE4545DF22C6A7C57BDC517685B999DAD48D72B5)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-10-03T01:15:13.409Z
    2023-10-03T01:15:13.446Z


 --- Transition of flow [969f84a5-07d9-46b3-8a11-033b29ef2a32] ---
  Timestamp: 2023-10-03T01:15:13.456Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [969f84a5-07d9-46b3-8a11-033b29ef2a32] ---
  Timestamp: 2023-10-03T01:15:13.456Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-10-03T01:15:13.446Z
    2023-10-03T01:15:13.456Z


 --- Transition of flow [969f84a5-07d9-46b3-8a11-033b29ef2a32] ---
  Timestamp: 2023-10-03T01:15:13.471Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: F8C9F498A04F7CDC44EF867ABE4545DF22C6A7C57BDC517685B999DAD48D72B5, errorId=2596946231953215909)], sessions=[], senderUUID=9bb86c3b-1b82-4b7f-b185-f5d36925f7a0)
    CreateTransaction
    RemoveCheckpoint(id=[969f84a5-07d9-46b3-8a11-033b29ef2a32], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=969f84a5-07d9-46b3-8a11-033b29ef2a32)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[969f84a5-07d9-46b3-8a11-033b29ef2a32], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=2596946231953215909, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: F8C9F498A04F7CDC44EF867ABE4545DF22C6A7C57BDC517685B999DAD48D72B5)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=119e0ccd-cdcc-4841-b853-e5398d553c5b, timestamp: 2023-10-03T01:15:13.409Z, entityType: Invocation, sessionId=119e0ccd-cdcc-4841-b853-e5398d553c5b, timestamp: 2023-10-03T01:15:13.409Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=D443F099AB06FED0A3AAFF471DAC223868706042873630B2EC9E2CB8D535C90B), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=2), flowState=net.corda.node.services.statemachine.FlowState$Finished@4288068b, errorState=Errored(errors=[FlowError(errorId=2596946231953215909, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: F8C9F498A04F7CDC44EF867ABE4545DF22C6A7C57BDC517685B999DAD48D72B5)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=net.corda.samples.example.flows.ExampleFlow$Initiator@128be91e, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=9bb86c3b-1b82-4b7f-b185-f5d36925f7a0, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@75505a3a[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=9CDAC4B7A0CC837CE2FA9FCCB0552DD7A01B6AB958D4704FD84C224AA4D92ABA)
    net.corda.node.services.statemachine.FlowState$Finished@4288068b
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.timestamp: 
    2023-10-03T01:15:13.456Z
    2023-10-03T01:15:13.462Z
checkpoint.status: 
    RUNNABLE
    FAILED
numberOfCommits: 
    0
    2
isRemoved: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=969f84a5-07d9-46b3-8a11-033b29ef2a32, invocation_id=119e0ccd-cdcc-4841-b853-e5398d553c5b, invocation_timestamp=2023-10-03T01:15:13.409Z, origin=Only For Testing, session_id=119e0ccd-cdcc-4841-b853-e5398d553c5b, session_timestamp=2023-10-03T01:15:13.409Z, thread-id=788}
[WARN ] 2023-10-03T01:15:13,476Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [969f84a5-07d9-46b3-8a11-033b29ef2a32] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=969f84a5-07d9-46b3-8a11-033b29ef2a32, invocation_id=119e0ccd-cdcc-4841-b853-e5398d553c5b, invocation_timestamp=2023-10-03T01:15:13.409Z, origin=Only For Testing, session_id=119e0ccd-cdcc-4841-b853-e5398d553c5b, session_timestamp=2023-10-03T01:15:13.409Z, thread-id=788}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: F8C9F498A04F7CDC44EF867ABE4545DF22C6A7C57BDC517685B999DAD48D72B5
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[INFO ] 2023-10-03T01:15:13,482Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T01:15:13,483Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2023-10-03T01:15:13,494Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T01:15:13,494Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:13,495Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T01:15:13,495Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-5) {}
[INFO ] 2023-10-03T01:15:13,504Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T01:15:13,504Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:13,505Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T01:15:13,505Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-6) {}
[INFO ] 2023-10-03T01:15:13,514Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T01:15:13,514Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:13,560Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-011513.515-A9748776892EF783/nodes/0/cordapps] {}
[INFO ] 2023-10-03T01:15:13,560Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011513.515-A9748776892EF783/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011513.515-A9748776892EF783/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T01:15:13,560Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011513.515-A9748776892EF783/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T01:15:13,569Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011513.515-A9748776892EF783/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T01:15:13,583Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:13,584Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T01:15:13,584Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T01:15:13,584Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T01:15:13,586Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T01:15:13,586Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLDjaZyDPbChKPZa2oiZSeFYmaAv9akGz73Th3onqpwvCQ, alias: identity-private-key {}
[INFO ] 2023-10-03T01:15:13,590Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T01:15:13,593Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T01:15:13.515Z
      epoch=1
  } {}
[INFO ] 2023-10-03T01:15:13,837Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T01:15:13,838Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T01:15:13,838Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T01:15:13,969Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T01:15:13,971Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T01:15:13,972Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295713971), owningKey=DLDjaZyDPbChKPZa2oiZSeFYmaAv9akGz73Th3onqpwvCQ {}
[INFO ] 2023-10-03T01:15:13,972Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T01:15:13,980Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295713971) {}
[INFO ] 2023-10-03T01:15:13,986Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T01:15:13,986Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T01:15:13,986Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T01:15:13,991Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295713971), owningKey=DLDjaZyDPbChKPZa2oiZSeFYmaAv9akGz73Th3onqpwvCQ {}
[INFO ] 2023-10-03T01:15:13,991Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:14,004Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E5D461AC8A58CEA4A10A469E2C6C7DAF0DA9EEB91FA04B2FB29718BD5511C7BC uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T01:15:14,006Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-10-03T01:15:14,015Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295713971) {}
[INFO ] 2023-10-03T01:15:14,015Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T01:15:14,015Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295713971), owningKey=DLDjaZyDPbChKPZa2oiZSeFYmaAv9akGz73Th3onqpwvCQ {}
[INFO ] 2023-10-03T01:15:14,015Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:14,015Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295713971), owningKey=DLDjaZyDPbChKPZa2oiZSeFYmaAv9akGz73Th3onqpwvCQ {}
[INFO ] 2023-10-03T01:15:14,015Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:14,018Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-011513.515-A9748776892EF783/nodes/1/cordapps] {}
[INFO ] 2023-10-03T01:15:14,018Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011513.515-A9748776892EF783/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011513.515-A9748776892EF783/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T01:15:14,018Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011513.515-A9748776892EF783/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T01:15:14,022Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011513.515-A9748776892EF783/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T01:15:14,038Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:14,038Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T01:15:14,039Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T01:15:14,039Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T01:15:14,056Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T01:15:14,056Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLLjTeTr53itUJkmawHQQkGNCZ1VV23PxsPGdXaPFFVh9, alias: identity-private-key {}
[INFO ] 2023-10-03T01:15:14,060Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T01:15:14,061Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T01:15:13.515Z
      epoch=1
  } {}
[INFO ] 2023-10-03T01:15:14,256Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T01:15:14,258Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:14,258Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:14,373Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:14,376Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T01:15:14,378Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295714376), owningKey=DLLjTeTr53itUJkmawHQQkGNCZ1VV23PxsPGdXaPFFVh9 {}
[INFO ] 2023-10-03T01:15:14,378Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:14,381Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295714376) {}
[INFO ] 2023-10-03T01:15:14,385Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T01:15:14,385Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T01:15:14,385Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T01:15:14,389Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295714376), owningKey=DLLjTeTr53itUJkmawHQQkGNCZ1VV23PxsPGdXaPFFVh9 {}
[INFO ] 2023-10-03T01:15:14,389Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:14,403Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E5D461AC8A58CEA4A10A469E2C6C7DAF0DA9EEB91FA04B2FB29718BD5511C7BC uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T01:15:14,413Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295714376) {}
[INFO ] 2023-10-03T01:15:14,414Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T01:15:14,415Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295713971), owningKey=DLDjaZyDPbChKPZa2oiZSeFYmaAv9akGz73Th3onqpwvCQ {}
[INFO ] 2023-10-03T01:15:14,415Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T01:15:14,426Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295714376), owningKey=DLLjTeTr53itUJkmawHQQkGNCZ1VV23PxsPGdXaPFFVh9 {}
[INFO ] 2023-10-03T01:15:14,426Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:14,431Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295714376), owningKey=DLLjTeTr53itUJkmawHQQkGNCZ1VV23PxsPGdXaPFFVh9 {}
[INFO ] 2023-10-03T01:15:14,431Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:14,431Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295714376), owningKey=DLLjTeTr53itUJkmawHQQkGNCZ1VV23PxsPGdXaPFFVh9 {}
[INFO ] 2023-10-03T01:15:14,431Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:14,434Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-011513.515-A9748776892EF783/nodes/2/cordapps] {}
[INFO ] 2023-10-03T01:15:14,434Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011513.515-A9748776892EF783/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011513.515-A9748776892EF783/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T01:15:14,434Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011513.515-A9748776892EF783/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T01:15:14,439Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011513.515-A9748776892EF783/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T01:15:14,453Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:14,454Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T01:15:14,454Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T01:15:14,454Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T01:15:14,476Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T01:15:14,476Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLH5gGQkaR58WSqPRYJHgdjzMDEqfyVrY4XeeBfN1Knc5g, alias: identity-private-key {}
[INFO ] 2023-10-03T01:15:14,483Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T01:15:14,485Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T01:15:13.515Z
      epoch=1
  } {}
[INFO ] 2023-10-03T01:15:14,678Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T01:15:14,679Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:14,679Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:14,789Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:14,792Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T01:15:14,794Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295714792), owningKey=DLH5gGQkaR58WSqPRYJHgdjzMDEqfyVrY4XeeBfN1Knc5g {}
[INFO ] 2023-10-03T01:15:14,794Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:14,797Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295714792) {}
[INFO ] 2023-10-03T01:15:14,800Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T01:15:14,800Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T01:15:14,800Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T01:15:14,804Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295714792), owningKey=DLH5gGQkaR58WSqPRYJHgdjzMDEqfyVrY4XeeBfN1Knc5g {}
[INFO ] 2023-10-03T01:15:14,804Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:14,819Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E5D461AC8A58CEA4A10A469E2C6C7DAF0DA9EEB91FA04B2FB29718BD5511C7BC uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T01:15:14,830Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295714792) {}
[INFO ] 2023-10-03T01:15:14,830Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T01:15:14,831Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295713971), owningKey=DLDjaZyDPbChKPZa2oiZSeFYmaAv9akGz73Th3onqpwvCQ {}
[INFO ] 2023-10-03T01:15:14,831Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T01:15:14,837Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295714792), owningKey=DLH5gGQkaR58WSqPRYJHgdjzMDEqfyVrY4XeeBfN1Knc5g {}
[INFO ] 2023-10-03T01:15:14,837Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:14,843Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295714376), owningKey=DLLjTeTr53itUJkmawHQQkGNCZ1VV23PxsPGdXaPFFVh9 {}
[INFO ] 2023-10-03T01:15:14,843Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:14,849Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295714792), owningKey=DLH5gGQkaR58WSqPRYJHgdjzMDEqfyVrY4XeeBfN1Knc5g {}
[INFO ] 2023-10-03T01:15:14,849Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:14,855Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295714792), owningKey=DLH5gGQkaR58WSqPRYJHgdjzMDEqfyVrY4XeeBfN1Knc5g {}
[INFO ] 2023-10-03T01:15:14,855Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:14,855Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295714792), owningKey=DLH5gGQkaR58WSqPRYJHgdjzMDEqfyVrY4XeeBfN1Knc5g {}
[INFO ] 2023-10-03T01:15:14,855Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-10-03T01:15:14,855Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-10-03T01:15:14,855Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-10-03T01:15:14,855Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-10-03T01:15:14,855Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T01:15:14,956Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=afef4771-7df0-4984-90d3-27df31ad3ed6, invocation_id=31ce17a0-345c-4585-84b7-a0e0355b2234, invocation_timestamp=2023-10-03T01:15:14.941Z, origin=O=Mock Company 1, L=London, C=GB, session_id=31ce17a0-345c-4585-84b7-a0e0355b2234, session_timestamp=2023-10-03T01:15:14.941Z, thread-id=1142, tx_id=502CED196F9E7C6C5AAAA782D368BCD2992D1B30BBDA10E1E3A7B9BCB84040B0}
[INFO ] 2023-10-03T01:15:14,965Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=afef4771-7df0-4984-90d3-27df31ad3ed6, invocation_id=31ce17a0-345c-4585-84b7-a0e0355b2234, invocation_timestamp=2023-10-03T01:15:14.941Z, origin=O=Mock Company 1, L=London, C=GB, session_id=31ce17a0-345c-4585-84b7-a0e0355b2234, session_timestamp=2023-10-03T01:15:14.941Z, thread-id=1142, tx_id=502CED196F9E7C6C5AAAA782D368BCD2992D1B30BBDA10E1E3A7B9BCB84040B0}
[INFO ] 2023-10-03T01:15:15,028Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=ed3d04a6-fc55-4d64-93a9-6838c421091b, invocation_id=6f4ce20a-d240-435d-935d-0409e7838610, invocation_timestamp=2023-10-03T01:15:14.856Z, origin=Only For Testing, session_id=6f4ce20a-d240-435d-935d-0409e7838610, session_timestamp=2023-10-03T01:15:14.856Z, thread-id=1142, tx_id=502CED196F9E7C6C5AAAA782D368BCD2992D1B30BBDA10E1E3A7B9BCB84040B0}
[INFO ] 2023-10-03T01:15:15,028Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=ed3d04a6-fc55-4d64-93a9-6838c421091b, invocation_id=6f4ce20a-d240-435d-935d-0409e7838610, invocation_timestamp=2023-10-03T01:15:14.856Z, origin=Only For Testing, session_id=6f4ce20a-d240-435d-935d-0409e7838610, session_timestamp=2023-10-03T01:15:14.856Z, thread-id=1142, tx_id=502CED196F9E7C6C5AAAA782D368BCD2992D1B30BBDA10E1E3A7B9BCB84040B0}
[INFO ] 2023-10-03T01:15:15,039Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=ed3d04a6-fc55-4d64-93a9-6838c421091b, invocation_id=6f4ce20a-d240-435d-935d-0409e7838610, invocation_timestamp=2023-10-03T01:15:14.856Z, origin=Only For Testing, session_id=6f4ce20a-d240-435d-935d-0409e7838610, session_timestamp=2023-10-03T01:15:14.856Z, thread-id=1142, tx_id=502CED196F9E7C6C5AAAA782D368BCD2992D1B30BBDA10E1E3A7B9BCB84040B0}
[INFO ] 2023-10-03T01:15:15,050Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=afef4771-7df0-4984-90d3-27df31ad3ed6, invocation_id=31ce17a0-345c-4585-84b7-a0e0355b2234, invocation_timestamp=2023-10-03T01:15:14.941Z, origin=O=Mock Company 1, L=London, C=GB, session_id=31ce17a0-345c-4585-84b7-a0e0355b2234, session_timestamp=2023-10-03T01:15:14.941Z, thread-id=1142, tx_id=502CED196F9E7C6C5AAAA782D368BCD2992D1B30BBDA10E1E3A7B9BCB84040B0}
[INFO ] 2023-10-03T01:15:15,054Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=afef4771-7df0-4984-90d3-27df31ad3ed6, invocation_id=31ce17a0-345c-4585-84b7-a0e0355b2234, invocation_timestamp=2023-10-03T01:15:14.941Z, origin=O=Mock Company 1, L=London, C=GB, session_id=31ce17a0-345c-4585-84b7-a0e0355b2234, session_timestamp=2023-10-03T01:15:14.941Z, thread-id=1142, tx_id=502CED196F9E7C6C5AAAA782D368BCD2992D1B30BBDA10E1E3A7B9BCB84040B0}
[INFO ] 2023-10-03T01:15:15,056Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=afef4771-7df0-4984-90d3-27df31ad3ed6, invocation_id=31ce17a0-345c-4585-84b7-a0e0355b2234, invocation_timestamp=2023-10-03T01:15:14.941Z, origin=O=Mock Company 1, L=London, C=GB, session_id=31ce17a0-345c-4585-84b7-a0e0355b2234, session_timestamp=2023-10-03T01:15:14.941Z, thread-id=1142, tx_id=502CED196F9E7C6C5AAAA782D368BCD2992D1B30BBDA10E1E3A7B9BCB84040B0}
[INFO ] 2023-10-03T01:15:15,062Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=afef4771-7df0-4984-90d3-27df31ad3ed6, invocation_id=31ce17a0-345c-4585-84b7-a0e0355b2234, invocation_timestamp=2023-10-03T01:15:14.941Z, origin=O=Mock Company 1, L=London, C=GB, session_id=31ce17a0-345c-4585-84b7-a0e0355b2234, session_timestamp=2023-10-03T01:15:14.941Z, thread-id=1142, tx_id=502CED196F9E7C6C5AAAA782D368BCD2992D1B30BBDA10E1E3A7B9BCB84040B0}
[INFO ] 2023-10-03T01:15:15,070Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=ed3d04a6-fc55-4d64-93a9-6838c421091b, invocation_id=6f4ce20a-d240-435d-935d-0409e7838610, invocation_timestamp=2023-10-03T01:15:14.856Z, origin=Only For Testing, session_id=6f4ce20a-d240-435d-935d-0409e7838610, session_timestamp=2023-10-03T01:15:14.856Z, thread-id=1142, tx_id=502CED196F9E7C6C5AAAA782D368BCD2992D1B30BBDA10E1E3A7B9BCB84040B0}
[INFO ] 2023-10-03T01:15:15,070Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=ed3d04a6-fc55-4d64-93a9-6838c421091b, invocation_id=6f4ce20a-d240-435d-935d-0409e7838610, invocation_timestamp=2023-10-03T01:15:14.856Z, origin=Only For Testing, session_id=6f4ce20a-d240-435d-935d-0409e7838610, session_timestamp=2023-10-03T01:15:14.856Z, thread-id=1142, tx_id=502CED196F9E7C6C5AAAA782D368BCD2992D1B30BBDA10E1E3A7B9BCB84040B0}
[INFO ] 2023-10-03T01:15:15,077Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T01:15:15,078Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-7) {}
[INFO ] 2023-10-03T01:15:15,090Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T01:15:15,090Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:15,091Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T01:15:15,091Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-8) {}
[INFO ] 2023-10-03T01:15:15,104Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T01:15:15,104Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:15,105Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T01:15:15,105Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-9) {}
[INFO ] 2023-10-03T01:15:15,114Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T01:15:15,114Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:15,157Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-011515.115-A48CB0D8B4610D44/nodes/0/cordapps] {}
[INFO ] 2023-10-03T01:15:15,157Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011515.115-A48CB0D8B4610D44/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011515.115-A48CB0D8B4610D44/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T01:15:15,157Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011515.115-A48CB0D8B4610D44/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T01:15:15,161Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011515.115-A48CB0D8B4610D44/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T01:15:15,176Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:15,176Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T01:15:15,176Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T01:15:15,176Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T01:15:15,178Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T01:15:15,178Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLCaVYA52EwE23ELmaAudE7adAMvoy45gdkeeCHN9bsQZV, alias: identity-private-key {}
[INFO ] 2023-10-03T01:15:15,182Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T01:15:15,185Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T01:15:15.115Z
      epoch=1
  } {}
[INFO ] 2023-10-03T01:15:15,438Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T01:15:15,439Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T01:15:15,439Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T01:15:15,553Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T01:15:15,555Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T01:15:15,557Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295715555), owningKey=DLCaVYA52EwE23ELmaAudE7adAMvoy45gdkeeCHN9bsQZV {}
[INFO ] 2023-10-03T01:15:15,557Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T01:15:15,565Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295715555) {}
[INFO ] 2023-10-03T01:15:15,570Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T01:15:15,570Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T01:15:15,570Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T01:15:15,574Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295715555), owningKey=DLCaVYA52EwE23ELmaAudE7adAMvoy45gdkeeCHN9bsQZV {}
[INFO ] 2023-10-03T01:15:15,574Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:15,589Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E5D461AC8A58CEA4A10A469E2C6C7DAF0DA9EEB91FA04B2FB29718BD5511C7BC uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T01:15:15,590Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-10-03T01:15:15,598Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295715555) {}
[INFO ] 2023-10-03T01:15:15,598Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T01:15:15,598Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295715555), owningKey=DLCaVYA52EwE23ELmaAudE7adAMvoy45gdkeeCHN9bsQZV {}
[INFO ] 2023-10-03T01:15:15,598Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:15,598Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295715555), owningKey=DLCaVYA52EwE23ELmaAudE7adAMvoy45gdkeeCHN9bsQZV {}
[INFO ] 2023-10-03T01:15:15,598Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:15,605Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-011515.115-A48CB0D8B4610D44/nodes/1/cordapps] {}
[INFO ] 2023-10-03T01:15:15,605Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011515.115-A48CB0D8B4610D44/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011515.115-A48CB0D8B4610D44/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T01:15:15,605Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011515.115-A48CB0D8B4610D44/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T01:15:15,609Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011515.115-A48CB0D8B4610D44/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T01:15:15,621Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:15,621Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T01:15:15,622Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T01:15:15,622Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T01:15:15,638Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T01:15:15,638Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLENaa1TzCs6YLEAVc9Jxpnh87EGRdTu6oVQFeVvMFUMZn, alias: identity-private-key {}
[INFO ] 2023-10-03T01:15:15,642Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T01:15:15,643Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T01:15:15.115Z
      epoch=1
  } {}
[INFO ] 2023-10-03T01:15:15,822Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T01:15:15,822Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:15,822Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:15,952Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:15,955Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T01:15:15,957Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295715955), owningKey=DLENaa1TzCs6YLEAVc9Jxpnh87EGRdTu6oVQFeVvMFUMZn {}
[INFO ] 2023-10-03T01:15:15,957Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:15,961Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295715955) {}
[INFO ] 2023-10-03T01:15:15,963Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T01:15:15,964Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T01:15:15,964Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T01:15:15,968Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295715955), owningKey=DLENaa1TzCs6YLEAVc9Jxpnh87EGRdTu6oVQFeVvMFUMZn {}
[INFO ] 2023-10-03T01:15:15,968Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:15,983Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E5D461AC8A58CEA4A10A469E2C6C7DAF0DA9EEB91FA04B2FB29718BD5511C7BC uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T01:15:15,992Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295715955) {}
[INFO ] 2023-10-03T01:15:15,992Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T01:15:15,993Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295715555), owningKey=DLCaVYA52EwE23ELmaAudE7adAMvoy45gdkeeCHN9bsQZV {}
[INFO ] 2023-10-03T01:15:15,993Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T01:15:15,999Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295715955), owningKey=DLENaa1TzCs6YLEAVc9Jxpnh87EGRdTu6oVQFeVvMFUMZn {}
[INFO ] 2023-10-03T01:15:15,999Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:16,004Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295715955), owningKey=DLENaa1TzCs6YLEAVc9Jxpnh87EGRdTu6oVQFeVvMFUMZn {}
[INFO ] 2023-10-03T01:15:16,004Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:16,004Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295715955), owningKey=DLENaa1TzCs6YLEAVc9Jxpnh87EGRdTu6oVQFeVvMFUMZn {}
[INFO ] 2023-10-03T01:15:16,004Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:16,007Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-011515.115-A48CB0D8B4610D44/nodes/2/cordapps] {}
[INFO ] 2023-10-03T01:15:16,007Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011515.115-A48CB0D8B4610D44/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011515.115-A48CB0D8B4610D44/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T01:15:16,007Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011515.115-A48CB0D8B4610D44/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T01:15:16,012Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011515.115-A48CB0D8B4610D44/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T01:15:16,026Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:16,027Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T01:15:16,027Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T01:15:16,028Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T01:15:16,052Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T01:15:16,052Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLFsnqCoUd6nMgSVmiRJSBkn4yX29sDVcnTARgbqsZ4oYW, alias: identity-private-key {}
[INFO ] 2023-10-03T01:15:16,058Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T01:15:16,059Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T01:15:15.115Z
      epoch=1
  } {}
[INFO ] 2023-10-03T01:15:16,239Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T01:15:16,240Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:16,240Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:16,331Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:16,333Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T01:15:16,335Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295716333), owningKey=DLFsnqCoUd6nMgSVmiRJSBkn4yX29sDVcnTARgbqsZ4oYW {}
[INFO ] 2023-10-03T01:15:16,335Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:16,338Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295716333) {}
[INFO ] 2023-10-03T01:15:16,340Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T01:15:16,340Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T01:15:16,340Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T01:15:16,343Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295716333), owningKey=DLFsnqCoUd6nMgSVmiRJSBkn4yX29sDVcnTARgbqsZ4oYW {}
[INFO ] 2023-10-03T01:15:16,343Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:16,356Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E5D461AC8A58CEA4A10A469E2C6C7DAF0DA9EEB91FA04B2FB29718BD5511C7BC uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T01:15:16,363Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295716333) {}
[INFO ] 2023-10-03T01:15:16,363Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T01:15:16,364Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295715555), owningKey=DLCaVYA52EwE23ELmaAudE7adAMvoy45gdkeeCHN9bsQZV {}
[INFO ] 2023-10-03T01:15:16,364Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T01:15:16,370Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295716333), owningKey=DLFsnqCoUd6nMgSVmiRJSBkn4yX29sDVcnTARgbqsZ4oYW {}
[INFO ] 2023-10-03T01:15:16,370Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:16,375Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295715955), owningKey=DLENaa1TzCs6YLEAVc9Jxpnh87EGRdTu6oVQFeVvMFUMZn {}
[INFO ] 2023-10-03T01:15:16,375Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:16,381Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295716333), owningKey=DLFsnqCoUd6nMgSVmiRJSBkn4yX29sDVcnTARgbqsZ4oYW {}
[INFO ] 2023-10-03T01:15:16,381Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:16,385Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295716333), owningKey=DLFsnqCoUd6nMgSVmiRJSBkn4yX29sDVcnTARgbqsZ4oYW {}
[INFO ] 2023-10-03T01:15:16,385Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:16,385Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295716333), owningKey=DLFsnqCoUd6nMgSVmiRJSBkn4yX29sDVcnTARgbqsZ4oYW {}
[INFO ] 2023-10-03T01:15:16,385Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-10-03T01:15:16,386Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-10-03T01:15:16,386Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-10-03T01:15:16,386Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-10-03T01:15:16,386Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T01:15:16,454Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=056093a1-7749-4c2d-b0ba-01a370e6842b, invocation_id=482e7122-ee42-4a56-8c50-e6954daed45a, invocation_timestamp=2023-10-03T01:15:16.444Z, origin=O=Mock Company 1, L=London, C=GB, session_id=482e7122-ee42-4a56-8c50-e6954daed45a, session_timestamp=2023-10-03T01:15:16.444Z, thread-id=1520, tx_id=9D1BB7721A9680B9DBF1FDABD8520901C3E893EB2FB76C0AE46DD8439D25B826}
[INFO ] 2023-10-03T01:15:16,461Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=056093a1-7749-4c2d-b0ba-01a370e6842b, invocation_id=482e7122-ee42-4a56-8c50-e6954daed45a, invocation_timestamp=2023-10-03T01:15:16.444Z, origin=O=Mock Company 1, L=London, C=GB, session_id=482e7122-ee42-4a56-8c50-e6954daed45a, session_timestamp=2023-10-03T01:15:16.444Z, thread-id=1520, tx_id=9D1BB7721A9680B9DBF1FDABD8520901C3E893EB2FB76C0AE46DD8439D25B826}
[INFO ] 2023-10-03T01:15:16,520Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=9aba85b8-8abb-4e5e-a986-e3a18e0f497c, invocation_id=59820e01-68e4-4a53-be84-347ad5f4fc5a, invocation_timestamp=2023-10-03T01:15:16.386Z, origin=Only For Testing, session_id=59820e01-68e4-4a53-be84-347ad5f4fc5a, session_timestamp=2023-10-03T01:15:16.386Z, thread-id=1520, tx_id=9D1BB7721A9680B9DBF1FDABD8520901C3E893EB2FB76C0AE46DD8439D25B826}
[INFO ] 2023-10-03T01:15:16,520Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=9aba85b8-8abb-4e5e-a986-e3a18e0f497c, invocation_id=59820e01-68e4-4a53-be84-347ad5f4fc5a, invocation_timestamp=2023-10-03T01:15:16.386Z, origin=Only For Testing, session_id=59820e01-68e4-4a53-be84-347ad5f4fc5a, session_timestamp=2023-10-03T01:15:16.386Z, thread-id=1520, tx_id=9D1BB7721A9680B9DBF1FDABD8520901C3E893EB2FB76C0AE46DD8439D25B826}
[INFO ] 2023-10-03T01:15:16,530Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=9aba85b8-8abb-4e5e-a986-e3a18e0f497c, invocation_id=59820e01-68e4-4a53-be84-347ad5f4fc5a, invocation_timestamp=2023-10-03T01:15:16.386Z, origin=Only For Testing, session_id=59820e01-68e4-4a53-be84-347ad5f4fc5a, session_timestamp=2023-10-03T01:15:16.386Z, thread-id=1520, tx_id=9D1BB7721A9680B9DBF1FDABD8520901C3E893EB2FB76C0AE46DD8439D25B826}
[INFO ] 2023-10-03T01:15:16,540Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=056093a1-7749-4c2d-b0ba-01a370e6842b, invocation_id=482e7122-ee42-4a56-8c50-e6954daed45a, invocation_timestamp=2023-10-03T01:15:16.444Z, origin=O=Mock Company 1, L=London, C=GB, session_id=482e7122-ee42-4a56-8c50-e6954daed45a, session_timestamp=2023-10-03T01:15:16.444Z, thread-id=1520, tx_id=9D1BB7721A9680B9DBF1FDABD8520901C3E893EB2FB76C0AE46DD8439D25B826}
[INFO ] 2023-10-03T01:15:16,545Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=056093a1-7749-4c2d-b0ba-01a370e6842b, invocation_id=482e7122-ee42-4a56-8c50-e6954daed45a, invocation_timestamp=2023-10-03T01:15:16.444Z, origin=O=Mock Company 1, L=London, C=GB, session_id=482e7122-ee42-4a56-8c50-e6954daed45a, session_timestamp=2023-10-03T01:15:16.444Z, thread-id=1520, tx_id=9D1BB7721A9680B9DBF1FDABD8520901C3E893EB2FB76C0AE46DD8439D25B826}
[INFO ] 2023-10-03T01:15:16,547Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=056093a1-7749-4c2d-b0ba-01a370e6842b, invocation_id=482e7122-ee42-4a56-8c50-e6954daed45a, invocation_timestamp=2023-10-03T01:15:16.444Z, origin=O=Mock Company 1, L=London, C=GB, session_id=482e7122-ee42-4a56-8c50-e6954daed45a, session_timestamp=2023-10-03T01:15:16.444Z, thread-id=1520, tx_id=9D1BB7721A9680B9DBF1FDABD8520901C3E893EB2FB76C0AE46DD8439D25B826}
[INFO ] 2023-10-03T01:15:16,552Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=056093a1-7749-4c2d-b0ba-01a370e6842b, invocation_id=482e7122-ee42-4a56-8c50-e6954daed45a, invocation_timestamp=2023-10-03T01:15:16.444Z, origin=O=Mock Company 1, L=London, C=GB, session_id=482e7122-ee42-4a56-8c50-e6954daed45a, session_timestamp=2023-10-03T01:15:16.444Z, thread-id=1520, tx_id=9D1BB7721A9680B9DBF1FDABD8520901C3E893EB2FB76C0AE46DD8439D25B826}
[INFO ] 2023-10-03T01:15:16,559Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=9aba85b8-8abb-4e5e-a986-e3a18e0f497c, invocation_id=59820e01-68e4-4a53-be84-347ad5f4fc5a, invocation_timestamp=2023-10-03T01:15:16.386Z, origin=Only For Testing, session_id=59820e01-68e4-4a53-be84-347ad5f4fc5a, session_timestamp=2023-10-03T01:15:16.386Z, thread-id=1520, tx_id=9D1BB7721A9680B9DBF1FDABD8520901C3E893EB2FB76C0AE46DD8439D25B826}
[INFO ] 2023-10-03T01:15:16,559Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=9aba85b8-8abb-4e5e-a986-e3a18e0f497c, invocation_id=59820e01-68e4-4a53-be84-347ad5f4fc5a, invocation_timestamp=2023-10-03T01:15:16.386Z, origin=Only For Testing, session_id=59820e01-68e4-4a53-be84-347ad5f4fc5a, session_timestamp=2023-10-03T01:15:16.386Z, thread-id=1520, tx_id=9D1BB7721A9680B9DBF1FDABD8520901C3E893EB2FB76C0AE46DD8439D25B826}
[INFO ] 2023-10-03T01:15:16,573Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T01:15:16,574Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-10) {}
[INFO ] 2023-10-03T01:15:16,586Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T01:15:16,586Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:16,586Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T01:15:16,587Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-11) {}
[INFO ] 2023-10-03T01:15:16,600Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T01:15:16,600Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:16,600Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T01:15:16,601Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-12) {}
[INFO ] 2023-10-03T01:15:16,610Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T01:15:16,610Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:16,646Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-011516.611-C0916E4D8FFE4240/nodes/0/cordapps] {}
[INFO ] 2023-10-03T01:15:16,646Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011516.611-C0916E4D8FFE4240/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011516.611-C0916E4D8FFE4240/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T01:15:16,646Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011516.611-C0916E4D8FFE4240/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T01:15:16,650Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011516.611-C0916E4D8FFE4240/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T01:15:16,662Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:16,662Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T01:15:16,663Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T01:15:16,663Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T01:15:16,664Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T01:15:16,664Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGp74BXko8HJVjrMj7tNE4ym7yVPby5aDVRD2EjaV6Ua7, alias: identity-private-key {}
[INFO ] 2023-10-03T01:15:16,672Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T01:15:16,675Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T01:15:16.611Z
      epoch=1
  } {}
[INFO ] 2023-10-03T01:15:16,857Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T01:15:16,858Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T01:15:16,858Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T01:15:16,954Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T01:15:16,956Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T01:15:16,957Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295716956), owningKey=DLGp74BXko8HJVjrMj7tNE4ym7yVPby5aDVRD2EjaV6Ua7 {}
[INFO ] 2023-10-03T01:15:16,957Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T01:15:16,964Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295716956) {}
[INFO ] 2023-10-03T01:15:16,967Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T01:15:16,968Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T01:15:16,968Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T01:15:16,971Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295716956), owningKey=DLGp74BXko8HJVjrMj7tNE4ym7yVPby5aDVRD2EjaV6Ua7 {}
[INFO ] 2023-10-03T01:15:16,971Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:16,988Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E5D461AC8A58CEA4A10A469E2C6C7DAF0DA9EEB91FA04B2FB29718BD5511C7BC uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T01:15:16,989Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-10-03T01:15:16,995Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295716956) {}
[INFO ] 2023-10-03T01:15:16,995Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T01:15:16,995Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295716956), owningKey=DLGp74BXko8HJVjrMj7tNE4ym7yVPby5aDVRD2EjaV6Ua7 {}
[INFO ] 2023-10-03T01:15:16,995Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:16,995Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295716956), owningKey=DLGp74BXko8HJVjrMj7tNE4ym7yVPby5aDVRD2EjaV6Ua7 {}
[INFO ] 2023-10-03T01:15:16,995Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:16,998Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-011516.611-C0916E4D8FFE4240/nodes/1/cordapps] {}
[INFO ] 2023-10-03T01:15:16,998Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011516.611-C0916E4D8FFE4240/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011516.611-C0916E4D8FFE4240/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T01:15:16,998Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011516.611-C0916E4D8FFE4240/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T01:15:17,001Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011516.611-C0916E4D8FFE4240/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T01:15:17,012Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:17,013Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T01:15:17,013Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T01:15:17,013Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T01:15:17,029Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T01:15:17,029Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLBg4MSCHZm1DhvPzoZMtgwwYYVJT9SMYyLpt9yd8aZpxC, alias: identity-private-key {}
[INFO ] 2023-10-03T01:15:17,033Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T01:15:17,034Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T01:15:16.611Z
      epoch=1
  } {}
[INFO ] 2023-10-03T01:15:17,201Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T01:15:17,202Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:17,202Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:17,301Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:17,304Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T01:15:17,305Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295717304), owningKey=DLBg4MSCHZm1DhvPzoZMtgwwYYVJT9SMYyLpt9yd8aZpxC {}
[INFO ] 2023-10-03T01:15:17,305Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:17,308Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295717304) {}
[INFO ] 2023-10-03T01:15:17,310Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T01:15:17,311Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T01:15:17,311Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T01:15:17,314Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295717304), owningKey=DLBg4MSCHZm1DhvPzoZMtgwwYYVJT9SMYyLpt9yd8aZpxC {}
[INFO ] 2023-10-03T01:15:17,314Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:17,327Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E5D461AC8A58CEA4A10A469E2C6C7DAF0DA9EEB91FA04B2FB29718BD5511C7BC uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T01:15:17,335Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295717304) {}
[INFO ] 2023-10-03T01:15:17,335Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T01:15:17,336Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295716956), owningKey=DLGp74BXko8HJVjrMj7tNE4ym7yVPby5aDVRD2EjaV6Ua7 {}
[INFO ] 2023-10-03T01:15:17,336Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T01:15:17,340Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295717304), owningKey=DLBg4MSCHZm1DhvPzoZMtgwwYYVJT9SMYyLpt9yd8aZpxC {}
[INFO ] 2023-10-03T01:15:17,340Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:17,343Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295717304), owningKey=DLBg4MSCHZm1DhvPzoZMtgwwYYVJT9SMYyLpt9yd8aZpxC {}
[INFO ] 2023-10-03T01:15:17,343Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:17,343Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295717304), owningKey=DLBg4MSCHZm1DhvPzoZMtgwwYYVJT9SMYyLpt9yd8aZpxC {}
[INFO ] 2023-10-03T01:15:17,343Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:17,345Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-011516.611-C0916E4D8FFE4240/nodes/2/cordapps] {}
[INFO ] 2023-10-03T01:15:17,345Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011516.611-C0916E4D8FFE4240/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011516.611-C0916E4D8FFE4240/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T01:15:17,346Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011516.611-C0916E4D8FFE4240/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T01:15:17,349Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011516.611-C0916E4D8FFE4240/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T01:15:17,359Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:17,360Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T01:15:17,360Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T01:15:17,360Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T01:15:17,376Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T01:15:17,376Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL131i5kJvpCi2xQtAsS3VxV3EK9Qtno4h2nyrNfkhCinM, alias: identity-private-key {}
[INFO ] 2023-10-03T01:15:17,380Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T01:15:17,380Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T01:15:16.611Z
      epoch=1
  } {}
[INFO ] 2023-10-03T01:15:17,526Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T01:15:17,526Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:17,526Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:17,608Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:17,610Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T01:15:17,611Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295717610), owningKey=DL131i5kJvpCi2xQtAsS3VxV3EK9Qtno4h2nyrNfkhCinM {}
[INFO ] 2023-10-03T01:15:17,611Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:17,614Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295717610) {}
[INFO ] 2023-10-03T01:15:17,616Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T01:15:17,616Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T01:15:17,616Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T01:15:17,619Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295717610), owningKey=DL131i5kJvpCi2xQtAsS3VxV3EK9Qtno4h2nyrNfkhCinM {}
[INFO ] 2023-10-03T01:15:17,619Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:17,632Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E5D461AC8A58CEA4A10A469E2C6C7DAF0DA9EEB91FA04B2FB29718BD5511C7BC uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T01:15:17,638Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295717610) {}
[INFO ] 2023-10-03T01:15:17,638Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T01:15:17,639Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295716956), owningKey=DLGp74BXko8HJVjrMj7tNE4ym7yVPby5aDVRD2EjaV6Ua7 {}
[INFO ] 2023-10-03T01:15:17,639Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T01:15:17,643Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295717610), owningKey=DL131i5kJvpCi2xQtAsS3VxV3EK9Qtno4h2nyrNfkhCinM {}
[INFO ] 2023-10-03T01:15:17,643Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:17,647Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295717304), owningKey=DLBg4MSCHZm1DhvPzoZMtgwwYYVJT9SMYyLpt9yd8aZpxC {}
[INFO ] 2023-10-03T01:15:17,647Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:17,651Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295717610), owningKey=DL131i5kJvpCi2xQtAsS3VxV3EK9Qtno4h2nyrNfkhCinM {}
[INFO ] 2023-10-03T01:15:17,651Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:17,654Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295717610), owningKey=DL131i5kJvpCi2xQtAsS3VxV3EK9Qtno4h2nyrNfkhCinM {}
[INFO ] 2023-10-03T01:15:17,654Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:17,654Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295717610), owningKey=DL131i5kJvpCi2xQtAsS3VxV3EK9Qtno4h2nyrNfkhCinM {}
[INFO ] 2023-10-03T01:15:17,654Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-10-03T01:15:17,655Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-10-03T01:15:17,655Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-10-03T01:15:17,655Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-10-03T01:15:17,655Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T01:15:17,720Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=4fceff2c-74a2-44bc-b274-8d507c0739d3, invocation_id=1becc8dc-d6ea-4742-b053-7c8d9dacc17f, invocation_timestamp=2023-10-03T01:15:17.709Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1becc8dc-d6ea-4742-b053-7c8d9dacc17f, session_timestamp=2023-10-03T01:15:17.709Z, thread-id=1898, tx_id=1915C50ECDA9158CD1E4BC6012F41DC8013724938C401088A9D238A62431F337}
[INFO ] 2023-10-03T01:15:17,727Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=4fceff2c-74a2-44bc-b274-8d507c0739d3, invocation_id=1becc8dc-d6ea-4742-b053-7c8d9dacc17f, invocation_timestamp=2023-10-03T01:15:17.709Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1becc8dc-d6ea-4742-b053-7c8d9dacc17f, session_timestamp=2023-10-03T01:15:17.709Z, thread-id=1898, tx_id=1915C50ECDA9158CD1E4BC6012F41DC8013724938C401088A9D238A62431F337}
[INFO ] 2023-10-03T01:15:17,989Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=b5d2c705-70df-4522-bfe3-4137ec27fd48, invocation_id=ae580ebd-1ed9-4ccf-a332-4e2ac5075373, invocation_timestamp=2023-10-03T01:15:17.655Z, origin=Only For Testing, session_id=ae580ebd-1ed9-4ccf-a332-4e2ac5075373, session_timestamp=2023-10-03T01:15:17.655Z, thread-id=1898, tx_id=1915C50ECDA9158CD1E4BC6012F41DC8013724938C401088A9D238A62431F337}
[INFO ] 2023-10-03T01:15:17,989Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=b5d2c705-70df-4522-bfe3-4137ec27fd48, invocation_id=ae580ebd-1ed9-4ccf-a332-4e2ac5075373, invocation_timestamp=2023-10-03T01:15:17.655Z, origin=Only For Testing, session_id=ae580ebd-1ed9-4ccf-a332-4e2ac5075373, session_timestamp=2023-10-03T01:15:17.655Z, thread-id=1898, tx_id=1915C50ECDA9158CD1E4BC6012F41DC8013724938C401088A9D238A62431F337}
[INFO ] 2023-10-03T01:15:17,999Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=b5d2c705-70df-4522-bfe3-4137ec27fd48, invocation_id=ae580ebd-1ed9-4ccf-a332-4e2ac5075373, invocation_timestamp=2023-10-03T01:15:17.655Z, origin=Only For Testing, session_id=ae580ebd-1ed9-4ccf-a332-4e2ac5075373, session_timestamp=2023-10-03T01:15:17.655Z, thread-id=1898, tx_id=1915C50ECDA9158CD1E4BC6012F41DC8013724938C401088A9D238A62431F337}
[INFO ] 2023-10-03T01:15:18,009Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=4fceff2c-74a2-44bc-b274-8d507c0739d3, invocation_id=1becc8dc-d6ea-4742-b053-7c8d9dacc17f, invocation_timestamp=2023-10-03T01:15:17.709Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1becc8dc-d6ea-4742-b053-7c8d9dacc17f, session_timestamp=2023-10-03T01:15:17.709Z, thread-id=1898, tx_id=1915C50ECDA9158CD1E4BC6012F41DC8013724938C401088A9D238A62431F337}
[INFO ] 2023-10-03T01:15:18,014Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=4fceff2c-74a2-44bc-b274-8d507c0739d3, invocation_id=1becc8dc-d6ea-4742-b053-7c8d9dacc17f, invocation_timestamp=2023-10-03T01:15:17.709Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1becc8dc-d6ea-4742-b053-7c8d9dacc17f, session_timestamp=2023-10-03T01:15:17.709Z, thread-id=1898, tx_id=1915C50ECDA9158CD1E4BC6012F41DC8013724938C401088A9D238A62431F337}
[INFO ] 2023-10-03T01:15:18,015Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=4fceff2c-74a2-44bc-b274-8d507c0739d3, invocation_id=1becc8dc-d6ea-4742-b053-7c8d9dacc17f, invocation_timestamp=2023-10-03T01:15:17.709Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1becc8dc-d6ea-4742-b053-7c8d9dacc17f, session_timestamp=2023-10-03T01:15:17.709Z, thread-id=1898, tx_id=1915C50ECDA9158CD1E4BC6012F41DC8013724938C401088A9D238A62431F337}
[INFO ] 2023-10-03T01:15:18,020Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=4fceff2c-74a2-44bc-b274-8d507c0739d3, invocation_id=1becc8dc-d6ea-4742-b053-7c8d9dacc17f, invocation_timestamp=2023-10-03T01:15:17.709Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1becc8dc-d6ea-4742-b053-7c8d9dacc17f, session_timestamp=2023-10-03T01:15:17.709Z, thread-id=1898, tx_id=1915C50ECDA9158CD1E4BC6012F41DC8013724938C401088A9D238A62431F337}
[INFO ] 2023-10-03T01:15:18,026Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=b5d2c705-70df-4522-bfe3-4137ec27fd48, invocation_id=ae580ebd-1ed9-4ccf-a332-4e2ac5075373, invocation_timestamp=2023-10-03T01:15:17.655Z, origin=Only For Testing, session_id=ae580ebd-1ed9-4ccf-a332-4e2ac5075373, session_timestamp=2023-10-03T01:15:17.655Z, thread-id=1898, tx_id=1915C50ECDA9158CD1E4BC6012F41DC8013724938C401088A9D238A62431F337}
[INFO ] 2023-10-03T01:15:18,026Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=b5d2c705-70df-4522-bfe3-4137ec27fd48, invocation_id=ae580ebd-1ed9-4ccf-a332-4e2ac5075373, invocation_timestamp=2023-10-03T01:15:17.655Z, origin=Only For Testing, session_id=ae580ebd-1ed9-4ccf-a332-4e2ac5075373, session_timestamp=2023-10-03T01:15:17.655Z, thread-id=1898, tx_id=1915C50ECDA9158CD1E4BC6012F41DC8013724938C401088A9D238A62431F337}
[INFO ] 2023-10-03T01:15:18,030Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T01:15:18,031Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-13) {}
[INFO ] 2023-10-03T01:15:18,043Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T01:15:18,043Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:18,044Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T01:15:18,044Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-14) {}
[INFO ] 2023-10-03T01:15:18,058Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T01:15:18,058Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:18,058Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T01:15:18,059Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-15) {}
[INFO ] 2023-10-03T01:15:18,068Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T01:15:18,068Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:18,103Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-011518.069-29D9B4B4651AEEDE/nodes/0/cordapps] {}
[INFO ] 2023-10-03T01:15:18,103Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011518.069-29D9B4B4651AEEDE/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011518.069-29D9B4B4651AEEDE/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T01:15:18,103Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011518.069-29D9B4B4651AEEDE/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T01:15:18,106Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011518.069-29D9B4B4651AEEDE/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T01:15:18,118Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:18,119Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T01:15:18,119Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T01:15:18,119Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T01:15:18,120Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T01:15:18,120Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLAoftihgmFfnfibLmKy36DcZyVn43srMe6mgMP1aAWCkE, alias: identity-private-key {}
[INFO ] 2023-10-03T01:15:18,124Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T01:15:18,127Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T01:15:18.069Z
      epoch=1
  } {}
[INFO ] 2023-10-03T01:15:18,350Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T01:15:18,352Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T01:15:18,352Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T01:15:18,466Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T01:15:18,469Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T01:15:18,471Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295718469), owningKey=DLAoftihgmFfnfibLmKy36DcZyVn43srMe6mgMP1aAWCkE {}
[INFO ] 2023-10-03T01:15:18,471Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T01:15:18,480Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295718469) {}
[INFO ] 2023-10-03T01:15:18,486Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T01:15:18,486Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T01:15:18,486Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T01:15:18,491Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295718469), owningKey=DLAoftihgmFfnfibLmKy36DcZyVn43srMe6mgMP1aAWCkE {}
[INFO ] 2023-10-03T01:15:18,491Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:18,507Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E5D461AC8A58CEA4A10A469E2C6C7DAF0DA9EEB91FA04B2FB29718BD5511C7BC uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T01:15:18,509Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-10-03T01:15:18,519Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295718469) {}
[INFO ] 2023-10-03T01:15:18,519Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T01:15:18,519Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295718469), owningKey=DLAoftihgmFfnfibLmKy36DcZyVn43srMe6mgMP1aAWCkE {}
[INFO ] 2023-10-03T01:15:18,519Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:18,519Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295718469), owningKey=DLAoftihgmFfnfibLmKy36DcZyVn43srMe6mgMP1aAWCkE {}
[INFO ] 2023-10-03T01:15:18,519Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:18,522Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-011518.069-29D9B4B4651AEEDE/nodes/1/cordapps] {}
[INFO ] 2023-10-03T01:15:18,523Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011518.069-29D9B4B4651AEEDE/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011518.069-29D9B4B4651AEEDE/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T01:15:18,523Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011518.069-29D9B4B4651AEEDE/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T01:15:18,526Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011518.069-29D9B4B4651AEEDE/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T01:15:18,544Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:18,545Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T01:15:18,545Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T01:15:18,545Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T01:15:18,562Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T01:15:18,562Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLBxFV4SDSPkPWHkKgLTBA2ap3tdK7hMJhuz6cEHnXhDdw, alias: identity-private-key {}
[INFO ] 2023-10-03T01:15:18,566Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T01:15:18,567Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T01:15:18.069Z
      epoch=1
  } {}
[INFO ] 2023-10-03T01:15:18,733Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T01:15:18,734Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:18,734Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:18,824Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:18,826Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T01:15:18,827Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295718826), owningKey=DLBxFV4SDSPkPWHkKgLTBA2ap3tdK7hMJhuz6cEHnXhDdw {}
[INFO ] 2023-10-03T01:15:18,827Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:18,831Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295718826) {}
[INFO ] 2023-10-03T01:15:18,833Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T01:15:18,833Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T01:15:18,833Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T01:15:18,837Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295718826), owningKey=DLBxFV4SDSPkPWHkKgLTBA2ap3tdK7hMJhuz6cEHnXhDdw {}
[INFO ] 2023-10-03T01:15:18,837Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:18,849Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E5D461AC8A58CEA4A10A469E2C6C7DAF0DA9EEB91FA04B2FB29718BD5511C7BC uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T01:15:18,857Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295718826) {}
[INFO ] 2023-10-03T01:15:18,857Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T01:15:18,857Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295718469), owningKey=DLAoftihgmFfnfibLmKy36DcZyVn43srMe6mgMP1aAWCkE {}
[INFO ] 2023-10-03T01:15:18,857Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T01:15:18,861Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295718826), owningKey=DLBxFV4SDSPkPWHkKgLTBA2ap3tdK7hMJhuz6cEHnXhDdw {}
[INFO ] 2023-10-03T01:15:18,861Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:18,864Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295718826), owningKey=DLBxFV4SDSPkPWHkKgLTBA2ap3tdK7hMJhuz6cEHnXhDdw {}
[INFO ] 2023-10-03T01:15:18,864Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:18,864Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295718826), owningKey=DLBxFV4SDSPkPWHkKgLTBA2ap3tdK7hMJhuz6cEHnXhDdw {}
[INFO ] 2023-10-03T01:15:18,864Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:18,866Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-011518.069-29D9B4B4651AEEDE/nodes/2/cordapps] {}
[INFO ] 2023-10-03T01:15:18,866Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011518.069-29D9B4B4651AEEDE/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011518.069-29D9B4B4651AEEDE/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T01:15:18,866Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011518.069-29D9B4B4651AEEDE/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T01:15:18,870Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-011518.069-29D9B4B4651AEEDE/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T01:15:18,881Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:18,881Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T01:15:18,882Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T01:15:18,882Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T01:15:18,897Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T01:15:18,897Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL9xw8AbXCUhVxZY8i4fL8skL9xhRuxy7HpFerM4VJo48X, alias: identity-private-key {}
[INFO ] 2023-10-03T01:15:18,900Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T01:15:18,901Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T01:15:18.069Z
      epoch=1
  } {}
[INFO ] 2023-10-03T01:15:19,043Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T01:15:19,044Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:19,044Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:19,131Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T01:15:19,133Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T01:15:19,134Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295719133), owningKey=DL9xw8AbXCUhVxZY8i4fL8skL9xhRuxy7HpFerM4VJo48X {}
[INFO ] 2023-10-03T01:15:19,134Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:19,137Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295719133) {}
[INFO ] 2023-10-03T01:15:19,138Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T01:15:19,139Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T01:15:19,139Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T01:15:19,142Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295719133), owningKey=DL9xw8AbXCUhVxZY8i4fL8skL9xhRuxy7HpFerM4VJo48X {}
[INFO ] 2023-10-03T01:15:19,142Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:19,154Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=E5D461AC8A58CEA4A10A469E2C6C7DAF0DA9EEB91FA04B2FB29718BD5511C7BC uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T01:15:19,161Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295719133) {}
[INFO ] 2023-10-03T01:15:19,161Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T01:15:19,161Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696295718469), owningKey=DLAoftihgmFfnfibLmKy36DcZyVn43srMe6mgMP1aAWCkE {}
[INFO ] 2023-10-03T01:15:19,161Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T01:15:19,165Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295719133), owningKey=DL9xw8AbXCUhVxZY8i4fL8skL9xhRuxy7HpFerM4VJo48X {}
[INFO ] 2023-10-03T01:15:19,165Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:19,168Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696295718826), owningKey=DLBxFV4SDSPkPWHkKgLTBA2ap3tdK7hMJhuz6cEHnXhDdw {}
[INFO ] 2023-10-03T01:15:19,168Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:19,171Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295719133), owningKey=DL9xw8AbXCUhVxZY8i4fL8skL9xhRuxy7HpFerM4VJo48X {}
[INFO ] 2023-10-03T01:15:19,171Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T01:15:19,173Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295719133), owningKey=DL9xw8AbXCUhVxZY8i4fL8skL9xhRuxy7HpFerM4VJo48X {}
[INFO ] 2023-10-03T01:15:19,173Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T01:15:19,173Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696295719133), owningKey=DL9xw8AbXCUhVxZY8i4fL8skL9xhRuxy7HpFerM4VJo48X {}
[INFO ] 2023-10-03T01:15:19,173Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-10-03T01:15:19,173Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-10-03T01:15:19,173Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-10-03T01:15:19,173Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-10-03T01:15:19,173Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T01:15:19,226Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=16bda614-42c9-49a0-834a-d40bac4b2488, invocation_id=256e4a2a-2b5b-456b-a9a3-fedf245d84f0, invocation_timestamp=2023-10-03T01:15:19.217Z, origin=O=Mock Company 1, L=London, C=GB, session_id=256e4a2a-2b5b-456b-a9a3-fedf245d84f0, session_timestamp=2023-10-03T01:15:19.217Z, thread-id=2276, tx_id=1B70D42F0346484747B51C02D7C1E6E46F985A91BF3B8BEEAD8CBDFBDCB9952A}
[INFO ] 2023-10-03T01:15:19,232Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=16bda614-42c9-49a0-834a-d40bac4b2488, invocation_id=256e4a2a-2b5b-456b-a9a3-fedf245d84f0, invocation_timestamp=2023-10-03T01:15:19.217Z, origin=O=Mock Company 1, L=London, C=GB, session_id=256e4a2a-2b5b-456b-a9a3-fedf245d84f0, session_timestamp=2023-10-03T01:15:19.217Z, thread-id=2276, tx_id=1B70D42F0346484747B51C02D7C1E6E46F985A91BF3B8BEEAD8CBDFBDCB9952A}
[INFO ] 2023-10-03T01:15:19,283Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=d8287efb-efdb-4761-8f37-3083251e65b5, invocation_id=c59cdd9b-ced3-4f80-aa40-f383de0d5c1a, invocation_timestamp=2023-10-03T01:15:19.174Z, origin=Only For Testing, session_id=c59cdd9b-ced3-4f80-aa40-f383de0d5c1a, session_timestamp=2023-10-03T01:15:19.174Z, thread-id=2276, tx_id=1B70D42F0346484747B51C02D7C1E6E46F985A91BF3B8BEEAD8CBDFBDCB9952A}
[INFO ] 2023-10-03T01:15:19,283Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=d8287efb-efdb-4761-8f37-3083251e65b5, invocation_id=c59cdd9b-ced3-4f80-aa40-f383de0d5c1a, invocation_timestamp=2023-10-03T01:15:19.174Z, origin=Only For Testing, session_id=c59cdd9b-ced3-4f80-aa40-f383de0d5c1a, session_timestamp=2023-10-03T01:15:19.174Z, thread-id=2276, tx_id=1B70D42F0346484747B51C02D7C1E6E46F985A91BF3B8BEEAD8CBDFBDCB9952A}
[INFO ] 2023-10-03T01:15:19,291Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=d8287efb-efdb-4761-8f37-3083251e65b5, invocation_id=c59cdd9b-ced3-4f80-aa40-f383de0d5c1a, invocation_timestamp=2023-10-03T01:15:19.174Z, origin=Only For Testing, session_id=c59cdd9b-ced3-4f80-aa40-f383de0d5c1a, session_timestamp=2023-10-03T01:15:19.174Z, thread-id=2276, tx_id=1B70D42F0346484747B51C02D7C1E6E46F985A91BF3B8BEEAD8CBDFBDCB9952A}
[INFO ] 2023-10-03T01:15:19,300Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=16bda614-42c9-49a0-834a-d40bac4b2488, invocation_id=256e4a2a-2b5b-456b-a9a3-fedf245d84f0, invocation_timestamp=2023-10-03T01:15:19.217Z, origin=O=Mock Company 1, L=London, C=GB, session_id=256e4a2a-2b5b-456b-a9a3-fedf245d84f0, session_timestamp=2023-10-03T01:15:19.217Z, thread-id=2276, tx_id=1B70D42F0346484747B51C02D7C1E6E46F985A91BF3B8BEEAD8CBDFBDCB9952A}
[INFO ] 2023-10-03T01:15:19,304Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=16bda614-42c9-49a0-834a-d40bac4b2488, invocation_id=256e4a2a-2b5b-456b-a9a3-fedf245d84f0, invocation_timestamp=2023-10-03T01:15:19.217Z, origin=O=Mock Company 1, L=London, C=GB, session_id=256e4a2a-2b5b-456b-a9a3-fedf245d84f0, session_timestamp=2023-10-03T01:15:19.217Z, thread-id=2276, tx_id=1B70D42F0346484747B51C02D7C1E6E46F985A91BF3B8BEEAD8CBDFBDCB9952A}
[INFO ] 2023-10-03T01:15:19,305Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000011, flow-id=16bda614-42c9-49a0-834a-d40bac4b2488, invocation_id=256e4a2a-2b5b-456b-a9a3-fedf245d84f0, invocation_timestamp=2023-10-03T01:15:19.217Z, origin=O=Mock Company 1, L=London, C=GB, session_id=256e4a2a-2b5b-456b-a9a3-fedf245d84f0, session_timestamp=2023-10-03T01:15:19.217Z, thread-id=2276, tx_id=1B70D42F0346484747B51C02D7C1E6E46F985A91BF3B8BEEAD8CBDFBDCB9952A}
[INFO ] 2023-10-03T01:15:19,309Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000011, flow-id=16bda614-42c9-49a0-834a-d40bac4b2488, invocation_id=256e4a2a-2b5b-456b-a9a3-fedf245d84f0, invocation_timestamp=2023-10-03T01:15:19.217Z, origin=O=Mock Company 1, L=London, C=GB, session_id=256e4a2a-2b5b-456b-a9a3-fedf245d84f0, session_timestamp=2023-10-03T01:15:19.217Z, thread-id=2276, tx_id=1B70D42F0346484747B51C02D7C1E6E46F985A91BF3B8BEEAD8CBDFBDCB9952A}
[INFO ] 2023-10-03T01:15:19,314Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=d8287efb-efdb-4761-8f37-3083251e65b5, invocation_id=c59cdd9b-ced3-4f80-aa40-f383de0d5c1a, invocation_timestamp=2023-10-03T01:15:19.174Z, origin=Only For Testing, session_id=c59cdd9b-ced3-4f80-aa40-f383de0d5c1a, session_timestamp=2023-10-03T01:15:19.174Z, thread-id=2276, tx_id=1B70D42F0346484747B51C02D7C1E6E46F985A91BF3B8BEEAD8CBDFBDCB9952A}
[INFO ] 2023-10-03T01:15:19,314Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=d8287efb-efdb-4761-8f37-3083251e65b5, invocation_id=c59cdd9b-ced3-4f80-aa40-f383de0d5c1a, invocation_timestamp=2023-10-03T01:15:19.174Z, origin=Only For Testing, session_id=c59cdd9b-ced3-4f80-aa40-f383de0d5c1a, session_timestamp=2023-10-03T01:15:19.174Z, thread-id=2276, tx_id=1B70D42F0346484747B51C02D7C1E6E46F985A91BF3B8BEEAD8CBDFBDCB9952A}
[INFO ] 2023-10-03T01:15:19,352Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T01:15:19,353Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-16) {}
[INFO ] 2023-10-03T01:15:19,367Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T01:15:19,367Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:19,367Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T01:15:19,367Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-17) {}
[INFO ] 2023-10-03T01:15:19,381Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T01:15:19,381Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T01:15:19,381Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T01:15:19,382Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-18) {}
[INFO ] 2023-10-03T01:15:19,390Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T01:15:19,390Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:19:44,417Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows ... {}
[INFO ] 2023-10-03T02:19:44,591Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-10-03T02:19:45,652Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-10-03T02:19:46,246Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2023-10-03T02:19:46,258Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-10-03T02:19:46,259Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-10-03T02:19:46,728Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-10-03T02:19:46,768Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2023-10-03T02:19:47,078Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-10-03T02:19:47,088Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-10-03T02:19:47,088Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2023-10-03T02:19:47,219Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-10-03T02:19:47,219Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-10-03T02:19:47,626Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2023-10-03T02:19:47,848Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-10-03T02:19:47,858Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-10-03T02:19:47,901Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-10-03T02:19:47,901Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-10-03T02:19:47,901Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-10-03T02:19:48,647Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-10-03T02:19:48,647Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2023-10-03T02:19:48,727Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-10-03T02:19:48,728Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2023-10-03T02:19:48,748Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-10-03T02:19:48,748Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2023-10-03T02:19:48,832Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-10-03T02:19:48,842Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-10-03T02:19:48,933Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-10-03T02:19:48,943Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-10-03T02:19:48,943Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-10-03T02:19:48,943Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-10-03T02:19:48,953Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-10-03T02:19:48,954Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-10-03T02:19:48,954Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-10-03T02:19:48,954Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-10-03T02:19:48,964Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T02:19:48,984Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-10-03T02:19:48,994Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-10-03T02:19:48,994Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-10-03T02:19:49,055Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-10-03T02:19:49,055Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-10-03T02:19:49,055Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-10-03T02:19:49,055Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-10-03T02:19:49,055Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2023-10-03T02:19:49,105Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-10-03T02:19:49,106Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-10-03T02:19:49,116Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-10-03T02:19:49,439Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-10-03T02:19:49,439Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-10-03T02:19:49,450Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-10-03T02:19:49,450Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-10-03T02:19:49,480Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T02:19:49,480Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2023-10-03T02:19:49,480Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T02:19:49,480Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2023-10-03T02:19:49,480Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T02:19:49,480Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2023-10-03T02:19:49,480Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T02:19:49,480Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-10-03T02:19:49,490Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2023-10-03T02:19:49,518Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-10-03T02:19:49,518Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-10-03T02:19:49,528Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-10-03T02:19:49,528Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-10-03T02:19:49,528Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-10-03T02:19:49,528Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-10-03T02:19:49,528Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-10-03T02:19:49,528Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-10-03T02:19:49,528Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-10-03T02:19:49,528Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-10-03T02:19:49,528Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-10-03T02:19:49,528Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-10-03T02:19:49,528Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-10-03T02:19:49,528Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T02:19:49,538Z [Connection worker] internal.TestCordappImpl. - Task :contracts:inspectClassesForKotlinIC {}
[INFO ] 2023-10-03T02:19:49,549Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T02:19:49,549Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2023-10-03T02:19:49,559Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T02:19:49,559Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-10-03T02:19:49,559Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-10-03T02:19:49,559Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-10-03T02:19:49,569Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-10-03T02:19:49,569Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-10-03T02:19:49,569Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-10-03T02:19:49,569Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-10-03T02:19:49,569Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2023-10-03T02:19:49,589Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-10-03T02:19:49,590Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-10-03T02:19:49,590Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-10-03T02:19:49,590Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-10-03T02:19:49,590Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-10-03T02:19:49,590Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-10-03T02:19:49,590Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-10-03T02:19:49,600Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T02:19:49,600Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2023-10-03T02:19:49,600Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T02:19:49,600Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2023-10-03T02:19:49,600Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T02:19:49,600Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2023-10-03T02:19:49,600Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T02:19:49,600Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-10-03T02:19:49,600Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2023-10-03T02:19:49,620Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-10-03T02:19:49,620Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-10-03T02:19:49,620Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-10-03T02:19:49,620Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-10-03T02:19:49,620Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-10-03T02:19:49,620Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-10-03T02:19:49,620Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-10-03T02:19:49,620Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-10-03T02:19:49,620Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-10-03T02:19:49,620Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-10-03T02:19:49,620Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-10-03T02:19:49,620Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T02:19:49,621Z [Connection worker] internal.TestCordappImpl. - Task :workflows:inspectClassesForKotlinIC {}
[INFO ] 2023-10-03T02:19:49,630Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T02:19:49,630Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2023-10-03T02:19:49,640Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-10-03T02:19:49,641Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-10-03T02:19:49,641Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2023-10-03T02:19:49,641Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-10-03T02:19:49,655Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-10-03T02:19:49,662Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/.gradle {}
[INFO ] 2023-10-03T02:19:49,662Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-10-03T02:19:49,675Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2023-10-03T02:19:54,185Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-021943.554-73D6DD2B934EE4F6/nodes/0/cordapps] {}
[INFO ] 2023-10-03T02:19:54,191Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-021943.554-73D6DD2B934EE4F6/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-021943.554-73D6DD2B934EE4F6/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T02:19:54,248Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-021943.554-73D6DD2B934EE4F6/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T02:19:54,406Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-021943.554-73D6DD2B934EE4F6/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T02:19:55,164Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:19:55,307Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T02:19:55,344Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T02:19:55,344Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T02:19:55,356Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T02:19:55,359Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL27AkyV6wEHq5Xraut2Mq8BCBPnf8AJhgMcv1q9oS7VdR, alias: identity-private-key {}
[INFO ] 2023-10-03T02:19:55,434Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.witness.flows.DeleteDidFlow to initiate com.persistent.did.witness.flows.DeleteDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:19:55,435Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T02:19:55,435Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.CreateDidFlow to initiate net.corda.samples.witness.flows.CreateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:19:55,435Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.flows.FetchDidDocumentFromRegistryNodeFlow to initiate net.corda.samples.witness.flows.FetchDidDocumentFromRegistryNodeResponderFlow (version 1) {}
[INFO ] 2023-10-03T02:19:55,436Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.UpdateDidFlow to initiate net.corda.samples.witness.flows.UpdateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:19:55,479Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T02:19:43.512Z
      epoch=1
  } {}
[WARN ] 2023-10-03T02:19:59,095Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.persistent.did.state.DidSchema v1 {}
[INFO ] 2023-10-03T02:19:59,152Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T02:19:59,204Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T02:19:59,207Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T02:20:01,520Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T02:20:01,937Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T02:20:01,944Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299601937), owningKey=DL27AkyV6wEHq5Xraut2Mq8BCBPnf8AJhgMcv1q9oS7VdR {}
[INFO ] 2023-10-03T02:20:01,944Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T02:20:02,079Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299601937) {}
[INFO ] 2023-10-03T02:20:02,126Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T02:20:02,155Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T02:20:02,156Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T02:20:02,186Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299601937), owningKey=DL27AkyV6wEHq5Xraut2Mq8BCBPnf8AJhgMcv1q9oS7VdR {}
[INFO ] 2023-10-03T02:20:02,187Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:02,440Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=5D8DB4D902E807E63DE1E9414EAC4E7A72D384C58FE69BF142B366888EAC7D30 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T02:20:02,448Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-10-03T02:20:02,897Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299601937) {}
[INFO ] 2023-10-03T02:20:02,904Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T02:20:02,906Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299601937), owningKey=DL27AkyV6wEHq5Xraut2Mq8BCBPnf8AJhgMcv1q9oS7VdR {}
[INFO ] 2023-10-03T02:20:02,906Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:02,906Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299601937), owningKey=DL27AkyV6wEHq5Xraut2Mq8BCBPnf8AJhgMcv1q9oS7VdR {}
[INFO ] 2023-10-03T02:20:02,906Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:02,913Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-021943.554-73D6DD2B934EE4F6/nodes/1/cordapps] {}
[INFO ] 2023-10-03T02:20:02,914Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-021943.554-73D6DD2B934EE4F6/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-021943.554-73D6DD2B934EE4F6/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T02:20:02,914Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-021943.554-73D6DD2B934EE4F6/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T02:20:02,943Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-021943.554-73D6DD2B934EE4F6/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T02:20:02,972Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:02,973Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T02:20:02,974Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T02:20:02,974Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T02:20:03,004Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T02:20:03,004Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGqia75aUUznYUN15y7JEbKaXHhBxNUQHLuKJaZkGvJPf, alias: identity-private-key {}
[INFO ] 2023-10-03T02:20:03,009Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.witness.flows.DeleteDidFlow to initiate com.persistent.did.witness.flows.DeleteDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:03,009Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T02:20:03,009Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.CreateDidFlow to initiate net.corda.samples.witness.flows.CreateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:03,009Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.flows.FetchDidDocumentFromRegistryNodeFlow to initiate net.corda.samples.witness.flows.FetchDidDocumentFromRegistryNodeResponderFlow (version 1) {}
[INFO ] 2023-10-03T02:20:03,009Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.UpdateDidFlow to initiate net.corda.samples.witness.flows.UpdateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:03,013Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T02:19:43.512Z
      epoch=1
  } {}
[WARN ] 2023-10-03T02:20:03,432Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.persistent.did.state.DidSchema v1 {}
[INFO ] 2023-10-03T02:20:03,469Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T02:20:03,471Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:03,471Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:03,674Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:03,677Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T02:20:03,681Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299603677), owningKey=DLGqia75aUUznYUN15y7JEbKaXHhBxNUQHLuKJaZkGvJPf {}
[INFO ] 2023-10-03T02:20:03,681Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:03,688Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299603677) {}
[INFO ] 2023-10-03T02:20:03,694Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T02:20:03,694Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T02:20:03,694Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T02:20:03,700Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299603677), owningKey=DLGqia75aUUznYUN15y7JEbKaXHhBxNUQHLuKJaZkGvJPf {}
[INFO ] 2023-10-03T02:20:03,700Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:03,771Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=5D8DB4D902E807E63DE1E9414EAC4E7A72D384C58FE69BF142B366888EAC7D30 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T02:20:03,794Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299603677) {}
[INFO ] 2023-10-03T02:20:03,794Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T02:20:03,797Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299601937), owningKey=DL27AkyV6wEHq5Xraut2Mq8BCBPnf8AJhgMcv1q9oS7VdR {}
[INFO ] 2023-10-03T02:20:03,797Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T02:20:03,807Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299603677), owningKey=DLGqia75aUUznYUN15y7JEbKaXHhBxNUQHLuKJaZkGvJPf {}
[INFO ] 2023-10-03T02:20:03,807Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:03,817Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299603677), owningKey=DLGqia75aUUznYUN15y7JEbKaXHhBxNUQHLuKJaZkGvJPf {}
[INFO ] 2023-10-03T02:20:03,817Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:03,817Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299603677), owningKey=DLGqia75aUUznYUN15y7JEbKaXHhBxNUQHLuKJaZkGvJPf {}
[INFO ] 2023-10-03T02:20:03,817Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:03,823Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-021943.554-73D6DD2B934EE4F6/nodes/2/cordapps] {}
[INFO ] 2023-10-03T02:20:03,824Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-021943.554-73D6DD2B934EE4F6/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-021943.554-73D6DD2B934EE4F6/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T02:20:03,825Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-021943.554-73D6DD2B934EE4F6/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T02:20:03,855Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-021943.554-73D6DD2B934EE4F6/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T02:20:03,875Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:03,876Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T02:20:03,876Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T02:20:03,876Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T02:20:03,900Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T02:20:03,900Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLD7uab4vjoAVBkidrF4wV1V7SCuRwL1qxFyrZERpDQCPA, alias: identity-private-key {}
[INFO ] 2023-10-03T02:20:03,904Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.witness.flows.DeleteDidFlow to initiate com.persistent.did.witness.flows.DeleteDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:03,904Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T02:20:03,904Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.CreateDidFlow to initiate net.corda.samples.witness.flows.CreateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:03,905Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.flows.FetchDidDocumentFromRegistryNodeFlow to initiate net.corda.samples.witness.flows.FetchDidDocumentFromRegistryNodeResponderFlow (version 1) {}
[INFO ] 2023-10-03T02:20:03,905Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.UpdateDidFlow to initiate net.corda.samples.witness.flows.UpdateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:03,912Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T02:19:43.512Z
      epoch=1
  } {}
[WARN ] 2023-10-03T02:20:04,165Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.persistent.did.state.DidSchema v1 {}
[INFO ] 2023-10-03T02:20:04,192Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T02:20:04,193Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:04,193Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:04,370Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:04,374Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T02:20:04,376Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299604374), owningKey=DLD7uab4vjoAVBkidrF4wV1V7SCuRwL1qxFyrZERpDQCPA {}
[INFO ] 2023-10-03T02:20:04,376Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:04,382Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299604374) {}
[INFO ] 2023-10-03T02:20:04,388Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T02:20:04,388Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T02:20:04,388Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T02:20:04,395Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299604374), owningKey=DLD7uab4vjoAVBkidrF4wV1V7SCuRwL1qxFyrZERpDQCPA {}
[INFO ] 2023-10-03T02:20:04,395Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:04,467Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=5D8DB4D902E807E63DE1E9414EAC4E7A72D384C58FE69BF142B366888EAC7D30 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T02:20:04,487Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299604374) {}
[INFO ] 2023-10-03T02:20:04,487Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T02:20:04,489Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299601937), owningKey=DL27AkyV6wEHq5Xraut2Mq8BCBPnf8AJhgMcv1q9oS7VdR {}
[INFO ] 2023-10-03T02:20:04,489Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T02:20:04,499Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299604374), owningKey=DLD7uab4vjoAVBkidrF4wV1V7SCuRwL1qxFyrZERpDQCPA {}
[INFO ] 2023-10-03T02:20:04,499Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:04,510Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299603677), owningKey=DLGqia75aUUznYUN15y7JEbKaXHhBxNUQHLuKJaZkGvJPf {}
[INFO ] 2023-10-03T02:20:04,510Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:04,518Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299604374), owningKey=DLD7uab4vjoAVBkidrF4wV1V7SCuRwL1qxFyrZERpDQCPA {}
[INFO ] 2023-10-03T02:20:04,518Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:04,525Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299604374), owningKey=DLD7uab4vjoAVBkidrF4wV1V7SCuRwL1qxFyrZERpDQCPA {}
[INFO ] 2023-10-03T02:20:04,525Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:04,525Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299604374), owningKey=DLD7uab4vjoAVBkidrF4wV1V7SCuRwL1qxFyrZERpDQCPA {}
[INFO ] 2023-10-03T02:20:04,525Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-10-03T02:20:04,526Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-10-03T02:20:04,526Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-10-03T02:20:04,529Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-10-03T02:20:04,529Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-10-03T02:20:04,784Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=ca01525b-3b2e-4400-b08f-22ce60565978, invocation_id=b5be5842-69ad-4103-a1d8-7a10a7d99d08, invocation_timestamp=2023-10-03T02:20:04.575Z, origin=Only For Testing, session_id=b5be5842-69ad-4103-a1d8-7a10a7d99d08, session_timestamp=2023-10-03T02:20:04.575Z, thread-id=408}
[WARN ] 2023-10-03T02:20:04,784Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.samples.example.contracts.IOUContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=ca01525b-3b2e-4400-b08f-22ce60565978, invocation_id=b5be5842-69ad-4103-a1d8-7a10a7d99d08, invocation_timestamp=2023-10-03T02:20:04.575Z, origin=Only For Testing, session_id=b5be5842-69ad-4103-a1d8-7a10a7d99d08, session_timestamp=2023-10-03T02:20:04.575Z, thread-id=408}
[INFO ] 2023-10-03T02:20:05,306Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=9fce8c77-b394-4aa9-8b99-3ababbb09fd4, invocation_id=a10ff73e-a648-4553-bcf5-66c7842048a2, invocation_timestamp=2023-10-03T02:20:05.264Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a10ff73e-a648-4553-bcf5-66c7842048a2, session_timestamp=2023-10-03T02:20:05.264Z, thread-id=408, tx_id=C67D85984A649E349E20346D32906399C649E7F76838FEDFC239323677CD4087}
[INFO ] 2023-10-03T02:20:05,350Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=9fce8c77-b394-4aa9-8b99-3ababbb09fd4, invocation_id=a10ff73e-a648-4553-bcf5-66c7842048a2, invocation_timestamp=2023-10-03T02:20:05.264Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a10ff73e-a648-4553-bcf5-66c7842048a2, session_timestamp=2023-10-03T02:20:05.264Z, thread-id=408, tx_id=C67D85984A649E349E20346D32906399C649E7F76838FEDFC239323677CD4087}
[INFO ] 2023-10-03T02:20:05,509Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=ca01525b-3b2e-4400-b08f-22ce60565978, invocation_id=b5be5842-69ad-4103-a1d8-7a10a7d99d08, invocation_timestamp=2023-10-03T02:20:04.575Z, origin=Only For Testing, session_id=b5be5842-69ad-4103-a1d8-7a10a7d99d08, session_timestamp=2023-10-03T02:20:04.575Z, thread-id=408, tx_id=C67D85984A649E349E20346D32906399C649E7F76838FEDFC239323677CD4087}
[INFO ] 2023-10-03T02:20:05,509Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=ca01525b-3b2e-4400-b08f-22ce60565978, invocation_id=b5be5842-69ad-4103-a1d8-7a10a7d99d08, invocation_timestamp=2023-10-03T02:20:04.575Z, origin=Only For Testing, session_id=b5be5842-69ad-4103-a1d8-7a10a7d99d08, session_timestamp=2023-10-03T02:20:04.575Z, thread-id=408, tx_id=C67D85984A649E349E20346D32906399C649E7F76838FEDFC239323677CD4087}
[INFO ] 2023-10-03T02:20:05,576Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=ca01525b-3b2e-4400-b08f-22ce60565978, invocation_id=b5be5842-69ad-4103-a1d8-7a10a7d99d08, invocation_timestamp=2023-10-03T02:20:04.575Z, origin=Only For Testing, session_id=b5be5842-69ad-4103-a1d8-7a10a7d99d08, session_timestamp=2023-10-03T02:20:04.575Z, thread-id=408, tx_id=C67D85984A649E349E20346D32906399C649E7F76838FEDFC239323677CD4087}
[INFO ] 2023-10-03T02:20:05,598Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=9fce8c77-b394-4aa9-8b99-3ababbb09fd4, invocation_id=a10ff73e-a648-4553-bcf5-66c7842048a2, invocation_timestamp=2023-10-03T02:20:05.264Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a10ff73e-a648-4553-bcf5-66c7842048a2, session_timestamp=2023-10-03T02:20:05.264Z, thread-id=408, tx_id=C67D85984A649E349E20346D32906399C649E7F76838FEDFC239323677CD4087}
[INFO ] 2023-10-03T02:20:05,607Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=9fce8c77-b394-4aa9-8b99-3ababbb09fd4, invocation_id=a10ff73e-a648-4553-bcf5-66c7842048a2, invocation_timestamp=2023-10-03T02:20:05.264Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a10ff73e-a648-4553-bcf5-66c7842048a2, session_timestamp=2023-10-03T02:20:05.264Z, thread-id=408, tx_id=C67D85984A649E349E20346D32906399C649E7F76838FEDFC239323677CD4087}
[INFO ] 2023-10-03T02:20:05,610Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=9fce8c77-b394-4aa9-8b99-3ababbb09fd4, invocation_id=a10ff73e-a648-4553-bcf5-66c7842048a2, invocation_timestamp=2023-10-03T02:20:05.264Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a10ff73e-a648-4553-bcf5-66c7842048a2, session_timestamp=2023-10-03T02:20:05.264Z, thread-id=408, tx_id=C67D85984A649E349E20346D32906399C649E7F76838FEDFC239323677CD4087}
[INFO ] 2023-10-03T02:20:05,618Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=9fce8c77-b394-4aa9-8b99-3ababbb09fd4, invocation_id=a10ff73e-a648-4553-bcf5-66c7842048a2, invocation_timestamp=2023-10-03T02:20:05.264Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a10ff73e-a648-4553-bcf5-66c7842048a2, session_timestamp=2023-10-03T02:20:05.264Z, thread-id=408, tx_id=C67D85984A649E349E20346D32906399C649E7F76838FEDFC239323677CD4087}
[INFO ] 2023-10-03T02:20:05,638Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=ca01525b-3b2e-4400-b08f-22ce60565978, invocation_id=b5be5842-69ad-4103-a1d8-7a10a7d99d08, invocation_timestamp=2023-10-03T02:20:04.575Z, origin=Only For Testing, session_id=b5be5842-69ad-4103-a1d8-7a10a7d99d08, session_timestamp=2023-10-03T02:20:04.575Z, thread-id=408, tx_id=C67D85984A649E349E20346D32906399C649E7F76838FEDFC239323677CD4087}
[INFO ] 2023-10-03T02:20:05,638Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=ca01525b-3b2e-4400-b08f-22ce60565978, invocation_id=b5be5842-69ad-4103-a1d8-7a10a7d99d08, invocation_timestamp=2023-10-03T02:20:04.575Z, origin=Only For Testing, session_id=b5be5842-69ad-4103-a1d8-7a10a7d99d08, session_timestamp=2023-10-03T02:20:04.575Z, thread-id=408, tx_id=C67D85984A649E349E20346D32906399C649E7F76838FEDFC239323677CD4087}
[INFO ] 2023-10-03T02:20:05,646Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T02:20:05,656Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2023-10-03T02:20:05,688Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T02:20:05,689Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:05,690Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T02:20:05,691Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2023-10-03T02:20:05,709Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T02:20:05,709Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:05,709Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T02:20:05,710Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2023-10-03T02:20:05,727Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T02:20:05,727Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:05,823Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-022005.729-A188D1417B7A3972/nodes/0/cordapps] {}
[INFO ] 2023-10-03T02:20:05,823Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022005.729-A188D1417B7A3972/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022005.729-A188D1417B7A3972/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T02:20:05,823Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022005.729-A188D1417B7A3972/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T02:20:05,847Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022005.729-A188D1417B7A3972/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T02:20:05,868Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:05,868Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T02:20:05,869Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T02:20:05,869Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T02:20:05,871Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T02:20:05,871Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL3JzKxh8LRA9LWuPXzh2uez56XL4K4pPq1M12hLiCT9jN, alias: identity-private-key {}
[INFO ] 2023-10-03T02:20:05,876Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.witness.flows.DeleteDidFlow to initiate com.persistent.did.witness.flows.DeleteDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:05,876Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T02:20:05,876Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.CreateDidFlow to initiate net.corda.samples.witness.flows.CreateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:05,876Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.flows.FetchDidDocumentFromRegistryNodeFlow to initiate net.corda.samples.witness.flows.FetchDidDocumentFromRegistryNodeResponderFlow (version 1) {}
[INFO ] 2023-10-03T02:20:05,876Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.UpdateDidFlow to initiate net.corda.samples.witness.flows.UpdateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:05,881Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T02:20:05.729Z
      epoch=1
  } {}
[WARN ] 2023-10-03T02:20:06,192Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.persistent.did.state.DidSchema v1 {}
[INFO ] 2023-10-03T02:20:06,216Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T02:20:06,217Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T02:20:06,217Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T02:20:06,397Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T02:20:06,399Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T02:20:06,401Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299606399), owningKey=DL3JzKxh8LRA9LWuPXzh2uez56XL4K4pPq1M12hLiCT9jN {}
[INFO ] 2023-10-03T02:20:06,401Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T02:20:06,410Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299606399) {}
[INFO ] 2023-10-03T02:20:06,416Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T02:20:06,417Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T02:20:06,417Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T02:20:06,422Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299606399), owningKey=DL3JzKxh8LRA9LWuPXzh2uez56XL4K4pPq1M12hLiCT9jN {}
[INFO ] 2023-10-03T02:20:06,422Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:06,486Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=5D8DB4D902E807E63DE1E9414EAC4E7A72D384C58FE69BF142B366888EAC7D30 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T02:20:06,489Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-10-03T02:20:06,505Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299606399) {}
[INFO ] 2023-10-03T02:20:06,505Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T02:20:06,505Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299606399), owningKey=DL3JzKxh8LRA9LWuPXzh2uez56XL4K4pPq1M12hLiCT9jN {}
[INFO ] 2023-10-03T02:20:06,505Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:06,505Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299606399), owningKey=DL3JzKxh8LRA9LWuPXzh2uez56XL4K4pPq1M12hLiCT9jN {}
[INFO ] 2023-10-03T02:20:06,505Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:06,511Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-022005.729-A188D1417B7A3972/nodes/1/cordapps] {}
[INFO ] 2023-10-03T02:20:06,511Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022005.729-A188D1417B7A3972/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022005.729-A188D1417B7A3972/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T02:20:06,512Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022005.729-A188D1417B7A3972/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T02:20:06,528Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022005.729-A188D1417B7A3972/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T02:20:06,546Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:06,547Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T02:20:06,547Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T02:20:06,547Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T02:20:06,577Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T02:20:06,577Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGnpKdWdcrSmmBsh7F12wUg9GB2EumTv2VPZKpM7bs4wx, alias: identity-private-key {}
[INFO ] 2023-10-03T02:20:06,582Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.witness.flows.DeleteDidFlow to initiate com.persistent.did.witness.flows.DeleteDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:06,582Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T02:20:06,582Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.CreateDidFlow to initiate net.corda.samples.witness.flows.CreateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:06,582Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.flows.FetchDidDocumentFromRegistryNodeFlow to initiate net.corda.samples.witness.flows.FetchDidDocumentFromRegistryNodeResponderFlow (version 1) {}
[INFO ] 2023-10-03T02:20:06,582Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.UpdateDidFlow to initiate net.corda.samples.witness.flows.UpdateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:06,584Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T02:20:05.729Z
      epoch=1
  } {}
[WARN ] 2023-10-03T02:20:06,794Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.persistent.did.state.DidSchema v1 {}
[INFO ] 2023-10-03T02:20:06,817Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T02:20:06,818Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:06,818Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:06,983Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:06,986Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T02:20:06,988Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299606986), owningKey=DLGnpKdWdcrSmmBsh7F12wUg9GB2EumTv2VPZKpM7bs4wx {}
[INFO ] 2023-10-03T02:20:06,988Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:06,993Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299606986) {}
[INFO ] 2023-10-03T02:20:06,998Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T02:20:06,998Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T02:20:06,998Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T02:20:07,004Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299606986), owningKey=DLGnpKdWdcrSmmBsh7F12wUg9GB2EumTv2VPZKpM7bs4wx {}
[INFO ] 2023-10-03T02:20:07,004Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:07,080Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=5D8DB4D902E807E63DE1E9414EAC4E7A72D384C58FE69BF142B366888EAC7D30 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T02:20:07,099Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299606986) {}
[INFO ] 2023-10-03T02:20:07,099Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T02:20:07,101Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299606399), owningKey=DL3JzKxh8LRA9LWuPXzh2uez56XL4K4pPq1M12hLiCT9jN {}
[INFO ] 2023-10-03T02:20:07,101Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T02:20:07,108Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299606986), owningKey=DLGnpKdWdcrSmmBsh7F12wUg9GB2EumTv2VPZKpM7bs4wx {}
[INFO ] 2023-10-03T02:20:07,108Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:07,114Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299606986), owningKey=DLGnpKdWdcrSmmBsh7F12wUg9GB2EumTv2VPZKpM7bs4wx {}
[INFO ] 2023-10-03T02:20:07,114Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:07,114Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299606986), owningKey=DLGnpKdWdcrSmmBsh7F12wUg9GB2EumTv2VPZKpM7bs4wx {}
[INFO ] 2023-10-03T02:20:07,114Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:07,118Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-022005.729-A188D1417B7A3972/nodes/2/cordapps] {}
[INFO ] 2023-10-03T02:20:07,118Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022005.729-A188D1417B7A3972/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022005.729-A188D1417B7A3972/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T02:20:07,118Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022005.729-A188D1417B7A3972/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T02:20:07,132Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022005.729-A188D1417B7A3972/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T02:20:07,149Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:07,150Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T02:20:07,150Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T02:20:07,150Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T02:20:07,170Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T02:20:07,170Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLBPaMM5J7KvrmEuTNHz6pTydRAEgUkN5zYFmftSMVAcPu, alias: identity-private-key {}
[INFO ] 2023-10-03T02:20:07,173Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.witness.flows.DeleteDidFlow to initiate com.persistent.did.witness.flows.DeleteDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:07,173Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T02:20:07,173Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.CreateDidFlow to initiate net.corda.samples.witness.flows.CreateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:07,173Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.flows.FetchDidDocumentFromRegistryNodeFlow to initiate net.corda.samples.witness.flows.FetchDidDocumentFromRegistryNodeResponderFlow (version 1) {}
[INFO ] 2023-10-03T02:20:07,173Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.UpdateDidFlow to initiate net.corda.samples.witness.flows.UpdateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:07,175Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T02:20:05.729Z
      epoch=1
  } {}
[WARN ] 2023-10-03T02:20:07,403Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.persistent.did.state.DidSchema v1 {}
[INFO ] 2023-10-03T02:20:07,426Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T02:20:07,428Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:07,428Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:07,580Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:07,583Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T02:20:07,585Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299607583), owningKey=DLBPaMM5J7KvrmEuTNHz6pTydRAEgUkN5zYFmftSMVAcPu {}
[INFO ] 2023-10-03T02:20:07,585Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:07,591Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299607583) {}
[INFO ] 2023-10-03T02:20:07,594Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T02:20:07,594Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T02:20:07,594Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T02:20:07,599Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299607583), owningKey=DLBPaMM5J7KvrmEuTNHz6pTydRAEgUkN5zYFmftSMVAcPu {}
[INFO ] 2023-10-03T02:20:07,599Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:07,669Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=5D8DB4D902E807E63DE1E9414EAC4E7A72D384C58FE69BF142B366888EAC7D30 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T02:20:07,686Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299607583) {}
[INFO ] 2023-10-03T02:20:07,687Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T02:20:07,688Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299606399), owningKey=DL3JzKxh8LRA9LWuPXzh2uez56XL4K4pPq1M12hLiCT9jN {}
[INFO ] 2023-10-03T02:20:07,688Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T02:20:07,697Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299607583), owningKey=DLBPaMM5J7KvrmEuTNHz6pTydRAEgUkN5zYFmftSMVAcPu {}
[INFO ] 2023-10-03T02:20:07,697Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:07,706Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299606986), owningKey=DLGnpKdWdcrSmmBsh7F12wUg9GB2EumTv2VPZKpM7bs4wx {}
[INFO ] 2023-10-03T02:20:07,706Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:07,714Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299607583), owningKey=DLBPaMM5J7KvrmEuTNHz6pTydRAEgUkN5zYFmftSMVAcPu {}
[INFO ] 2023-10-03T02:20:07,714Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:07,719Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299607583), owningKey=DLBPaMM5J7KvrmEuTNHz6pTydRAEgUkN5zYFmftSMVAcPu {}
[INFO ] 2023-10-03T02:20:07,719Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:07,720Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299607583), owningKey=DLBPaMM5J7KvrmEuTNHz6pTydRAEgUkN5zYFmftSMVAcPu {}
[INFO ] 2023-10-03T02:20:07,720Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-10-03T02:20:07,720Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-10-03T02:20:07,720Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-10-03T02:20:07,720Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-10-03T02:20:07,720Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[ERROR] 2023-10-03T02:20:08,031Z [Mock network] internal.Verifier. - Error validating transaction 78106861CF3A348E748D1AB71DA073285649EB5E6C94BD73BA575B22FDBC2FF7. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8, invocation_id=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, invocation_timestamp=2023-10-03T02:20:07.720Z, origin=Only For Testing, session_id=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, session_timestamp=2023-10-03T02:20:07.720Z, thread-id=788}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:248) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:228) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:186) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:144) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:668) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
[ERROR] 2023-10-03T02:20:08,033Z [Mock network] internal.Verifier. - Error validating transaction 78106861CF3A348E748D1AB71DA073285649EB5E6C94BD73BA575B22FDBC2FF7. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8, invocation_id=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, invocation_timestamp=2023-10-03T02:20:07.720Z, origin=Only For Testing, session_id=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, session_timestamp=2023-10-03T02:20:07.720Z, thread-id=788}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
[INFO ] 2023-10-03T02:20:08,033Z [Mock network] corda.flow. - Flow raised an error: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 78106861CF3A348E748D1AB71DA073285649EB5E6C94BD73BA575B22FDBC2FF7. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8, invocation_id=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, invocation_timestamp=2023-10-03T02:20:07.720Z, origin=Only For Testing, session_id=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, session_timestamp=2023-10-03T02:20:07.720Z, thread-id=788}
[INFO ] 2023-10-03T02:20:08,038Z [Mock network] statemachine.StaffedFlowHospital. - Flow [84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, timestamp: 2023-10-03T02:20:07.720Z, entityType: Invocation, sessionId=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, timestamp: 2023-10-03T02:20:07.720Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=ED7446FC80EBDE416162407E142EDD283F978677469C2E87FC632274793FE9BC), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=20AB44D5FAB130759525ECF794AE735F9D0143BC2D9F6E77EF4D60A4788E7686), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=net.corda.samples.example.flows.ExampleFlow$Initiator@a49fd3, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=f7f108f6-79b9-473b-9caa-1c2fe49151a8, reloadCheckpointAfterSuspendCount=null, numberOfCommits=0, lock=java.util.concurrent.Semaphore@28d1010e[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8, invocation_id=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, invocation_timestamp=2023-10-03T02:20:07.720Z, origin=Only For Testing, session_id=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, session_timestamp=2023-10-03T02:20:07.720Z, thread-id=788}
[INFO ] 2023-10-03T02:20:08,040Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8, invocation_id=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, invocation_timestamp=2023-10-03T02:20:07.720Z, origin=Only For Testing, session_id=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, session_timestamp=2023-10-03T02:20:07.720Z, thread-id=788}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 78106861CF3A348E748D1AB71DA073285649EB5E6C94BD73BA575B22FDBC2FF7
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[INFO ] 2023-10-03T02:20:08,042Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8, invocation_id=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, invocation_timestamp=2023-10-03T02:20:07.720Z, origin=Only For Testing, session_id=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, session_timestamp=2023-10-03T02:20:07.720Z, thread-id=788}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 78106861CF3A348E748D1AB71DA073285649EB5E6C94BD73BA575B22FDBC2FF7
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[WARN ] 2023-10-03T02:20:08,053Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8] errored, dumping all transitions:

 --- Transition of flow [84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8] ---
  Timestamp: 2023-10-03T02:20:07.725Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, timestamp: 2023-10-03T02:20:07.720Z, entityType: Invocation, sessionId=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, timestamp: 2023-10-03T02:20:07.720Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=ED7446FC80EBDE416162407E142EDD283F978677469C2E87FC632274793FE9BC), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=20AB44D5FAB130759525ECF794AE735F9D0143BC2D9F6E77EF4D60A4788E7686), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7d44cad8])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7d44cad8])
    SignalFlowHasStarted(flowId=[84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7d44cad8]
    []


 --- Transition of flow [84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8] ---
  Timestamp: 2023-10-03T02:20:08.044Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 78106861CF3A348E748D1AB71DA073285649EB5E6C94BD73BA575B22FDBC2FF7, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=5751774751835992546, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 78106861CF3A348E748D1AB71DA073285649EB5E6C94BD73BA575B22FDBC2FF7)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-10-03T02:20:07.721Z
    2023-10-03T02:20:08.036Z


 --- Transition of flow [84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8] ---
  Timestamp: 2023-10-03T02:20:08.047Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8] ---
  Timestamp: 2023-10-03T02:20:08.048Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-10-03T02:20:08.036Z
    2023-10-03T02:20:08.048Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8, invocation_id=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, invocation_timestamp=2023-10-03T02:20:07.720Z, origin=Only For Testing, session_id=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, session_timestamp=2023-10-03T02:20:07.720Z, thread-id=788}
[WARN ] 2023-10-03T02:20:08,053Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8, invocation_id=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, invocation_timestamp=2023-10-03T02:20:07.720Z, origin=Only For Testing, session_id=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, session_timestamp=2023-10-03T02:20:07.720Z, thread-id=788}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 78106861CF3A348E748D1AB71DA073285649EB5E6C94BD73BA575B22FDBC2FF7
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[WARN ] 2023-10-03T02:20:08,054Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8, invocation_id=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, invocation_timestamp=2023-10-03T02:20:07.720Z, origin=Only For Testing, session_id=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, session_timestamp=2023-10-03T02:20:07.720Z, thread-id=788}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 78106861CF3A348E748D1AB71DA073285649EB5E6C94BD73BA575B22FDBC2FF7
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[WARN ] 2023-10-03T02:20:08,071Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8] errored, dumping all transitions:

 --- Transition of flow [84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8] ---
  Timestamp: 2023-10-03T02:20:07.725Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, timestamp: 2023-10-03T02:20:07.720Z, entityType: Invocation, sessionId=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, timestamp: 2023-10-03T02:20:07.720Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=ED7446FC80EBDE416162407E142EDD283F978677469C2E87FC632274793FE9BC), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=20AB44D5FAB130759525ECF794AE735F9D0143BC2D9F6E77EF4D60A4788E7686), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7d44cad8])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7d44cad8])
    SignalFlowHasStarted(flowId=[84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7d44cad8]
    []


 --- Transition of flow [84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8] ---
  Timestamp: 2023-10-03T02:20:08.044Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 78106861CF3A348E748D1AB71DA073285649EB5E6C94BD73BA575B22FDBC2FF7, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=5751774751835992546, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 78106861CF3A348E748D1AB71DA073285649EB5E6C94BD73BA575B22FDBC2FF7)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-10-03T02:20:07.721Z
    2023-10-03T02:20:08.036Z


 --- Transition of flow [84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8] ---
  Timestamp: 2023-10-03T02:20:08.047Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8] ---
  Timestamp: 2023-10-03T02:20:08.048Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-10-03T02:20:08.036Z
    2023-10-03T02:20:08.048Z


 --- Transition of flow [84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8] ---
  Timestamp: 2023-10-03T02:20:08.067Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 78106861CF3A348E748D1AB71DA073285649EB5E6C94BD73BA575B22FDBC2FF7, errorId=5751774751835992546)], sessions=[], senderUUID=f7f108f6-79b9-473b-9caa-1c2fe49151a8)
    CreateTransaction
    RemoveCheckpoint(id=[84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=5751774751835992546, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 78106861CF3A348E748D1AB71DA073285649EB5E6C94BD73BA575B22FDBC2FF7)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, timestamp: 2023-10-03T02:20:07.720Z, entityType: Invocation, sessionId=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, timestamp: 2023-10-03T02:20:07.720Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null, serializedTelemetry=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.example.flows.ExampleFlow$Initiator, classToInitiateWith=class net.corda.samples.example.flows.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=12, corDappName=workflows-1.0, corDappHash=ED7446FC80EBDE416162407E142EDD283F978677469C2E87FC632274793FE9BC), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=2), flowState=net.corda.node.services.statemachine.FlowState$Finished@1d2d2f2b, errorState=Errored(errors=[FlowError(errorId=5751774751835992546, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 78106861CF3A348E748D1AB71DA073285649EB5E6C94BD73BA575B22FDBC2FF7)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=null, flowIoRequest=null, compatible=true), flowLogic=net.corda.samples.example.flows.ExampleFlow$Initiator@a49fd3, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=f7f108f6-79b9-473b-9caa-1c2fe49151a8, reloadCheckpointAfterSuspendCount=null, numberOfCommits=2, lock=java.util.concurrent.Semaphore@28d1010e[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=20AB44D5FAB130759525ECF794AE735F9D0143BC2D9F6E77EF4D60A4788E7686)
    net.corda.node.services.statemachine.FlowState$Finished@1d2d2f2b
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.timestamp: 
    2023-10-03T02:20:08.048Z
    2023-10-03T02:20:08.053Z
checkpoint.status: 
    RUNNABLE
    FAILED
numberOfCommits: 
    0
    2
isRemoved: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8, invocation_id=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, invocation_timestamp=2023-10-03T02:20:07.720Z, origin=Only For Testing, session_id=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, session_timestamp=2023-10-03T02:20:07.720Z, thread-id=788}
[WARN ] 2023-10-03T02:20:08,071Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=84fd48d4-0b86-48a6-bd0c-b6fc0eee4ed8, invocation_id=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, invocation_timestamp=2023-10-03T02:20:07.720Z, origin=Only For Testing, session_id=4aadc14b-1fd9-4616-98b1-6a1ec61419c5, session_timestamp=2023-10-03T02:20:07.720Z, thread-id=788}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: net.corda.samples.example.contracts.IOUContract, transaction: 78106861CF3A348E748D1AB71DA073285649EB5E6C94BD73BA575B22FDBC2FF7
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:509) ~[corda-core-4.10.jar:?]
	at net.corda.core.internal.AbstractVerifier.verify(TransactionVerifierServiceInternal.kt:80) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:250) ~[corda-core-4.10.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:676) ~[corda-core-4.10.jar:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:89) ~[main/:?]
	at net.corda.samples.example.flows.ExampleFlow$Initiator.call(ExampleFlow.kt:32) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:356) ~[corda-node-4.10.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:74) ~[corda-node-4.10.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1108) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:804) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:103) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:94) ~[quasar-core-0.7.15_r3.jar:0.7.15_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_382]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.10.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.samples.example.contracts.IOUContract.verify(IOUContract.kt:70) ~[contracts-1.0.jar:?]
	at net.corda.core.internal.TransactionVerifier.apply(TransactionVerifierServiceInternal.kt:507) ~[corda-core-4.10.jar:?]
	... 18 more
[INFO ] 2023-10-03T02:20:08,080Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T02:20:08,081Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2023-10-03T02:20:08,100Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T02:20:08,100Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:08,101Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T02:20:08,101Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-5) {}
[INFO ] 2023-10-03T02:20:08,117Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T02:20:08,117Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:08,118Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T02:20:08,119Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-6) {}
[INFO ] 2023-10-03T02:20:08,133Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T02:20:08,133Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:08,198Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-022008.134-194D24FAB1603B12/nodes/0/cordapps] {}
[INFO ] 2023-10-03T02:20:08,198Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022008.134-194D24FAB1603B12/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022008.134-194D24FAB1603B12/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T02:20:08,198Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022008.134-194D24FAB1603B12/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T02:20:08,214Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022008.134-194D24FAB1603B12/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T02:20:08,229Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:08,230Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T02:20:08,230Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T02:20:08,230Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T02:20:08,232Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T02:20:08,232Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLADtm4bDCJ11gTpgBxPx33RLL1iJ5qJPrMXyQLxhSaTq7, alias: identity-private-key {}
[INFO ] 2023-10-03T02:20:08,236Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.witness.flows.DeleteDidFlow to initiate com.persistent.did.witness.flows.DeleteDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:08,236Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T02:20:08,236Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.CreateDidFlow to initiate net.corda.samples.witness.flows.CreateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:08,236Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.flows.FetchDidDocumentFromRegistryNodeFlow to initiate net.corda.samples.witness.flows.FetchDidDocumentFromRegistryNodeResponderFlow (version 1) {}
[INFO ] 2023-10-03T02:20:08,236Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.UpdateDidFlow to initiate net.corda.samples.witness.flows.UpdateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:08,239Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T02:20:08.134Z
      epoch=1
  } {}
[WARN ] 2023-10-03T02:20:08,522Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.persistent.did.state.DidSchema v1 {}
[INFO ] 2023-10-03T02:20:08,545Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T02:20:08,546Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T02:20:08,546Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T02:20:08,702Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T02:20:08,705Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T02:20:08,706Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299608705), owningKey=DLADtm4bDCJ11gTpgBxPx33RLL1iJ5qJPrMXyQLxhSaTq7 {}
[INFO ] 2023-10-03T02:20:08,706Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T02:20:08,715Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299608705) {}
[INFO ] 2023-10-03T02:20:08,721Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T02:20:08,721Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T02:20:08,721Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T02:20:08,726Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299608705), owningKey=DLADtm4bDCJ11gTpgBxPx33RLL1iJ5qJPrMXyQLxhSaTq7 {}
[INFO ] 2023-10-03T02:20:08,726Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:08,785Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=5D8DB4D902E807E63DE1E9414EAC4E7A72D384C58FE69BF142B366888EAC7D30 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T02:20:08,787Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-10-03T02:20:08,798Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299608705) {}
[INFO ] 2023-10-03T02:20:08,798Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T02:20:08,798Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299608705), owningKey=DLADtm4bDCJ11gTpgBxPx33RLL1iJ5qJPrMXyQLxhSaTq7 {}
[INFO ] 2023-10-03T02:20:08,798Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:08,798Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299608705), owningKey=DLADtm4bDCJ11gTpgBxPx33RLL1iJ5qJPrMXyQLxhSaTq7 {}
[INFO ] 2023-10-03T02:20:08,798Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:08,801Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-022008.134-194D24FAB1603B12/nodes/1/cordapps] {}
[INFO ] 2023-10-03T02:20:08,802Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022008.134-194D24FAB1603B12/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022008.134-194D24FAB1603B12/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T02:20:08,802Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022008.134-194D24FAB1603B12/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T02:20:08,815Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022008.134-194D24FAB1603B12/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T02:20:08,831Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:08,831Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T02:20:08,832Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T02:20:08,832Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T02:20:08,855Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T02:20:08,856Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLCBx3B1jPZCP1ZuybYtYC2Y4uJW28eTXXdnDZ61N6KqNF, alias: identity-private-key {}
[INFO ] 2023-10-03T02:20:08,859Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.witness.flows.DeleteDidFlow to initiate com.persistent.did.witness.flows.DeleteDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:08,859Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T02:20:08,859Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.CreateDidFlow to initiate net.corda.samples.witness.flows.CreateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:08,859Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.flows.FetchDidDocumentFromRegistryNodeFlow to initiate net.corda.samples.witness.flows.FetchDidDocumentFromRegistryNodeResponderFlow (version 1) {}
[INFO ] 2023-10-03T02:20:08,859Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.UpdateDidFlow to initiate net.corda.samples.witness.flows.UpdateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:08,861Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T02:20:08.134Z
      epoch=1
  } {}
[WARN ] 2023-10-03T02:20:09,047Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.persistent.did.state.DidSchema v1 {}
[INFO ] 2023-10-03T02:20:09,070Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T02:20:09,071Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:09,072Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:09,203Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:09,206Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T02:20:09,208Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299609206), owningKey=DLCBx3B1jPZCP1ZuybYtYC2Y4uJW28eTXXdnDZ61N6KqNF {}
[INFO ] 2023-10-03T02:20:09,208Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:09,212Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299609206) {}
[INFO ] 2023-10-03T02:20:09,217Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T02:20:09,217Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T02:20:09,217Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T02:20:09,222Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299609206), owningKey=DLCBx3B1jPZCP1ZuybYtYC2Y4uJW28eTXXdnDZ61N6KqNF {}
[INFO ] 2023-10-03T02:20:09,222Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:09,285Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=5D8DB4D902E807E63DE1E9414EAC4E7A72D384C58FE69BF142B366888EAC7D30 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T02:20:09,306Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299609206) {}
[INFO ] 2023-10-03T02:20:09,306Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T02:20:09,307Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299608705), owningKey=DLADtm4bDCJ11gTpgBxPx33RLL1iJ5qJPrMXyQLxhSaTq7 {}
[INFO ] 2023-10-03T02:20:09,307Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T02:20:09,316Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299609206), owningKey=DLCBx3B1jPZCP1ZuybYtYC2Y4uJW28eTXXdnDZ61N6KqNF {}
[INFO ] 2023-10-03T02:20:09,316Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:09,322Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299609206), owningKey=DLCBx3B1jPZCP1ZuybYtYC2Y4uJW28eTXXdnDZ61N6KqNF {}
[INFO ] 2023-10-03T02:20:09,322Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:09,322Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299609206), owningKey=DLCBx3B1jPZCP1ZuybYtYC2Y4uJW28eTXXdnDZ61N6KqNF {}
[INFO ] 2023-10-03T02:20:09,322Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:09,326Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-022008.134-194D24FAB1603B12/nodes/2/cordapps] {}
[INFO ] 2023-10-03T02:20:09,326Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022008.134-194D24FAB1603B12/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022008.134-194D24FAB1603B12/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T02:20:09,326Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022008.134-194D24FAB1603B12/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T02:20:09,339Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022008.134-194D24FAB1603B12/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T02:20:09,353Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:09,353Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T02:20:09,353Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T02:20:09,353Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T02:20:09,373Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T02:20:09,373Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGhFuJep2EVDBtAWHrJcLLKP2H4fQRsminHPZSehyJwy2, alias: identity-private-key {}
[INFO ] 2023-10-03T02:20:09,377Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.witness.flows.DeleteDidFlow to initiate com.persistent.did.witness.flows.DeleteDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:09,377Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T02:20:09,377Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.CreateDidFlow to initiate net.corda.samples.witness.flows.CreateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:09,377Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.flows.FetchDidDocumentFromRegistryNodeFlow to initiate net.corda.samples.witness.flows.FetchDidDocumentFromRegistryNodeResponderFlow (version 1) {}
[INFO ] 2023-10-03T02:20:09,377Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.UpdateDidFlow to initiate net.corda.samples.witness.flows.UpdateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:09,378Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T02:20:08.134Z
      epoch=1
  } {}
[WARN ] 2023-10-03T02:20:09,550Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.persistent.did.state.DidSchema v1 {}
[INFO ] 2023-10-03T02:20:09,576Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T02:20:09,577Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:09,577Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:09,703Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:09,706Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T02:20:09,709Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299609706), owningKey=DLGhFuJep2EVDBtAWHrJcLLKP2H4fQRsminHPZSehyJwy2 {}
[INFO ] 2023-10-03T02:20:09,709Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:09,713Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299609706) {}
[INFO ] 2023-10-03T02:20:09,716Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T02:20:09,716Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T02:20:09,716Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T02:20:09,721Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299609706), owningKey=DLGhFuJep2EVDBtAWHrJcLLKP2H4fQRsminHPZSehyJwy2 {}
[INFO ] 2023-10-03T02:20:09,721Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:09,785Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=5D8DB4D902E807E63DE1E9414EAC4E7A72D384C58FE69BF142B366888EAC7D30 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T02:20:09,798Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299609706) {}
[INFO ] 2023-10-03T02:20:09,798Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T02:20:09,799Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299608705), owningKey=DLADtm4bDCJ11gTpgBxPx33RLL1iJ5qJPrMXyQLxhSaTq7 {}
[INFO ] 2023-10-03T02:20:09,799Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T02:20:09,806Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299609706), owningKey=DLGhFuJep2EVDBtAWHrJcLLKP2H4fQRsminHPZSehyJwy2 {}
[INFO ] 2023-10-03T02:20:09,806Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:09,812Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299609206), owningKey=DLCBx3B1jPZCP1ZuybYtYC2Y4uJW28eTXXdnDZ61N6KqNF {}
[INFO ] 2023-10-03T02:20:09,812Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:09,818Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299609706), owningKey=DLGhFuJep2EVDBtAWHrJcLLKP2H4fQRsminHPZSehyJwy2 {}
[INFO ] 2023-10-03T02:20:09,818Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:09,825Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299609706), owningKey=DLGhFuJep2EVDBtAWHrJcLLKP2H4fQRsminHPZSehyJwy2 {}
[INFO ] 2023-10-03T02:20:09,825Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:09,825Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299609706), owningKey=DLGhFuJep2EVDBtAWHrJcLLKP2H4fQRsminHPZSehyJwy2 {}
[INFO ] 2023-10-03T02:20:09,825Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-10-03T02:20:09,825Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-10-03T02:20:09,825Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-10-03T02:20:09,825Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-10-03T02:20:09,825Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T02:20:09,977Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=44cbae67-59ef-46b8-a86c-53a60b6cad58, invocation_id=af5271c9-5b58-458b-b1b4-d57bbe118063, invocation_timestamp=2023-10-03T02:20:09.961Z, origin=O=Mock Company 1, L=London, C=GB, session_id=af5271c9-5b58-458b-b1b4-d57bbe118063, session_timestamp=2023-10-03T02:20:09.961Z, thread-id=1142, tx_id=24A0A51985375352F60445F5DCA5902F823CB0E7FBA975A87A9359FFC99FD647}
[INFO ] 2023-10-03T02:20:09,991Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=44cbae67-59ef-46b8-a86c-53a60b6cad58, invocation_id=af5271c9-5b58-458b-b1b4-d57bbe118063, invocation_timestamp=2023-10-03T02:20:09.961Z, origin=O=Mock Company 1, L=London, C=GB, session_id=af5271c9-5b58-458b-b1b4-d57bbe118063, session_timestamp=2023-10-03T02:20:09.961Z, thread-id=1142, tx_id=24A0A51985375352F60445F5DCA5902F823CB0E7FBA975A87A9359FFC99FD647}
[INFO ] 2023-10-03T02:20:10,103Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=aaff6389-4898-4612-af02-10233307f6d1, invocation_id=cc03701f-bb27-40ad-9c43-8baea3828a31, invocation_timestamp=2023-10-03T02:20:09.826Z, origin=Only For Testing, session_id=cc03701f-bb27-40ad-9c43-8baea3828a31, session_timestamp=2023-10-03T02:20:09.826Z, thread-id=1142, tx_id=24A0A51985375352F60445F5DCA5902F823CB0E7FBA975A87A9359FFC99FD647}
[INFO ] 2023-10-03T02:20:10,103Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=aaff6389-4898-4612-af02-10233307f6d1, invocation_id=cc03701f-bb27-40ad-9c43-8baea3828a31, invocation_timestamp=2023-10-03T02:20:09.826Z, origin=Only For Testing, session_id=cc03701f-bb27-40ad-9c43-8baea3828a31, session_timestamp=2023-10-03T02:20:09.826Z, thread-id=1142, tx_id=24A0A51985375352F60445F5DCA5902F823CB0E7FBA975A87A9359FFC99FD647}
[INFO ] 2023-10-03T02:20:10,114Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=aaff6389-4898-4612-af02-10233307f6d1, invocation_id=cc03701f-bb27-40ad-9c43-8baea3828a31, invocation_timestamp=2023-10-03T02:20:09.826Z, origin=Only For Testing, session_id=cc03701f-bb27-40ad-9c43-8baea3828a31, session_timestamp=2023-10-03T02:20:09.826Z, thread-id=1142, tx_id=24A0A51985375352F60445F5DCA5902F823CB0E7FBA975A87A9359FFC99FD647}
[INFO ] 2023-10-03T02:20:10,127Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=44cbae67-59ef-46b8-a86c-53a60b6cad58, invocation_id=af5271c9-5b58-458b-b1b4-d57bbe118063, invocation_timestamp=2023-10-03T02:20:09.961Z, origin=O=Mock Company 1, L=London, C=GB, session_id=af5271c9-5b58-458b-b1b4-d57bbe118063, session_timestamp=2023-10-03T02:20:09.961Z, thread-id=1142, tx_id=24A0A51985375352F60445F5DCA5902F823CB0E7FBA975A87A9359FFC99FD647}
[INFO ] 2023-10-03T02:20:10,133Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=44cbae67-59ef-46b8-a86c-53a60b6cad58, invocation_id=af5271c9-5b58-458b-b1b4-d57bbe118063, invocation_timestamp=2023-10-03T02:20:09.961Z, origin=O=Mock Company 1, L=London, C=GB, session_id=af5271c9-5b58-458b-b1b4-d57bbe118063, session_timestamp=2023-10-03T02:20:09.961Z, thread-id=1142, tx_id=24A0A51985375352F60445F5DCA5902F823CB0E7FBA975A87A9359FFC99FD647}
[INFO ] 2023-10-03T02:20:10,135Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=44cbae67-59ef-46b8-a86c-53a60b6cad58, invocation_id=af5271c9-5b58-458b-b1b4-d57bbe118063, invocation_timestamp=2023-10-03T02:20:09.961Z, origin=O=Mock Company 1, L=London, C=GB, session_id=af5271c9-5b58-458b-b1b4-d57bbe118063, session_timestamp=2023-10-03T02:20:09.961Z, thread-id=1142, tx_id=24A0A51985375352F60445F5DCA5902F823CB0E7FBA975A87A9359FFC99FD647}
[INFO ] 2023-10-03T02:20:10,140Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=44cbae67-59ef-46b8-a86c-53a60b6cad58, invocation_id=af5271c9-5b58-458b-b1b4-d57bbe118063, invocation_timestamp=2023-10-03T02:20:09.961Z, origin=O=Mock Company 1, L=London, C=GB, session_id=af5271c9-5b58-458b-b1b4-d57bbe118063, session_timestamp=2023-10-03T02:20:09.961Z, thread-id=1142, tx_id=24A0A51985375352F60445F5DCA5902F823CB0E7FBA975A87A9359FFC99FD647}
[INFO ] 2023-10-03T02:20:10,149Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=aaff6389-4898-4612-af02-10233307f6d1, invocation_id=cc03701f-bb27-40ad-9c43-8baea3828a31, invocation_timestamp=2023-10-03T02:20:09.826Z, origin=Only For Testing, session_id=cc03701f-bb27-40ad-9c43-8baea3828a31, session_timestamp=2023-10-03T02:20:09.826Z, thread-id=1142, tx_id=24A0A51985375352F60445F5DCA5902F823CB0E7FBA975A87A9359FFC99FD647}
[INFO ] 2023-10-03T02:20:10,149Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=aaff6389-4898-4612-af02-10233307f6d1, invocation_id=cc03701f-bb27-40ad-9c43-8baea3828a31, invocation_timestamp=2023-10-03T02:20:09.826Z, origin=Only For Testing, session_id=cc03701f-bb27-40ad-9c43-8baea3828a31, session_timestamp=2023-10-03T02:20:09.826Z, thread-id=1142, tx_id=24A0A51985375352F60445F5DCA5902F823CB0E7FBA975A87A9359FFC99FD647}
[INFO ] 2023-10-03T02:20:10,157Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T02:20:10,158Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-7) {}
[INFO ] 2023-10-03T02:20:10,176Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T02:20:10,176Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:10,177Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T02:20:10,178Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-8) {}
[INFO ] 2023-10-03T02:20:10,192Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T02:20:10,192Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:10,192Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T02:20:10,193Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-9) {}
[INFO ] 2023-10-03T02:20:10,208Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T02:20:10,208Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:10,271Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-022010.209-F1489A16677CA6FE/nodes/0/cordapps] {}
[INFO ] 2023-10-03T02:20:10,271Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022010.209-F1489A16677CA6FE/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022010.209-F1489A16677CA6FE/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T02:20:10,271Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022010.209-F1489A16677CA6FE/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T02:20:10,291Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022010.209-F1489A16677CA6FE/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T02:20:10,305Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:10,306Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T02:20:10,306Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T02:20:10,306Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T02:20:10,307Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T02:20:10,307Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLCPPj1Fk8zsY8b2ro18v6pbbMgVxmXdfL2EmLNXgCj4Mp, alias: identity-private-key {}
[INFO ] 2023-10-03T02:20:10,311Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.witness.flows.DeleteDidFlow to initiate com.persistent.did.witness.flows.DeleteDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:10,311Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T02:20:10,311Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.CreateDidFlow to initiate net.corda.samples.witness.flows.CreateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:10,311Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.flows.FetchDidDocumentFromRegistryNodeFlow to initiate net.corda.samples.witness.flows.FetchDidDocumentFromRegistryNodeResponderFlow (version 1) {}
[INFO ] 2023-10-03T02:20:10,311Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.UpdateDidFlow to initiate net.corda.samples.witness.flows.UpdateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:10,314Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T02:20:10.209Z
      epoch=1
  } {}
[WARN ] 2023-10-03T02:20:10,555Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.persistent.did.state.DidSchema v1 {}
[INFO ] 2023-10-03T02:20:10,574Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T02:20:10,576Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T02:20:10,576Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T02:20:10,702Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T02:20:10,705Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T02:20:10,706Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299610705), owningKey=DLCPPj1Fk8zsY8b2ro18v6pbbMgVxmXdfL2EmLNXgCj4Mp {}
[INFO ] 2023-10-03T02:20:10,706Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T02:20:10,715Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299610705) {}
[INFO ] 2023-10-03T02:20:10,720Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T02:20:10,720Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T02:20:10,720Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T02:20:10,724Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299610705), owningKey=DLCPPj1Fk8zsY8b2ro18v6pbbMgVxmXdfL2EmLNXgCj4Mp {}
[INFO ] 2023-10-03T02:20:10,724Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:10,785Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=5D8DB4D902E807E63DE1E9414EAC4E7A72D384C58FE69BF142B366888EAC7D30 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T02:20:10,787Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-10-03T02:20:10,797Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299610705) {}
[INFO ] 2023-10-03T02:20:10,797Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T02:20:10,797Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299610705), owningKey=DLCPPj1Fk8zsY8b2ro18v6pbbMgVxmXdfL2EmLNXgCj4Mp {}
[INFO ] 2023-10-03T02:20:10,797Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:10,797Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299610705), owningKey=DLCPPj1Fk8zsY8b2ro18v6pbbMgVxmXdfL2EmLNXgCj4Mp {}
[INFO ] 2023-10-03T02:20:10,797Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:10,801Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-022010.209-F1489A16677CA6FE/nodes/1/cordapps] {}
[INFO ] 2023-10-03T02:20:10,801Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022010.209-F1489A16677CA6FE/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022010.209-F1489A16677CA6FE/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T02:20:10,801Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022010.209-F1489A16677CA6FE/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T02:20:10,814Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022010.209-F1489A16677CA6FE/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T02:20:10,828Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:10,829Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T02:20:10,829Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T02:20:10,829Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T02:20:10,846Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T02:20:10,846Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLJ7KS7D5cFnxotrKGEWviQf1gPuwFpjjyupVpLrNv7ogK, alias: identity-private-key {}
[INFO ] 2023-10-03T02:20:10,850Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.witness.flows.DeleteDidFlow to initiate com.persistent.did.witness.flows.DeleteDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:10,850Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T02:20:10,850Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.CreateDidFlow to initiate net.corda.samples.witness.flows.CreateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:10,850Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.flows.FetchDidDocumentFromRegistryNodeFlow to initiate net.corda.samples.witness.flows.FetchDidDocumentFromRegistryNodeResponderFlow (version 1) {}
[INFO ] 2023-10-03T02:20:10,850Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.UpdateDidFlow to initiate net.corda.samples.witness.flows.UpdateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:10,851Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T02:20:10.209Z
      epoch=1
  } {}
[WARN ] 2023-10-03T02:20:11,005Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.persistent.did.state.DidSchema v1 {}
[INFO ] 2023-10-03T02:20:11,021Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T02:20:11,022Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:11,022Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:11,138Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:11,140Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T02:20:11,142Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299611140), owningKey=DLJ7KS7D5cFnxotrKGEWviQf1gPuwFpjjyupVpLrNv7ogK {}
[INFO ] 2023-10-03T02:20:11,142Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:11,145Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299611140) {}
[INFO ] 2023-10-03T02:20:11,148Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T02:20:11,148Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T02:20:11,148Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T02:20:11,153Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299611140), owningKey=DLJ7KS7D5cFnxotrKGEWviQf1gPuwFpjjyupVpLrNv7ogK {}
[INFO ] 2023-10-03T02:20:11,153Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:11,212Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=5D8DB4D902E807E63DE1E9414EAC4E7A72D384C58FE69BF142B366888EAC7D30 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T02:20:11,222Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299611140) {}
[INFO ] 2023-10-03T02:20:11,223Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T02:20:11,223Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299610705), owningKey=DLCPPj1Fk8zsY8b2ro18v6pbbMgVxmXdfL2EmLNXgCj4Mp {}
[INFO ] 2023-10-03T02:20:11,223Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T02:20:11,230Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299611140), owningKey=DLJ7KS7D5cFnxotrKGEWviQf1gPuwFpjjyupVpLrNv7ogK {}
[INFO ] 2023-10-03T02:20:11,230Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:11,234Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299611140), owningKey=DLJ7KS7D5cFnxotrKGEWviQf1gPuwFpjjyupVpLrNv7ogK {}
[INFO ] 2023-10-03T02:20:11,234Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:11,234Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299611140), owningKey=DLJ7KS7D5cFnxotrKGEWviQf1gPuwFpjjyupVpLrNv7ogK {}
[INFO ] 2023-10-03T02:20:11,234Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:11,239Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-022010.209-F1489A16677CA6FE/nodes/2/cordapps] {}
[INFO ] 2023-10-03T02:20:11,240Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022010.209-F1489A16677CA6FE/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022010.209-F1489A16677CA6FE/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T02:20:11,240Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022010.209-F1489A16677CA6FE/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T02:20:11,253Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022010.209-F1489A16677CA6FE/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T02:20:11,266Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:11,267Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T02:20:11,267Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T02:20:11,267Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T02:20:11,287Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T02:20:11,287Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLHjckxVTGCWYb1GfnLeXBWkuxVEp2Wn5UcJ3SLenj3Whk, alias: identity-private-key {}
[INFO ] 2023-10-03T02:20:11,290Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.witness.flows.DeleteDidFlow to initiate com.persistent.did.witness.flows.DeleteDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:11,290Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T02:20:11,290Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.CreateDidFlow to initiate net.corda.samples.witness.flows.CreateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:11,290Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.flows.FetchDidDocumentFromRegistryNodeFlow to initiate net.corda.samples.witness.flows.FetchDidDocumentFromRegistryNodeResponderFlow (version 1) {}
[INFO ] 2023-10-03T02:20:11,290Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.UpdateDidFlow to initiate net.corda.samples.witness.flows.UpdateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:11,292Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T02:20:10.209Z
      epoch=1
  } {}
[WARN ] 2023-10-03T02:20:11,452Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.persistent.did.state.DidSchema v1 {}
[INFO ] 2023-10-03T02:20:11,469Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T02:20:11,469Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:11,470Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:11,571Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:11,574Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T02:20:11,576Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299611574), owningKey=DLHjckxVTGCWYb1GfnLeXBWkuxVEp2Wn5UcJ3SLenj3Whk {}
[INFO ] 2023-10-03T02:20:11,576Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:11,580Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299611574) {}
[INFO ] 2023-10-03T02:20:11,582Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T02:20:11,582Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T02:20:11,582Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T02:20:11,586Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299611574), owningKey=DLHjckxVTGCWYb1GfnLeXBWkuxVEp2Wn5UcJ3SLenj3Whk {}
[INFO ] 2023-10-03T02:20:11,586Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:11,643Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=5D8DB4D902E807E63DE1E9414EAC4E7A72D384C58FE69BF142B366888EAC7D30 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T02:20:11,654Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299611574) {}
[INFO ] 2023-10-03T02:20:11,654Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T02:20:11,655Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299610705), owningKey=DLCPPj1Fk8zsY8b2ro18v6pbbMgVxmXdfL2EmLNXgCj4Mp {}
[INFO ] 2023-10-03T02:20:11,655Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T02:20:11,662Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299611574), owningKey=DLHjckxVTGCWYb1GfnLeXBWkuxVEp2Wn5UcJ3SLenj3Whk {}
[INFO ] 2023-10-03T02:20:11,662Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:11,668Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299611140), owningKey=DLJ7KS7D5cFnxotrKGEWviQf1gPuwFpjjyupVpLrNv7ogK {}
[INFO ] 2023-10-03T02:20:11,668Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:11,673Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299611574), owningKey=DLHjckxVTGCWYb1GfnLeXBWkuxVEp2Wn5UcJ3SLenj3Whk {}
[INFO ] 2023-10-03T02:20:11,673Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:11,677Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299611574), owningKey=DLHjckxVTGCWYb1GfnLeXBWkuxVEp2Wn5UcJ3SLenj3Whk {}
[INFO ] 2023-10-03T02:20:11,677Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:11,678Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299611574), owningKey=DLHjckxVTGCWYb1GfnLeXBWkuxVEp2Wn5UcJ3SLenj3Whk {}
[INFO ] 2023-10-03T02:20:11,678Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-10-03T02:20:11,678Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-10-03T02:20:11,678Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-10-03T02:20:11,678Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-10-03T02:20:11,678Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T02:20:11,788Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=b240bdb9-dc9d-49c6-b89f-f79443e9c8af, invocation_id=abe6a5cc-c03a-4fab-8e64-a5709a480bae, invocation_timestamp=2023-10-03T02:20:11.777Z, origin=O=Mock Company 1, L=London, C=GB, session_id=abe6a5cc-c03a-4fab-8e64-a5709a480bae, session_timestamp=2023-10-03T02:20:11.777Z, thread-id=1520, tx_id=8684915831CBDFE8277057296210F2444D1D1C4AA9654A6DABBFE94CC4250DD2}
[INFO ] 2023-10-03T02:20:11,796Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=b240bdb9-dc9d-49c6-b89f-f79443e9c8af, invocation_id=abe6a5cc-c03a-4fab-8e64-a5709a480bae, invocation_timestamp=2023-10-03T02:20:11.777Z, origin=O=Mock Company 1, L=London, C=GB, session_id=abe6a5cc-c03a-4fab-8e64-a5709a480bae, session_timestamp=2023-10-03T02:20:11.777Z, thread-id=1520, tx_id=8684915831CBDFE8277057296210F2444D1D1C4AA9654A6DABBFE94CC4250DD2}
[INFO ] 2023-10-03T02:20:11,897Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=1b2199e8-e3c5-4120-93ad-54d4567c59c7, invocation_id=a32375ab-ea05-42fc-beeb-d4407018b218, invocation_timestamp=2023-10-03T02:20:11.678Z, origin=Only For Testing, session_id=a32375ab-ea05-42fc-beeb-d4407018b218, session_timestamp=2023-10-03T02:20:11.678Z, thread-id=1520, tx_id=8684915831CBDFE8277057296210F2444D1D1C4AA9654A6DABBFE94CC4250DD2}
[INFO ] 2023-10-03T02:20:11,897Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=1b2199e8-e3c5-4120-93ad-54d4567c59c7, invocation_id=a32375ab-ea05-42fc-beeb-d4407018b218, invocation_timestamp=2023-10-03T02:20:11.678Z, origin=Only For Testing, session_id=a32375ab-ea05-42fc-beeb-d4407018b218, session_timestamp=2023-10-03T02:20:11.678Z, thread-id=1520, tx_id=8684915831CBDFE8277057296210F2444D1D1C4AA9654A6DABBFE94CC4250DD2}
[INFO ] 2023-10-03T02:20:11,908Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=1b2199e8-e3c5-4120-93ad-54d4567c59c7, invocation_id=a32375ab-ea05-42fc-beeb-d4407018b218, invocation_timestamp=2023-10-03T02:20:11.678Z, origin=Only For Testing, session_id=a32375ab-ea05-42fc-beeb-d4407018b218, session_timestamp=2023-10-03T02:20:11.678Z, thread-id=1520, tx_id=8684915831CBDFE8277057296210F2444D1D1C4AA9654A6DABBFE94CC4250DD2}
[INFO ] 2023-10-03T02:20:11,918Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=b240bdb9-dc9d-49c6-b89f-f79443e9c8af, invocation_id=abe6a5cc-c03a-4fab-8e64-a5709a480bae, invocation_timestamp=2023-10-03T02:20:11.777Z, origin=O=Mock Company 1, L=London, C=GB, session_id=abe6a5cc-c03a-4fab-8e64-a5709a480bae, session_timestamp=2023-10-03T02:20:11.777Z, thread-id=1520, tx_id=8684915831CBDFE8277057296210F2444D1D1C4AA9654A6DABBFE94CC4250DD2}
[INFO ] 2023-10-03T02:20:11,924Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=b240bdb9-dc9d-49c6-b89f-f79443e9c8af, invocation_id=abe6a5cc-c03a-4fab-8e64-a5709a480bae, invocation_timestamp=2023-10-03T02:20:11.777Z, origin=O=Mock Company 1, L=London, C=GB, session_id=abe6a5cc-c03a-4fab-8e64-a5709a480bae, session_timestamp=2023-10-03T02:20:11.777Z, thread-id=1520, tx_id=8684915831CBDFE8277057296210F2444D1D1C4AA9654A6DABBFE94CC4250DD2}
[INFO ] 2023-10-03T02:20:11,926Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=b240bdb9-dc9d-49c6-b89f-f79443e9c8af, invocation_id=abe6a5cc-c03a-4fab-8e64-a5709a480bae, invocation_timestamp=2023-10-03T02:20:11.777Z, origin=O=Mock Company 1, L=London, C=GB, session_id=abe6a5cc-c03a-4fab-8e64-a5709a480bae, session_timestamp=2023-10-03T02:20:11.777Z, thread-id=1520, tx_id=8684915831CBDFE8277057296210F2444D1D1C4AA9654A6DABBFE94CC4250DD2}
[INFO ] 2023-10-03T02:20:11,931Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=b240bdb9-dc9d-49c6-b89f-f79443e9c8af, invocation_id=abe6a5cc-c03a-4fab-8e64-a5709a480bae, invocation_timestamp=2023-10-03T02:20:11.777Z, origin=O=Mock Company 1, L=London, C=GB, session_id=abe6a5cc-c03a-4fab-8e64-a5709a480bae, session_timestamp=2023-10-03T02:20:11.777Z, thread-id=1520, tx_id=8684915831CBDFE8277057296210F2444D1D1C4AA9654A6DABBFE94CC4250DD2}
[INFO ] 2023-10-03T02:20:11,942Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=1b2199e8-e3c5-4120-93ad-54d4567c59c7, invocation_id=a32375ab-ea05-42fc-beeb-d4407018b218, invocation_timestamp=2023-10-03T02:20:11.678Z, origin=Only For Testing, session_id=a32375ab-ea05-42fc-beeb-d4407018b218, session_timestamp=2023-10-03T02:20:11.678Z, thread-id=1520, tx_id=8684915831CBDFE8277057296210F2444D1D1C4AA9654A6DABBFE94CC4250DD2}
[INFO ] 2023-10-03T02:20:11,942Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=1b2199e8-e3c5-4120-93ad-54d4567c59c7, invocation_id=a32375ab-ea05-42fc-beeb-d4407018b218, invocation_timestamp=2023-10-03T02:20:11.678Z, origin=Only For Testing, session_id=a32375ab-ea05-42fc-beeb-d4407018b218, session_timestamp=2023-10-03T02:20:11.678Z, thread-id=1520, tx_id=8684915831CBDFE8277057296210F2444D1D1C4AA9654A6DABBFE94CC4250DD2}
[INFO ] 2023-10-03T02:20:11,957Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T02:20:11,958Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-10) {}
[INFO ] 2023-10-03T02:20:11,976Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T02:20:11,976Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:11,976Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T02:20:11,977Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-11) {}
[INFO ] 2023-10-03T02:20:11,992Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T02:20:11,992Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:11,992Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T02:20:11,993Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-12) {}
[INFO ] 2023-10-03T02:20:12,008Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T02:20:12,008Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:12,064Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-022012.009-693FBD7F8CB636FB/nodes/0/cordapps] {}
[INFO ] 2023-10-03T02:20:12,064Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022012.009-693FBD7F8CB636FB/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022012.009-693FBD7F8CB636FB/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T02:20:12,064Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022012.009-693FBD7F8CB636FB/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T02:20:12,077Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022012.009-693FBD7F8CB636FB/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T02:20:12,091Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:12,091Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T02:20:12,092Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T02:20:12,092Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T02:20:12,093Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T02:20:12,093Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLFg7fjeQ1a1Rvb83TSMr2zjkrfnNwhHWRNXbgsEY65amX, alias: identity-private-key {}
[INFO ] 2023-10-03T02:20:12,097Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.witness.flows.DeleteDidFlow to initiate com.persistent.did.witness.flows.DeleteDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:12,097Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T02:20:12,097Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.CreateDidFlow to initiate net.corda.samples.witness.flows.CreateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:12,097Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.flows.FetchDidDocumentFromRegistryNodeFlow to initiate net.corda.samples.witness.flows.FetchDidDocumentFromRegistryNodeResponderFlow (version 1) {}
[INFO ] 2023-10-03T02:20:12,097Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.UpdateDidFlow to initiate net.corda.samples.witness.flows.UpdateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:12,100Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T02:20:12.009Z
      epoch=1
  } {}
[WARN ] 2023-10-03T02:20:12,288Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.persistent.did.state.DidSchema v1 {}
[INFO ] 2023-10-03T02:20:12,303Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T02:20:12,304Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T02:20:12,304Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T02:20:12,425Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T02:20:12,427Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T02:20:12,428Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299612427), owningKey=DLFg7fjeQ1a1Rvb83TSMr2zjkrfnNwhHWRNXbgsEY65amX {}
[INFO ] 2023-10-03T02:20:12,428Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T02:20:12,435Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299612427) {}
[INFO ] 2023-10-03T02:20:12,439Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T02:20:12,440Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T02:20:12,440Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T02:20:12,444Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299612427), owningKey=DLFg7fjeQ1a1Rvb83TSMr2zjkrfnNwhHWRNXbgsEY65amX {}
[INFO ] 2023-10-03T02:20:12,444Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:12,507Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=5D8DB4D902E807E63DE1E9414EAC4E7A72D384C58FE69BF142B366888EAC7D30 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T02:20:12,509Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-10-03T02:20:12,518Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299612427) {}
[INFO ] 2023-10-03T02:20:12,519Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T02:20:12,519Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299612427), owningKey=DLFg7fjeQ1a1Rvb83TSMr2zjkrfnNwhHWRNXbgsEY65amX {}
[INFO ] 2023-10-03T02:20:12,519Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:12,519Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299612427), owningKey=DLFg7fjeQ1a1Rvb83TSMr2zjkrfnNwhHWRNXbgsEY65amX {}
[INFO ] 2023-10-03T02:20:12,519Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:12,522Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-022012.009-693FBD7F8CB636FB/nodes/1/cordapps] {}
[INFO ] 2023-10-03T02:20:12,522Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022012.009-693FBD7F8CB636FB/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022012.009-693FBD7F8CB636FB/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T02:20:12,522Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022012.009-693FBD7F8CB636FB/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T02:20:12,534Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022012.009-693FBD7F8CB636FB/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T02:20:12,547Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:12,548Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T02:20:12,548Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T02:20:12,548Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T02:20:12,565Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T02:20:12,565Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL4SUVURufZq8Si3Fkz8M6JAEgwFD9UjZGAsXsE1oa4UYm, alias: identity-private-key {}
[INFO ] 2023-10-03T02:20:12,569Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.witness.flows.DeleteDidFlow to initiate com.persistent.did.witness.flows.DeleteDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:12,569Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T02:20:12,569Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.CreateDidFlow to initiate net.corda.samples.witness.flows.CreateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:12,569Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.flows.FetchDidDocumentFromRegistryNodeFlow to initiate net.corda.samples.witness.flows.FetchDidDocumentFromRegistryNodeResponderFlow (version 1) {}
[INFO ] 2023-10-03T02:20:12,569Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.UpdateDidFlow to initiate net.corda.samples.witness.flows.UpdateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:12,570Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T02:20:12.009Z
      epoch=1
  } {}
[WARN ] 2023-10-03T02:20:12,721Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.persistent.did.state.DidSchema v1 {}
[INFO ] 2023-10-03T02:20:12,741Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T02:20:12,742Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:12,743Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:12,848Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:12,851Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T02:20:12,852Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299612851), owningKey=DL4SUVURufZq8Si3Fkz8M6JAEgwFD9UjZGAsXsE1oa4UYm {}
[INFO ] 2023-10-03T02:20:12,852Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:12,856Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299612851) {}
[INFO ] 2023-10-03T02:20:12,858Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T02:20:12,859Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T02:20:12,859Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T02:20:12,862Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299612851), owningKey=DL4SUVURufZq8Si3Fkz8M6JAEgwFD9UjZGAsXsE1oa4UYm {}
[INFO ] 2023-10-03T02:20:12,862Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:12,925Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=5D8DB4D902E807E63DE1E9414EAC4E7A72D384C58FE69BF142B366888EAC7D30 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T02:20:12,935Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299612851) {}
[INFO ] 2023-10-03T02:20:12,935Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T02:20:12,936Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299612427), owningKey=DLFg7fjeQ1a1Rvb83TSMr2zjkrfnNwhHWRNXbgsEY65amX {}
[INFO ] 2023-10-03T02:20:12,936Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T02:20:12,941Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299612851), owningKey=DL4SUVURufZq8Si3Fkz8M6JAEgwFD9UjZGAsXsE1oa4UYm {}
[INFO ] 2023-10-03T02:20:12,941Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:12,945Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299612851), owningKey=DL4SUVURufZq8Si3Fkz8M6JAEgwFD9UjZGAsXsE1oa4UYm {}
[INFO ] 2023-10-03T02:20:12,945Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:12,945Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299612851), owningKey=DL4SUVURufZq8Si3Fkz8M6JAEgwFD9UjZGAsXsE1oa4UYm {}
[INFO ] 2023-10-03T02:20:12,945Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:12,947Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-022012.009-693FBD7F8CB636FB/nodes/2/cordapps] {}
[INFO ] 2023-10-03T02:20:12,948Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022012.009-693FBD7F8CB636FB/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022012.009-693FBD7F8CB636FB/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T02:20:12,948Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022012.009-693FBD7F8CB636FB/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T02:20:12,960Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022012.009-693FBD7F8CB636FB/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T02:20:12,972Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:12,973Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T02:20:12,973Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T02:20:12,973Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T02:20:12,988Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T02:20:12,988Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL2EsuwLSamnXrFk5gyfQcM2rKXh5PE81wUHnfgNJByBgF, alias: identity-private-key {}
[INFO ] 2023-10-03T02:20:12,991Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.witness.flows.DeleteDidFlow to initiate com.persistent.did.witness.flows.DeleteDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:12,991Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T02:20:12,991Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.CreateDidFlow to initiate net.corda.samples.witness.flows.CreateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:12,991Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.flows.FetchDidDocumentFromRegistryNodeFlow to initiate net.corda.samples.witness.flows.FetchDidDocumentFromRegistryNodeResponderFlow (version 1) {}
[INFO ] 2023-10-03T02:20:12,991Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.UpdateDidFlow to initiate net.corda.samples.witness.flows.UpdateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:12,992Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T02:20:12.009Z
      epoch=1
  } {}
[WARN ] 2023-10-03T02:20:13,128Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.persistent.did.state.DidSchema v1 {}
[INFO ] 2023-10-03T02:20:13,143Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T02:20:13,144Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:13,144Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:13,254Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:13,256Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T02:20:13,257Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299613256), owningKey=DL2EsuwLSamnXrFk5gyfQcM2rKXh5PE81wUHnfgNJByBgF {}
[INFO ] 2023-10-03T02:20:13,257Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:13,260Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299613256) {}
[INFO ] 2023-10-03T02:20:13,262Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T02:20:13,262Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T02:20:13,262Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T02:20:13,266Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299613256), owningKey=DL2EsuwLSamnXrFk5gyfQcM2rKXh5PE81wUHnfgNJByBgF {}
[INFO ] 2023-10-03T02:20:13,266Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:13,323Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=5D8DB4D902E807E63DE1E9414EAC4E7A72D384C58FE69BF142B366888EAC7D30 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T02:20:13,335Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299613256) {}
[INFO ] 2023-10-03T02:20:13,335Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T02:20:13,336Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299612427), owningKey=DLFg7fjeQ1a1Rvb83TSMr2zjkrfnNwhHWRNXbgsEY65amX {}
[INFO ] 2023-10-03T02:20:13,336Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T02:20:13,343Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299613256), owningKey=DL2EsuwLSamnXrFk5gyfQcM2rKXh5PE81wUHnfgNJByBgF {}
[INFO ] 2023-10-03T02:20:13,343Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:13,348Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299612851), owningKey=DL4SUVURufZq8Si3Fkz8M6JAEgwFD9UjZGAsXsE1oa4UYm {}
[INFO ] 2023-10-03T02:20:13,348Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:13,353Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299613256), owningKey=DL2EsuwLSamnXrFk5gyfQcM2rKXh5PE81wUHnfgNJByBgF {}
[INFO ] 2023-10-03T02:20:13,353Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:13,358Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299613256), owningKey=DL2EsuwLSamnXrFk5gyfQcM2rKXh5PE81wUHnfgNJByBgF {}
[INFO ] 2023-10-03T02:20:13,358Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:13,358Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299613256), owningKey=DL2EsuwLSamnXrFk5gyfQcM2rKXh5PE81wUHnfgNJByBgF {}
[INFO ] 2023-10-03T02:20:13,358Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-10-03T02:20:13,358Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-10-03T02:20:13,358Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-10-03T02:20:13,358Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-10-03T02:20:13,358Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T02:20:13,515Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=29c8e2ea-85ba-46ac-b773-cca25ae42d2b, invocation_id=80f1bd28-a7b4-4448-878f-6ca8fbbba854, invocation_timestamp=2023-10-03T02:20:13.505Z, origin=O=Mock Company 1, L=London, C=GB, session_id=80f1bd28-a7b4-4448-878f-6ca8fbbba854, session_timestamp=2023-10-03T02:20:13.505Z, thread-id=1898, tx_id=6455F430A4006183FFD5A789168CD4FDB01393C892E4F1637F61D37C87D5E20E}
[INFO ] 2023-10-03T02:20:13,524Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=29c8e2ea-85ba-46ac-b773-cca25ae42d2b, invocation_id=80f1bd28-a7b4-4448-878f-6ca8fbbba854, invocation_timestamp=2023-10-03T02:20:13.505Z, origin=O=Mock Company 1, L=London, C=GB, session_id=80f1bd28-a7b4-4448-878f-6ca8fbbba854, session_timestamp=2023-10-03T02:20:13.505Z, thread-id=1898, tx_id=6455F430A4006183FFD5A789168CD4FDB01393C892E4F1637F61D37C87D5E20E}
[INFO ] 2023-10-03T02:20:13,618Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=b40b6187-c07f-421a-bd2a-6abcaf815a88, invocation_id=aa813a1a-a3bd-4b9f-bf91-e8ae25aab9e9, invocation_timestamp=2023-10-03T02:20:13.359Z, origin=Only For Testing, session_id=aa813a1a-a3bd-4b9f-bf91-e8ae25aab9e9, session_timestamp=2023-10-03T02:20:13.359Z, thread-id=1898, tx_id=6455F430A4006183FFD5A789168CD4FDB01393C892E4F1637F61D37C87D5E20E}
[INFO ] 2023-10-03T02:20:13,618Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=b40b6187-c07f-421a-bd2a-6abcaf815a88, invocation_id=aa813a1a-a3bd-4b9f-bf91-e8ae25aab9e9, invocation_timestamp=2023-10-03T02:20:13.359Z, origin=Only For Testing, session_id=aa813a1a-a3bd-4b9f-bf91-e8ae25aab9e9, session_timestamp=2023-10-03T02:20:13.359Z, thread-id=1898, tx_id=6455F430A4006183FFD5A789168CD4FDB01393C892E4F1637F61D37C87D5E20E}
[INFO ] 2023-10-03T02:20:13,628Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=b40b6187-c07f-421a-bd2a-6abcaf815a88, invocation_id=aa813a1a-a3bd-4b9f-bf91-e8ae25aab9e9, invocation_timestamp=2023-10-03T02:20:13.359Z, origin=Only For Testing, session_id=aa813a1a-a3bd-4b9f-bf91-e8ae25aab9e9, session_timestamp=2023-10-03T02:20:13.359Z, thread-id=1898, tx_id=6455F430A4006183FFD5A789168CD4FDB01393C892E4F1637F61D37C87D5E20E}
[INFO ] 2023-10-03T02:20:13,638Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=29c8e2ea-85ba-46ac-b773-cca25ae42d2b, invocation_id=80f1bd28-a7b4-4448-878f-6ca8fbbba854, invocation_timestamp=2023-10-03T02:20:13.505Z, origin=O=Mock Company 1, L=London, C=GB, session_id=80f1bd28-a7b4-4448-878f-6ca8fbbba854, session_timestamp=2023-10-03T02:20:13.505Z, thread-id=1898, tx_id=6455F430A4006183FFD5A789168CD4FDB01393C892E4F1637F61D37C87D5E20E}
[INFO ] 2023-10-03T02:20:13,643Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=29c8e2ea-85ba-46ac-b773-cca25ae42d2b, invocation_id=80f1bd28-a7b4-4448-878f-6ca8fbbba854, invocation_timestamp=2023-10-03T02:20:13.505Z, origin=O=Mock Company 1, L=London, C=GB, session_id=80f1bd28-a7b4-4448-878f-6ca8fbbba854, session_timestamp=2023-10-03T02:20:13.505Z, thread-id=1898, tx_id=6455F430A4006183FFD5A789168CD4FDB01393C892E4F1637F61D37C87D5E20E}
[INFO ] 2023-10-03T02:20:13,644Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=29c8e2ea-85ba-46ac-b773-cca25ae42d2b, invocation_id=80f1bd28-a7b4-4448-878f-6ca8fbbba854, invocation_timestamp=2023-10-03T02:20:13.505Z, origin=O=Mock Company 1, L=London, C=GB, session_id=80f1bd28-a7b4-4448-878f-6ca8fbbba854, session_timestamp=2023-10-03T02:20:13.505Z, thread-id=1898, tx_id=6455F430A4006183FFD5A789168CD4FDB01393C892E4F1637F61D37C87D5E20E}
[INFO ] 2023-10-03T02:20:13,649Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=29c8e2ea-85ba-46ac-b773-cca25ae42d2b, invocation_id=80f1bd28-a7b4-4448-878f-6ca8fbbba854, invocation_timestamp=2023-10-03T02:20:13.505Z, origin=O=Mock Company 1, L=London, C=GB, session_id=80f1bd28-a7b4-4448-878f-6ca8fbbba854, session_timestamp=2023-10-03T02:20:13.505Z, thread-id=1898, tx_id=6455F430A4006183FFD5A789168CD4FDB01393C892E4F1637F61D37C87D5E20E}
[INFO ] 2023-10-03T02:20:13,655Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=b40b6187-c07f-421a-bd2a-6abcaf815a88, invocation_id=aa813a1a-a3bd-4b9f-bf91-e8ae25aab9e9, invocation_timestamp=2023-10-03T02:20:13.359Z, origin=Only For Testing, session_id=aa813a1a-a3bd-4b9f-bf91-e8ae25aab9e9, session_timestamp=2023-10-03T02:20:13.359Z, thread-id=1898, tx_id=6455F430A4006183FFD5A789168CD4FDB01393C892E4F1637F61D37C87D5E20E}
[INFO ] 2023-10-03T02:20:13,655Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=b40b6187-c07f-421a-bd2a-6abcaf815a88, invocation_id=aa813a1a-a3bd-4b9f-bf91-e8ae25aab9e9, invocation_timestamp=2023-10-03T02:20:13.359Z, origin=Only For Testing, session_id=aa813a1a-a3bd-4b9f-bf91-e8ae25aab9e9, session_timestamp=2023-10-03T02:20:13.359Z, thread-id=1898, tx_id=6455F430A4006183FFD5A789168CD4FDB01393C892E4F1637F61D37C87D5E20E}
[INFO ] 2023-10-03T02:20:13,659Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T02:20:13,660Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-13) {}
[INFO ] 2023-10-03T02:20:13,678Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T02:20:13,678Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:13,679Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T02:20:13,679Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-14) {}
[INFO ] 2023-10-03T02:20:13,693Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T02:20:13,693Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:13,694Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T02:20:13,694Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-15) {}
[INFO ] 2023-10-03T02:20:13,710Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T02:20:13,710Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:13,773Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-022013.711-1918518AD1A9BA60/nodes/0/cordapps] {}
[INFO ] 2023-10-03T02:20:13,773Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022013.711-1918518AD1A9BA60/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022013.711-1918518AD1A9BA60/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T02:20:13,773Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022013.711-1918518AD1A9BA60/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T02:20:13,792Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022013.711-1918518AD1A9BA60/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T02:20:13,806Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:13,807Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T02:20:13,808Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T02:20:13,808Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T02:20:13,809Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T02:20:13,809Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLC7FiGP9djfSAYHaXhibZUwJxfAL1UYoyGE7YBE6SGZ3T, alias: identity-private-key {}
[INFO ] 2023-10-03T02:20:13,813Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.witness.flows.DeleteDidFlow to initiate com.persistent.did.witness.flows.DeleteDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:13,813Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T02:20:13,813Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.CreateDidFlow to initiate net.corda.samples.witness.flows.CreateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:13,813Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.flows.FetchDidDocumentFromRegistryNodeFlow to initiate net.corda.samples.witness.flows.FetchDidDocumentFromRegistryNodeResponderFlow (version 1) {}
[INFO ] 2023-10-03T02:20:13,813Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.UpdateDidFlow to initiate net.corda.samples.witness.flows.UpdateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:13,817Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T02:20:13.711Z
      epoch=1
  } {}
[WARN ] 2023-10-03T02:20:14,057Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.persistent.did.state.DidSchema v1 {}
[INFO ] 2023-10-03T02:20:14,075Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T02:20:14,076Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T02:20:14,077Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T02:20:14,180Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-10-03T02:20:14,182Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T02:20:14,183Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299614182), owningKey=DLC7FiGP9djfSAYHaXhibZUwJxfAL1UYoyGE7YBE6SGZ3T {}
[INFO ] 2023-10-03T02:20:14,183Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T02:20:14,190Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299614182) {}
[INFO ] 2023-10-03T02:20:14,195Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T02:20:14,195Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T02:20:14,195Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T02:20:14,200Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299614182), owningKey=DLC7FiGP9djfSAYHaXhibZUwJxfAL1UYoyGE7YBE6SGZ3T {}
[INFO ] 2023-10-03T02:20:14,200Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:14,256Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=5D8DB4D902E807E63DE1E9414EAC4E7A72D384C58FE69BF142B366888EAC7D30 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T02:20:14,258Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-10-03T02:20:14,271Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299614182) {}
[INFO ] 2023-10-03T02:20:14,272Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T02:20:14,272Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299614182), owningKey=DLC7FiGP9djfSAYHaXhibZUwJxfAL1UYoyGE7YBE6SGZ3T {}
[INFO ] 2023-10-03T02:20:14,272Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:14,272Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299614182), owningKey=DLC7FiGP9djfSAYHaXhibZUwJxfAL1UYoyGE7YBE6SGZ3T {}
[INFO ] 2023-10-03T02:20:14,272Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:14,275Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-022013.711-1918518AD1A9BA60/nodes/1/cordapps] {}
[INFO ] 2023-10-03T02:20:14,275Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022013.711-1918518AD1A9BA60/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022013.711-1918518AD1A9BA60/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T02:20:14,275Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022013.711-1918518AD1A9BA60/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T02:20:14,288Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022013.711-1918518AD1A9BA60/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T02:20:14,301Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:14,301Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T02:20:14,302Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T02:20:14,302Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T02:20:14,318Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T02:20:14,318Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLAPBB6TfrRzrQfNXCCQvWfhh3RNQmdiDE66aZ2zR4A4rT, alias: identity-private-key {}
[INFO ] 2023-10-03T02:20:14,322Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.witness.flows.DeleteDidFlow to initiate com.persistent.did.witness.flows.DeleteDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:14,322Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T02:20:14,322Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.CreateDidFlow to initiate net.corda.samples.witness.flows.CreateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:14,322Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.flows.FetchDidDocumentFromRegistryNodeFlow to initiate net.corda.samples.witness.flows.FetchDidDocumentFromRegistryNodeResponderFlow (version 1) {}
[INFO ] 2023-10-03T02:20:14,322Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.UpdateDidFlow to initiate net.corda.samples.witness.flows.UpdateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:14,323Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T02:20:13.711Z
      epoch=1
  } {}
[WARN ] 2023-10-03T02:20:14,464Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.persistent.did.state.DidSchema v1 {}
[INFO ] 2023-10-03T02:20:14,482Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T02:20:14,482Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:14,483Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:14,612Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:14,615Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T02:20:14,616Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299614615), owningKey=DLAPBB6TfrRzrQfNXCCQvWfhh3RNQmdiDE66aZ2zR4A4rT {}
[INFO ] 2023-10-03T02:20:14,616Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:14,620Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299614615) {}
[INFO ] 2023-10-03T02:20:14,623Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T02:20:14,623Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T02:20:14,623Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T02:20:14,627Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299614615), owningKey=DLAPBB6TfrRzrQfNXCCQvWfhh3RNQmdiDE66aZ2zR4A4rT {}
[INFO ] 2023-10-03T02:20:14,627Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:14,687Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=5D8DB4D902E807E63DE1E9414EAC4E7A72D384C58FE69BF142B366888EAC7D30 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T02:20:14,704Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299614615) {}
[INFO ] 2023-10-03T02:20:14,704Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T02:20:14,705Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299614182), owningKey=DLC7FiGP9djfSAYHaXhibZUwJxfAL1UYoyGE7YBE6SGZ3T {}
[INFO ] 2023-10-03T02:20:14,705Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T02:20:14,710Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299614615), owningKey=DLAPBB6TfrRzrQfNXCCQvWfhh3RNQmdiDE66aZ2zR4A4rT {}
[INFO ] 2023-10-03T02:20:14,710Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:14,715Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299614615), owningKey=DLAPBB6TfrRzrQfNXCCQvWfhh3RNQmdiDE66aZ2zR4A4rT {}
[INFO ] 2023-10-03T02:20:14,715Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:14,715Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299614615), owningKey=DLAPBB6TfrRzrQfNXCCQvWfhh3RNQmdiDE66aZ2zR4A4rT {}
[INFO ] 2023-10-03T02:20:14,715Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:14,718Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20231003-022013.711-1918518AD1A9BA60/nodes/2/cordapps] {}
[INFO ] 2023-10-03T02:20:14,719Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022013.711-1918518AD1A9BA60/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022013.711-1918518AD1A9BA60/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-10-03T02:20:14,719Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022013.711-1918518AD1A9BA60/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-10-03T02:20:14,732Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/home/annisa/Documents/Corda/samples-kotlin/Basic/cordapp-example/workflows/build/mock-network/20231003-022013.711-1918518AD1A9BA60/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-10-03T02:20:14,746Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:14,747Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-10-03T02:20:14,747Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-10-03T02:20:14,747Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [WAITING_TO_START] -> [STARTING] {}
[INFO ] 2023-10-03T02:20:14,765Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-10-03T02:20:14,765Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL65KbwCNx8eMxpMLS7itRW4ysHYSPZ673GUAGtASA3em3, alias: identity-private-key {}
[INFO ] 2023-10-03T02:20:14,769Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.witness.flows.DeleteDidFlow to initiate com.persistent.did.witness.flows.DeleteDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:14,769Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T02:20:14,769Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.CreateDidFlow to initiate net.corda.samples.witness.flows.CreateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:14,769Z [Test worker] internal.NodeFlowManager. - Registered com.persistent.did.flows.FetchDidDocumentFromRegistryNodeFlow to initiate net.corda.samples.witness.flows.FetchDidDocumentFromRegistryNodeResponderFlow (version 1) {}
[INFO ] 2023-10-03T02:20:14,769Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.witness.flows.UpdateDidFlow to initiate net.corda.samples.witness.flows.UpdateDidFinalityFlowResponder (version 1) {}
[INFO ] 2023-10-03T02:20:14,771Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-10-03T02:20:13.711Z
      epoch=1
  } {}
[WARN ] 2023-10-03T02:20:14,913Z [Test worker] persistence.SchemaMigration. - No migration defined for schema: com.persistent.did.state.DidSchema v1 {}
[INFO ] 2023-10-03T02:20:14,932Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-10-03T02:20:14,933Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:14,933Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:15,026Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), DidStateSchemaV1(name=com.persistent.did.state.DidSchema, version=1), IOUSchemaV1(name=net.corda.samples.example.schema.IOUSchema, version=1)] {}
[INFO ] 2023-10-03T02:20:15,028Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-10-03T02:20:15,029Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299615028), owningKey=DL65KbwCNx8eMxpMLS7itRW4ysHYSPZ673GUAGtASA3em3 {}
[INFO ] 2023-10-03T02:20:15,029Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:15,032Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299615028) {}
[INFO ] 2023-10-03T02:20:15,036Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-10-03T02:20:15,036Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-10-03T02:20:15,036Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-10-03T02:20:15,041Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299615028), owningKey=DL65KbwCNx8eMxpMLS7itRW4ysHYSPZ673GUAGtASA3em3 {}
[INFO ] 2023-10-03T02:20:15,041Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:15,118Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=5D8DB4D902E807E63DE1E9414EAC4E7A72D384C58FE69BF142B366888EAC7D30 uploader=app filename=Example-Cordapp Contracts {}
[INFO ] 2023-10-03T02:20:15,131Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299615028) {}
[INFO ] 2023-10-03T02:20:15,131Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTING] -> [STARTED] {}
[INFO ] 2023-10-03T02:20:15,132Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=12, serial=1696299614182), owningKey=DLC7FiGP9djfSAYHaXhibZUwJxfAL1UYoyGE7YBE6SGZ3T {}
[INFO ] 2023-10-03T02:20:15,132Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2023-10-03T02:20:15,139Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299615028), owningKey=DL65KbwCNx8eMxpMLS7itRW4ysHYSPZ673GUAGtASA3em3 {}
[INFO ] 2023-10-03T02:20:15,139Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:15,144Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=12, serial=1696299614615), owningKey=DLAPBB6TfrRzrQfNXCCQvWfhh3RNQmdiDE66aZ2zR4A4rT {}
[INFO ] 2023-10-03T02:20:15,144Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:15,147Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299615028), owningKey=DL65KbwCNx8eMxpMLS7itRW4ysHYSPZ673GUAGtASA3em3 {}
[INFO ] 2023-10-03T02:20:15,147Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-10-03T02:20:15,151Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299615028), owningKey=DL65KbwCNx8eMxpMLS7itRW4ysHYSPZ673GUAGtASA3em3 {}
[INFO ] 2023-10-03T02:20:15,151Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-10-03T02:20:15,151Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=12, serial=1696299615028), owningKey=DL65KbwCNx8eMxpMLS7itRW4ysHYSPZ673GUAGtASA3em3 {}
[INFO ] 2023-10-03T02:20:15,151Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-10-03T02:20:15,151Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-10-03T02:20:15,151Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2023-10-03T02:20:15,151Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.example.flows.ExampleFlow$Initiator, currently using: class net.corda.samples.example.flows.ExampleFlow$Acceptor {}
[INFO ] 2023-10-03T02:20:15,151Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.example.flows.ExampleFlow$Initiator to initiate net.corda.samples.example.flows.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2023-10-03T02:20:15,263Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=ff1ecd7b-6a7a-4089-9282-35faf266a700, invocation_id=0c8c5288-eeb1-4a53-a979-c7f4d04ef0fd, invocation_timestamp=2023-10-03T02:20:15.252Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0c8c5288-eeb1-4a53-a979-c7f4d04ef0fd, session_timestamp=2023-10-03T02:20:15.252Z, thread-id=2276, tx_id=34D2C41B26D82AFF9E27FAD55C5E9711334CDE965A678DE3C97CA9F4370E6498}
[INFO ] 2023-10-03T02:20:15,273Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=ff1ecd7b-6a7a-4089-9282-35faf266a700, invocation_id=0c8c5288-eeb1-4a53-a979-c7f4d04ef0fd, invocation_timestamp=2023-10-03T02:20:15.252Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0c8c5288-eeb1-4a53-a979-c7f4d04ef0fd, session_timestamp=2023-10-03T02:20:15.252Z, thread-id=2276, tx_id=34D2C41B26D82AFF9E27FAD55C5E9711334CDE965A678DE3C97CA9F4370E6498}
[INFO ] 2023-10-03T02:20:15,609Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=77253735-c7d5-478e-81fc-65c351465402, invocation_id=6257a9f2-694a-4944-9fd1-a7a88f0035ad, invocation_timestamp=2023-10-03T02:20:15.152Z, origin=Only For Testing, session_id=6257a9f2-694a-4944-9fd1-a7a88f0035ad, session_timestamp=2023-10-03T02:20:15.152Z, thread-id=2276, tx_id=34D2C41B26D82AFF9E27FAD55C5E9711334CDE965A678DE3C97CA9F4370E6498}
[INFO ] 2023-10-03T02:20:15,609Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=77253735-c7d5-478e-81fc-65c351465402, invocation_id=6257a9f2-694a-4944-9fd1-a7a88f0035ad, invocation_timestamp=2023-10-03T02:20:15.152Z, origin=Only For Testing, session_id=6257a9f2-694a-4944-9fd1-a7a88f0035ad, session_timestamp=2023-10-03T02:20:15.152Z, thread-id=2276, tx_id=34D2C41B26D82AFF9E27FAD55C5E9711334CDE965A678DE3C97CA9F4370E6498}
[INFO ] 2023-10-03T02:20:15,620Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=77253735-c7d5-478e-81fc-65c351465402, invocation_id=6257a9f2-694a-4944-9fd1-a7a88f0035ad, invocation_timestamp=2023-10-03T02:20:15.152Z, origin=Only For Testing, session_id=6257a9f2-694a-4944-9fd1-a7a88f0035ad, session_timestamp=2023-10-03T02:20:15.152Z, thread-id=2276, tx_id=34D2C41B26D82AFF9E27FAD55C5E9711334CDE965A678DE3C97CA9F4370E6498}
[INFO ] 2023-10-03T02:20:15,631Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=ff1ecd7b-6a7a-4089-9282-35faf266a700, invocation_id=0c8c5288-eeb1-4a53-a979-c7f4d04ef0fd, invocation_timestamp=2023-10-03T02:20:15.252Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0c8c5288-eeb1-4a53-a979-c7f4d04ef0fd, session_timestamp=2023-10-03T02:20:15.252Z, thread-id=2276, tx_id=34D2C41B26D82AFF9E27FAD55C5E9711334CDE965A678DE3C97CA9F4370E6498}
[INFO ] 2023-10-03T02:20:15,636Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=ff1ecd7b-6a7a-4089-9282-35faf266a700, invocation_id=0c8c5288-eeb1-4a53-a979-c7f4d04ef0fd, invocation_timestamp=2023-10-03T02:20:15.252Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0c8c5288-eeb1-4a53-a979-c7f4d04ef0fd, session_timestamp=2023-10-03T02:20:15.252Z, thread-id=2276, tx_id=34D2C41B26D82AFF9E27FAD55C5E9711334CDE965A678DE3C97CA9F4370E6498}
[INFO ] 2023-10-03T02:20:15,638Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000011, flow-id=ff1ecd7b-6a7a-4089-9282-35faf266a700, invocation_id=0c8c5288-eeb1-4a53-a979-c7f4d04ef0fd, invocation_timestamp=2023-10-03T02:20:15.252Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0c8c5288-eeb1-4a53-a979-c7f4d04ef0fd, session_timestamp=2023-10-03T02:20:15.252Z, thread-id=2276, tx_id=34D2C41B26D82AFF9E27FAD55C5E9711334CDE965A678DE3C97CA9F4370E6498}
[INFO ] 2023-10-03T02:20:15,642Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000011, flow-id=ff1ecd7b-6a7a-4089-9282-35faf266a700, invocation_id=0c8c5288-eeb1-4a53-a979-c7f4d04ef0fd, invocation_timestamp=2023-10-03T02:20:15.252Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0c8c5288-eeb1-4a53-a979-c7f4d04ef0fd, session_timestamp=2023-10-03T02:20:15.252Z, thread-id=2276, tx_id=34D2C41B26D82AFF9E27FAD55C5E9711334CDE965A678DE3C97CA9F4370E6498}
[INFO ] 2023-10-03T02:20:15,649Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=77253735-c7d5-478e-81fc-65c351465402, invocation_id=6257a9f2-694a-4944-9fd1-a7a88f0035ad, invocation_timestamp=2023-10-03T02:20:15.152Z, origin=Only For Testing, session_id=6257a9f2-694a-4944-9fd1-a7a88f0035ad, session_timestamp=2023-10-03T02:20:15.152Z, thread-id=2276, tx_id=34D2C41B26D82AFF9E27FAD55C5E9711334CDE965A678DE3C97CA9F4370E6498}
[INFO ] 2023-10-03T02:20:15,649Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=77253735-c7d5-478e-81fc-65c351465402, invocation_id=6257a9f2-694a-4944-9fd1-a7a88f0035ad, invocation_timestamp=2023-10-03T02:20:15.152Z, origin=Only For Testing, session_id=6257a9f2-694a-4944-9fd1-a7a88f0035ad, session_timestamp=2023-10-03T02:20:15.152Z, thread-id=2276, tx_id=34D2C41B26D82AFF9E27FAD55C5E9711334CDE965A678DE3C97CA9F4370E6498}
[INFO ] 2023-10-03T02:20:15,715Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T02:20:15,716Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-16) {}
[INFO ] 2023-10-03T02:20:15,736Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T02:20:15,736Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:15,736Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T02:20:15,736Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-17) {}
[INFO ] 2023-10-03T02:20:15,751Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T02:20:15,751Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-10-03T02:20:15,752Z [Test worker] internal.InternalMockNetwork$MockNode. - Node status update: [STARTED] -> [STOPPING] {}
[INFO ] 2023-10-03T02:20:15,753Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-18) {}
[INFO ] 2023-10-03T02:20:15,767Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-10-03T02:20:15,767Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
